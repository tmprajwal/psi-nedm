(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    717394,      16611]
NotebookOptionsPosition[    612188,      13777]
NotebookOutlinePosition[    676281,      15365]
CellTagsIndexPosition[    673398,      15298]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Chapter 8
Exploration and
Transformation of Data\
\>", "Title",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
So far we have examined techniques for handling data when we believe the \
following:\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["1", "TB"],
 StyleBox[".", "TB"],
 " The data are modeled by a linear relationship, especially a straight line \
or curve."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["2", "TB"],
 StyleBox[".", "TB"],
 " The data are modeled by a nonlinear relationship, such as a Gaussian."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["3.", "TB"],
 " The data are \[OpenCurlyDoubleQuote]smooth",
 "\[CloseCurlyDoubleQuote]",
 " in some sense and/or can be described by some nonparametric fit."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["4.", "TB"],
 " The data contain \[OpenCurlyDoubleQuote]outliers",
 "\[CloseCurlyDoubleQuote]",
 " which should be suppressed in the context of the analysis."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Sometimes we are confronted by data about which we have no knowledge of the \
relations that may exist within it, or what sort of values might be expected \
for some relation or model. This chapter discusses some techniques for \
exploring such a data set. As we shall see, sometimes the exploration leads \
us to transform the original data into other forms.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Also included in Section 8.3 is a discussion of the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["FindPeaks", "MR"],
 " briefly introduced in Chapter 5."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Section 8.4 discusses a convenience routine ",
 StyleBox["FitPeaks ", "MR"],
 "which bundles ",
 StyleBox["FindPeaks", "MR"],
 " and ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 " together for fitting reasonably simple spectra to Gaussians or \
Lorentzians; the routine is named ",
 StyleBox["FitPeaks", "MR"],
 ". Also discussed in this section is another convenience routine ",
 StyleBox["FitExponent ", "MR"],
 "to automatically fit data to exponentials of the form ",
 StyleBox["y = A ", "MR",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"B", " ", "x"}]], TraditionalForm]], "MR"],
 " without introducing the biases inherent in simple linearization schemes."
}], "Text"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is a particularly rich environment for exploratory data analysis, and \
there is a growing literature on using it for this purpose. This chapter does \
not attempt to repeat the material readily available elsewhere. Some \
references are listed in Section 8.4."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["8.1 Graphical Exploration", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "As we have seen repeatedly in the previous chapters, graphs are invaluable \
in data analysis. ",
 StyleBox["Experimental Data Analyst",
  FontSlant->"Italic"],
 " (",
 StyleBox["EDA",
  FontSlant->"Italic"],
 ") supplies some specific graphics functions, such as ",
 StyleBox["ShowLinearFit", "MR"],
 " discussed in Chapter 4. ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " also supplies some general purpose graphical functions that supplement the \
standard graphics routines of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and those functions are described in this section."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["8.1.1 EDAListPlot", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"EDAListPlot"],

Cell[TextData[{
 "The ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["EDAListPlot", "MR"],
 " was briefly introduced in Chapter 1. Here we review and extend that \
introduction."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"EDAListPlot"],

Cell[TextData[{
 "Internally, ",
 StyleBox["EDAListPlot",
  FontFamily->"Courier"],
 " used the built-in ",
 StyleBox["ListPlot",
  FontFamily->"Courier"],
 " for data without errors and ",
 StyleBox["ErrorListPlot",
  FontFamily->"Courier"],
 " from the ",
 StyleBox["ErrorBarPlots",
  FontFamily->"Courier"],
 " package for data with errors. The advantage of ",
 StyleBox["EDAListPlot",
  FontFamily->"Courier"],
 " is that it reocgnizes data in the EDA format and automatically invokes the \
appropriate function."
}], "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.452250348078125*^9, 3.452250429359375*^9}},
 AspectRatioFixed->True,
 CellTags->"EDAListPlot"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.4522506000625*^9, 3.4522506078125*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "GanglionData", "]"}]], "Input",
 CellChangeTimes->{{3.4522505355625*^9, 3.452250540390625*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{11.1, 2.56}, {13.6, 2.87}, {22.5, 2.96}, {31.4, 3.75}, {32.7, 
     3.42}, {34., 3.5}, {53.8, 4.55}, {63., 4.68}, {67., 6.98}, {81., 6.85}, {
     101., 11.25}, {107., 10.91}, {114., 11.1}, {141., 18.29}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 141.}, {0, 18.29}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4522505409375*^9, 3.45225200203125*^9, 
  3.452254545046875*^9, 3.514555933563875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "PearsonYorkData", "]"}]], "Input",
 CellChangeTimes->{{3.452250545296875*^9, 3.452250551609375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{0., 5.9}, {0.9, 5.4}, {1.8, 4.4}, {2.6, 4.6}, {3.3, 3.5}, {4.4,
      3.7}, {5.2, 2.8}, {6.1, 2.8}, {6.5, 2.4}, {7.4, 
     1.5}}], {{LineBox[{{0.0316, 5.9}, {-0.0316, 5.9}}], 
      LineBox[{Offset[{0, 1.5}, {0.0316, 5.9}], 
        Offset[{0, -1.5}, {0.0316, 5.9}]}], 
      LineBox[{Offset[{0, 1.5}, {-0.0316, 5.9}], 
        Offset[{0, -1.5}, {-0.0316, 5.9}]}], LineBox[{{0., 6.9}, {0., 4.9}}], 
      LineBox[{Offset[{1.5, 0}, {0., 6.9}], Offset[{-1.5, 0}, {0., 6.9}]}], 
      LineBox[{Offset[{1.5, 0}, {0., 4.9}], Offset[{-1.5, 0}, {0., 4.9}]}]}, {
      LineBox[{{0.9316, 5.4}, {0.8684000000000001, 5.4}}], 
      LineBox[{Offset[{0, 1.5}, {0.9316, 5.4}], 
        Offset[{0, -1.5}, {0.9316, 5.4}]}], 
      LineBox[{Offset[{0, 1.5}, {0.8684000000000001, 5.4}], 
        Offset[{0, -1.5}, {0.8684000000000001, 5.4}]}], 
      LineBox[{{0.9, 6.146000000000001}, {0.9, 4.654}}], 
      LineBox[{Offset[{1.5, 0}, {0.9, 6.146000000000001}], 
        Offset[{-1.5, 0}, {0.9, 6.146000000000001}]}], 
      LineBox[{Offset[{1.5, 0}, {0.9, 4.654}], 
        Offset[{-1.5, 0}, {0.9, 4.654}]}]}, {
      LineBox[{{1.8447, 4.4}, {1.7553, 4.4}}], 
      LineBox[{Offset[{0, 1.5}, {1.8447, 4.4}], 
        Offset[{0, -1.5}, {1.8447, 4.4}]}], 
      LineBox[{Offset[{0, 1.5}, {1.7553, 4.4}], 
        Offset[{0, -1.5}, {1.7553, 4.4}]}], 
      LineBox[{{1.8, 4.9}, {1.8, 3.9000000000000004`}}], 
      LineBox[{Offset[{1.5, 0}, {1.8, 4.9}], Offset[{-1.5, 0}, {1.8, 4.9}]}], 
      LineBox[{Offset[{1.5, 0}, {1.8, 3.9000000000000004`}], 
        Offset[{-1.5, 0}, {1.8, 3.9000000000000004`}]}]}, {
      LineBox[{{2.6354, 4.6}, {2.5646, 4.6}}], 
      LineBox[{Offset[{0, 1.5}, {2.6354, 4.6}], 
        Offset[{0, -1.5}, {2.6354, 4.6}]}], 
      LineBox[{Offset[{0, 1.5}, {2.5646, 4.6}], 
        Offset[{0, -1.5}, {2.5646, 4.6}]}], 
      LineBox[{{2.6, 4.954}, {2.6, 4.2459999999999996`}}], 
      LineBox[{Offset[{1.5, 0}, {2.6, 4.954}], 
        Offset[{-1.5, 0}, {2.6, 4.954}]}], 
      LineBox[{Offset[{1.5, 0}, {2.6, 4.2459999999999996`}], 
        Offset[{-1.5, 0}, {2.6, 4.2459999999999996`}]}]}, {
      LineBox[{{3.3707, 3.5}, {3.2293, 3.5}}], 
      LineBox[{Offset[{0, 1.5}, {3.3707, 3.5}], 
        Offset[{0, -1.5}, {3.3707, 3.5}]}], 
      LineBox[{Offset[{0, 1.5}, {3.2293, 3.5}], 
        Offset[{0, -1.5}, {3.2293, 3.5}]}], 
      LineBox[{{3.3, 3.724}, {3.3, 3.276}}], 
      LineBox[{Offset[{1.5, 0}, {3.3, 3.724}], 
        Offset[{-1.5, 0}, {3.3, 3.724}]}], 
      LineBox[{Offset[{1.5, 0}, {3.3, 3.276}], 
        Offset[{-1.5, 0}, {3.3, 3.276}]}]}, {
      LineBox[{{4.5118, 3.7}, {4.288200000000001, 3.7}}], 
      LineBox[{Offset[{0, 1.5}, {4.5118, 3.7}], 
        Offset[{0, -1.5}, {4.5118, 3.7}]}], 
      LineBox[{Offset[{0, 1.5}, {4.288200000000001, 3.7}], 
        Offset[{0, -1.5}, {4.288200000000001, 3.7}]}], 
      LineBox[{{4.4, 3.9240000000000004`}, {4.4, 3.476}}], 
      LineBox[{Offset[{1.5, 0}, {4.4, 3.9240000000000004`}], 
        Offset[{-1.5, 0}, {4.4, 3.9240000000000004`}]}], 
      LineBox[{Offset[{1.5, 0}, {4.4, 3.476}], 
        Offset[{-1.5, 0}, {4.4, 3.476}]}]}, {
      LineBox[{{5.3291, 2.8}, {5.0709, 2.8}}], 
      LineBox[{Offset[{0, 1.5}, {5.3291, 2.8}], 
        Offset[{0, -1.5}, {5.3291, 2.8}]}], 
      LineBox[{Offset[{0, 1.5}, {5.0709, 2.8}], 
        Offset[{0, -1.5}, {5.0709, 2.8}]}], 
      LineBox[{{5.2, 2.92}, {5.2, 2.6799999999999997`}}], 
      LineBox[{Offset[{1.5, 0}, {5.2, 2.92}], 
        Offset[{-1.5, 0}, {5.2, 2.92}]}], 
      LineBox[{Offset[{1.5, 0}, {5.2, 2.6799999999999997`}], 
        Offset[{-1.5, 0}, {5.2, 2.6799999999999997`}]}]}, {
      LineBox[{{6.3236, 2.8}, {5.876399999999999, 2.8}}], 
      LineBox[{Offset[{0, 1.5}, {6.3236, 2.8}], 
        Offset[{0, -1.5}, {6.3236, 2.8}]}], 
      LineBox[{Offset[{0, 1.5}, {5.876399999999999, 2.8}], 
        Offset[{0, -1.5}, {5.876399999999999, 2.8}]}], 
      LineBox[{{6.1, 2.92}, {6.1, 2.6799999999999997`}}], 
      LineBox[{Offset[{1.5, 0}, {6.1, 2.92}], 
        Offset[{-1.5, 0}, {6.1, 2.92}]}], 
      LineBox[{Offset[{1.5, 0}, {6.1, 2.6799999999999997`}], 
        Offset[{-1.5, 0}, {6.1, 2.6799999999999997`}]}]}, {
      LineBox[{{7.2454, 2.4}, {5.7546, 2.4}}], 
      LineBox[{Offset[{0, 1.5}, {7.2454, 2.4}], 
        Offset[{0, -1.5}, {7.2454, 2.4}]}], 
      LineBox[{
       Offset[{0, 1.5}, {5.7546, 2.4}], Offset[{0, -1.5}, {5.7546, 2.4}]}], 
      LineBox[{{6.5, 2.5}, {6.5, 2.3}}], 
      LineBox[{Offset[{1.5, 0}, {6.5, 2.5}], Offset[{-1.5, 0}, {6.5, 2.5}]}], 
      LineBox[{Offset[{1.5, 0}, {6.5, 2.3}], 
        Offset[{-1.5, 0}, {6.5, 2.3}]}]}, {LineBox[{{8.4, 1.5}, {6.4, 1.5}}], 
      LineBox[{Offset[{0, 1.5}, {8.4, 1.5}], Offset[{0, -1.5}, {8.4, 1.5}]}], 
      LineBox[{Offset[{0, 1.5}, {6.4, 1.5}], Offset[{0, -1.5}, {6.4, 1.5}]}], 
      LineBox[{{7.4, 1.545}, {7.4, 1.455}}], 
      LineBox[{Offset[{1.5, 0}, {7.4, 1.545}], 
        Offset[{-1.5, 0}, {7.4, 1.545}]}], 
      LineBox[{Offset[{1.5, 0}, {7.4, 1.455}], 
        Offset[{-1.5, 0}, {7.4, 1.455}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 7.4}, {0, 5.9}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452250552296875*^9, 3.45225200546875*^9, 
  3.45225454884375*^9, 3.51455593373575*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["EDAListPlot", "MR"],
 " can also handle more than one data set in a single plot. "
}], "Text",
 Evaluatable->False,
 CellChangeTimes->{3.4522505908125*^9},
 AspectRatioFixed->True,
 CellTags->"EDAListPlot"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"GanglionData", ",", " ", "InterneuronData"}], "]"}]], "Input",
 CellChangeTimes->{{3.45225062859375*^9, 3.452250668109375*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{11.1, 2.56}, {13.6, 2.87}, {22.5, 2.96}, {31.4, 3.75}, {32.7, 
     3.42}, {34., 3.5}, {53.8, 4.55}, {63., 4.68}, {67., 6.98}, {81., 6.85}, {
     101., 11.25}, {107., 10.91}, {114., 11.1}, {141., 18.29}}]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/fJypd8SSRmH93yNvWZ/3Ry4SuqbBKXkHdSaze0P
zHF1kPhsaH3RXMGh0PajytmvLg735O/wliopOJw1uS8q/snZoZqzXUVZV8HB
Pnf9iet8zg6/c1cZyFkoObRVbioxr3VxmBy1jH0nr4qDls5ZtsR3Tg5bk2dL
77BQc3io8voM7017hzMbM+0S/TQcTt+PComtdnSQF3j5zfOnpoNDRl/Y6VIn
h3U6j4zX+Wk5VN++6NP008Hh9YxGYfNf+g4nuz39yh7YwPmeu3UW3v9i5bD9
qPazW0/0HQQDXCXmvDZ1eMJZy+L018DhUdUjz1mvrRw+GDyZKsZh5MD9OeVl
3i9Lh4W221+ZvjBy4PSMSfvNY+qwNkWuhuuzsUNAVENLuog5nO8uqCKXw27m
UK9S0MB4z9QheHvC5imsxg48etEl8jctHKxPHN9e8MvEITFxftWXz5YOW/07
/nHfNHW4w8zT5PnS0sFvQznjFzUjB8XDF1h5X9k5hK6b2OX33tABAPmiorU=

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 141.}, {0., 45.97822731782605}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452250683640625*^9, 3.452252008609375*^9, 
  3.452254551609375*^9, 3.51455593379825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"PearsonYorkData", ",", " ", "ThermocoupleData"}], "]"}]], "Input",
 CellChangeTimes->{{3.45225062859375*^9, 3.45225075378125*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{0., 5.9}, {0.9, 5.4}, {1.8, 4.4}, {2.6, 4.6}, {3.3, 3.5}, {4.4,
      3.7}, {5.2, 2.8}, {6.1, 2.8}, {6.5, 2.4}, {7.4, 
     1.5}}], {{LineBox[{{0.0316, 5.9}, {-0.0316, 5.9}}], 
      LineBox[{Offset[{0, 1.5}, {0.0316, 5.9}], 
        Offset[{0, -1.5}, {0.0316, 5.9}]}], 
      LineBox[{Offset[{0, 1.5}, {-0.0316, 5.9}], 
        Offset[{0, -1.5}, {-0.0316, 5.9}]}], LineBox[{{0., 6.9}, {0., 4.9}}], 
      LineBox[{Offset[{1.5, 0}, {0., 6.9}], Offset[{-1.5, 0}, {0., 6.9}]}], 
      LineBox[{Offset[{1.5, 0}, {0., 4.9}], Offset[{-1.5, 0}, {0., 4.9}]}]}, {
      LineBox[{{0.9316, 5.4}, {0.8684000000000001, 5.4}}], 
      LineBox[{Offset[{0, 1.5}, {0.9316, 5.4}], 
        Offset[{0, -1.5}, {0.9316, 5.4}]}], 
      LineBox[{Offset[{0, 1.5}, {0.8684000000000001, 5.4}], 
        Offset[{0, -1.5}, {0.8684000000000001, 5.4}]}], 
      LineBox[{{0.9, 6.146000000000001}, {0.9, 4.654}}], 
      LineBox[{Offset[{1.5, 0}, {0.9, 6.146000000000001}], 
        Offset[{-1.5, 0}, {0.9, 6.146000000000001}]}], 
      LineBox[{Offset[{1.5, 0}, {0.9, 4.654}], 
        Offset[{-1.5, 0}, {0.9, 4.654}]}]}, {
      LineBox[{{1.8447, 4.4}, {1.7553, 4.4}}], 
      LineBox[{Offset[{0, 1.5}, {1.8447, 4.4}], 
        Offset[{0, -1.5}, {1.8447, 4.4}]}], 
      LineBox[{Offset[{0, 1.5}, {1.7553, 4.4}], 
        Offset[{0, -1.5}, {1.7553, 4.4}]}], 
      LineBox[{{1.8, 4.9}, {1.8, 3.9000000000000004`}}], 
      LineBox[{Offset[{1.5, 0}, {1.8, 4.9}], Offset[{-1.5, 0}, {1.8, 4.9}]}], 
      LineBox[{Offset[{1.5, 0}, {1.8, 3.9000000000000004`}], 
        Offset[{-1.5, 0}, {1.8, 3.9000000000000004`}]}]}, {
      LineBox[{{2.6354, 4.6}, {2.5646, 4.6}}], 
      LineBox[{Offset[{0, 1.5}, {2.6354, 4.6}], 
        Offset[{0, -1.5}, {2.6354, 4.6}]}], 
      LineBox[{Offset[{0, 1.5}, {2.5646, 4.6}], 
        Offset[{0, -1.5}, {2.5646, 4.6}]}], 
      LineBox[{{2.6, 4.954}, {2.6, 4.2459999999999996`}}], 
      LineBox[{Offset[{1.5, 0}, {2.6, 4.954}], 
        Offset[{-1.5, 0}, {2.6, 4.954}]}], 
      LineBox[{Offset[{1.5, 0}, {2.6, 4.2459999999999996`}], 
        Offset[{-1.5, 0}, {2.6, 4.2459999999999996`}]}]}, {
      LineBox[{{3.3707, 3.5}, {3.2293, 3.5}}], 
      LineBox[{Offset[{0, 1.5}, {3.3707, 3.5}], 
        Offset[{0, -1.5}, {3.3707, 3.5}]}], 
      LineBox[{Offset[{0, 1.5}, {3.2293, 3.5}], 
        Offset[{0, -1.5}, {3.2293, 3.5}]}], 
      LineBox[{{3.3, 3.724}, {3.3, 3.276}}], 
      LineBox[{Offset[{1.5, 0}, {3.3, 3.724}], 
        Offset[{-1.5, 0}, {3.3, 3.724}]}], 
      LineBox[{Offset[{1.5, 0}, {3.3, 3.276}], 
        Offset[{-1.5, 0}, {3.3, 3.276}]}]}, {
      LineBox[{{4.5118, 3.7}, {4.288200000000001, 3.7}}], 
      LineBox[{Offset[{0, 1.5}, {4.5118, 3.7}], 
        Offset[{0, -1.5}, {4.5118, 3.7}]}], 
      LineBox[{Offset[{0, 1.5}, {4.288200000000001, 3.7}], 
        Offset[{0, -1.5}, {4.288200000000001, 3.7}]}], 
      LineBox[{{4.4, 3.9240000000000004`}, {4.4, 3.476}}], 
      LineBox[{Offset[{1.5, 0}, {4.4, 3.9240000000000004`}], 
        Offset[{-1.5, 0}, {4.4, 3.9240000000000004`}]}], 
      LineBox[{Offset[{1.5, 0}, {4.4, 3.476}], 
        Offset[{-1.5, 0}, {4.4, 3.476}]}]}, {
      LineBox[{{5.3291, 2.8}, {5.0709, 2.8}}], 
      LineBox[{Offset[{0, 1.5}, {5.3291, 2.8}], 
        Offset[{0, -1.5}, {5.3291, 2.8}]}], 
      LineBox[{Offset[{0, 1.5}, {5.0709, 2.8}], 
        Offset[{0, -1.5}, {5.0709, 2.8}]}], 
      LineBox[{{5.2, 2.92}, {5.2, 2.6799999999999997`}}], 
      LineBox[{Offset[{1.5, 0}, {5.2, 2.92}], 
        Offset[{-1.5, 0}, {5.2, 2.92}]}], 
      LineBox[{Offset[{1.5, 0}, {5.2, 2.6799999999999997`}], 
        Offset[{-1.5, 0}, {5.2, 2.6799999999999997`}]}]}, {
      LineBox[{{6.3236, 2.8}, {5.876399999999999, 2.8}}], 
      LineBox[{Offset[{0, 1.5}, {6.3236, 2.8}], 
        Offset[{0, -1.5}, {6.3236, 2.8}]}], 
      LineBox[{Offset[{0, 1.5}, {5.876399999999999, 2.8}], 
        Offset[{0, -1.5}, {5.876399999999999, 2.8}]}], 
      LineBox[{{6.1, 2.92}, {6.1, 2.6799999999999997`}}], 
      LineBox[{Offset[{1.5, 0}, {6.1, 2.92}], 
        Offset[{-1.5, 0}, {6.1, 2.92}]}], 
      LineBox[{Offset[{1.5, 0}, {6.1, 2.6799999999999997`}], 
        Offset[{-1.5, 0}, {6.1, 2.6799999999999997`}]}]}, {
      LineBox[{{7.2454, 2.4}, {5.7546, 2.4}}], 
      LineBox[{Offset[{0, 1.5}, {7.2454, 2.4}], 
        Offset[{0, -1.5}, {7.2454, 2.4}]}], 
      LineBox[{
       Offset[{0, 1.5}, {5.7546, 2.4}], Offset[{0, -1.5}, {5.7546, 2.4}]}], 
      LineBox[{{6.5, 2.5}, {6.5, 2.3}}], 
      LineBox[{Offset[{1.5, 0}, {6.5, 2.5}], Offset[{-1.5, 0}, {6.5, 2.5}]}], 
      LineBox[{Offset[{1.5, 0}, {6.5, 2.3}], 
        Offset[{-1.5, 0}, {6.5, 2.3}]}]}, {LineBox[{{8.4, 1.5}, {6.4, 1.5}}], 
      LineBox[{Offset[{0, 1.5}, {8.4, 1.5}], Offset[{0, -1.5}, {8.4, 1.5}]}], 
      LineBox[{Offset[{0, 1.5}, {6.4, 1.5}], Offset[{0, -1.5}, {6.4, 1.5}]}], 
      LineBox[{{7.4, 1.545}, {7.4, 1.455}}], 
      LineBox[{Offset[{1.5, 0}, {7.4, 1.545}], 
        Offset[{-1.5, 0}, {7.4, 1.545}]}], 
      LineBox[{Offset[{1.5, 0}, {7.4, 1.455}], 
        Offset[{-1.5, 0}, {7.4, 1.455}]}]}}}, 
   {Hue[0.9060679774997897, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQPVIuvcH1a92Q/hiTiAuSLPoHwVh28aMf2Hvj6A
8vUcDn8FCVyF8k0cjMHgMJRv6QAxb4o9hG/nMGsmCJyE8BscHYCGAxXcgsq7
OLS+Dtwh1/oYKu/mYMt1fXGB7SuovCfUvA9QeW+o+s9QeT+o/d8hfIcAqPm/
oOoDof75B+EfCHI4ewYEGBwg+kOg5jNB+A6hDkFA018HskD4DWFQ97BB+AfC
ofo4oHQkNDw4HQARmGAi
     
     "]], {{LineBox[{{0., -0.84}, {0., -0.9400000000000001}}], 
      LineBox[{Offset[{1.5, 0}, {0., -0.84}], 
        Offset[{-1.5, 0}, {0., -0.84}]}], 
      LineBox[{Offset[{1.5, 0}, {0., -0.9400000000000001}], 
        Offset[{-1.5, 0}, {0., -0.9400000000000001}]}]}, {
      LineBox[{{5., -0.6399999999999999}, {5., -0.74}}], 
      LineBox[{Offset[{1.5, 0}, {5., -0.6399999999999999}], 
        Offset[{-1.5, 0}, {5., -0.6399999999999999}]}], 
      LineBox[{Offset[{1.5, 0}, {5., -0.74}], 
        Offset[{-1.5, 0}, {5., -0.74}]}]}, {
      LineBox[{{10., -0.48000000000000004`}, {10., -0.5800000000000001}}], 
      LineBox[{Offset[{1.5, 0}, {10., -0.48000000000000004`}], 
        Offset[{-1.5, 0}, {10., -0.48000000000000004`}]}], 
      LineBox[{Offset[{1.5, 0}, {10., -0.5800000000000001}], 
        Offset[{-1.5, 0}, {10., -0.5800000000000001}]}]}, {
      LineBox[{{15., -0.29000000000000004`}, {15., -0.39}}], 
      LineBox[{Offset[{1.5, 0}, {15., -0.29000000000000004`}], 
        Offset[{-1.5, 0}, {15., -0.29000000000000004`}]}], 
      LineBox[{
       Offset[{1.5, 0}, {15., -0.39}], Offset[{-1.5, 0}, {15., -0.39}]}]}, {
      LineBox[{{20., -0.09999999999999999}, {20., -0.2}}], 
      LineBox[{Offset[{1.5, 0}, {20., -0.09999999999999999}], 
        Offset[{-1.5, 0}, {20., -0.09999999999999999}]}], 
      LineBox[{Offset[{1.5, 0}, {20., -0.2}], 
        Offset[{-1.5, 0}, {20., -0.2}]}]}, {
      LineBox[{{25., 0.07}, {25., -0.030000000000000002`}}], 
      LineBox[{Offset[{1.5, 0}, {25., 0.07}], 
        Offset[{-1.5, 0}, {25., 0.07}]}], 
      LineBox[{Offset[{1.5, 0}, {25., -0.030000000000000002`}], 
        Offset[{-1.5, 0}, {25., -0.030000000000000002`}]}]}, {
      LineBox[{{30., 0.25}, {30., 0.15000000000000002`}}], 
      LineBox[{Offset[{1.5, 0}, {30., 0.25}], 
        Offset[{-1.5, 0}, {30., 0.25}]}], 
      LineBox[{Offset[{1.5, 0}, {30., 0.15000000000000002`}], 
        Offset[{-1.5, 0}, {30., 0.15000000000000002`}]}]}, {
      LineBox[{{35., 0.47}, {35., 0.37}}], 
      LineBox[{Offset[{1.5, 0}, {35., 0.47}], 
        Offset[{-1.5, 0}, {35., 0.47}]}], 
      LineBox[{Offset[{1.5, 0}, {35., 0.37}], 
        Offset[{-1.5, 0}, {35., 0.37}]}]}, {
      LineBox[{{40., 0.66}, {40., 0.5599999999999999}}], 
      LineBox[{Offset[{1.5, 0}, {40., 0.66}], 
        Offset[{-1.5, 0}, {40., 0.66}]}], 
      LineBox[{Offset[{1.5, 0}, {40., 0.5599999999999999}], 
        Offset[{-1.5, 0}, {40., 0.5599999999999999}]}]}, {
      LineBox[{{45., 0.87}, {45., 0.7699999999999999}}], 
      LineBox[{Offset[{1.5, 0}, {45., 0.87}], 
        Offset[{-1.5, 0}, {45., 0.87}]}], 
      LineBox[{Offset[{1.5, 0}, {45., 0.7699999999999999}], 
        Offset[{-1.5, 0}, {45., 0.7699999999999999}]}]}, {
      LineBox[{{50., 1.08}, {50., 0.98}}], 
      LineBox[{Offset[{1.5, 0}, {50., 1.08}], 
        Offset[{-1.5, 0}, {50., 1.08}]}], 
      LineBox[{Offset[{1.5, 0}, {50., 0.98}], 
        Offset[{-1.5, 0}, {50., 0.98}]}]}, {
      LineBox[{{55., 1.27}, {55., 1.17}}], 
      LineBox[{Offset[{1.5, 0}, {55., 1.27}], 
        Offset[{-1.5, 0}, {55., 1.27}]}], 
      LineBox[{Offset[{1.5, 0}, {55., 1.17}], 
        Offset[{-1.5, 0}, {55., 1.17}]}]}, {LineBox[{{60., 1.5}, {60., 1.4}}],
       LineBox[{Offset[{1.5, 0}, {60., 1.5}], Offset[{-1.5, 0}, {60., 1.5}]}],
       LineBox[{
       Offset[{1.5, 0}, {60., 1.4}], Offset[{-1.5, 0}, {60., 1.4}]}]}, {
      LineBox[{{65., 1.73}, {65., 1.63}}], 
      LineBox[{Offset[{1.5, 0}, {65., 1.73}], 
        Offset[{-1.5, 0}, {65., 1.73}]}], 
      LineBox[{Offset[{1.5, 0}, {65., 1.63}], 
        Offset[{-1.5, 0}, {65., 1.63}]}]}, {
      LineBox[{{70., 1.93}, {70., 1.8299999999999998`}}], 
      LineBox[{Offset[{1.5, 0}, {70., 1.93}], 
        Offset[{-1.5, 0}, {70., 1.93}]}], 
      LineBox[{Offset[{1.5, 0}, {70., 1.8299999999999998`}], 
        Offset[{-1.5, 0}, {70., 1.8299999999999998`}]}]}, {
      LineBox[{{75., 2.15}, {75., 2.0500000000000003`}}], 
      LineBox[{Offset[{1.5, 0}, {75., 2.15}], 
        Offset[{-1.5, 0}, {75., 2.15}]}], 
      LineBox[{Offset[{1.5, 0}, {75., 2.0500000000000003`}], 
        Offset[{-1.5, 0}, {75., 2.0500000000000003`}]}]}, {
      LineBox[{{80., 2.36}, {80., 2.2600000000000002`}}], 
      LineBox[{Offset[{1.5, 0}, {80., 2.36}], 
        Offset[{-1.5, 0}, {80., 2.36}]}], 
      LineBox[{Offset[{1.5, 0}, {80., 2.2600000000000002`}], 
        Offset[{-1.5, 0}, {80., 2.2600000000000002`}]}]}, {
      LineBox[{{85., 2.59}, {85., 2.49}}], 
      LineBox[{Offset[{1.5, 0}, {85., 2.59}], 
        Offset[{-1.5, 0}, {85., 2.59}]}], 
      LineBox[{Offset[{1.5, 0}, {85., 2.49}], 
        Offset[{-1.5, 0}, {85., 2.49}]}]}, {
      LineBox[{{90., 2.8299999999999996`}, {90., 2.73}}], 
      LineBox[{Offset[{1.5, 0}, {90., 2.8299999999999996`}], 
        Offset[{-1.5, 0}, {90., 2.8299999999999996`}]}], 
      LineBox[{Offset[{1.5, 0}, {90., 2.73}], 
        Offset[{-1.5, 0}, {90., 2.73}]}]}, {
      LineBox[{{95., 3.05}, {95., 2.95}}], 
      LineBox[{Offset[{1.5, 0}, {95., 3.05}], 
        Offset[{-1.5, 0}, {95., 3.05}]}], 
      LineBox[{Offset[{1.5, 0}, {95., 2.95}], 
        Offset[{-1.5, 0}, {95., 2.95}]}]}, {
      LineBox[{{100., 3.27}, {100., 3.1700000000000004`}}], 
      LineBox[{Offset[{1.5, 0}, {100., 3.27}], 
        Offset[{-1.5, 0}, {100., 3.27}]}], 
      LineBox[{Offset[{1.5, 0}, {100., 3.1700000000000004`}], 
        Offset[{-1.5, 0}, {100., 3.1700000000000004`}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 100.}, {-0.89, 5.9}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4522507765*^9, 3.452252013078125*^9, 3.4522545545*^9, 
  3.51455593398575*^9}]
}, Open  ]],

Cell["\<\
However, all datasets must either have no explicit erorrs or must all have \
explicit errors.\
\>", "Text",
 CellChangeTimes->{{3.452250786109375*^9, 3.452250818609375*^9}, {
  3.51455478167325*^9, 3.51455478204825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"GanglionData", ",", " ", "PearsonYorkData"}], "]"}]], "Input",
 CellChangeTimes->{{3.4522508244375*^9, 3.4522508334375*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"EDAListPlot", "::", "mixedform"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The datasets are not of the same type.\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.452250834296875*^9, 3.452252016796875*^9, 
  3.45225455796875*^9, 3.51455593417325*^9}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.452250834296875*^9, 3.452252016796875*^9, 
  3.452254557984375*^9, 3.5145559342045*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.1.2 BoxPlot", "Subsection",
 Evaluatable->False,
 CellChangeTimes->{{3.4522496608125*^9, 3.45224966125*^9}},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell["\<\
The box plot, sometimes called the \[OpenCurlyDoubleQuote]box and whisker \
plot\[CloseCurlyDoubleQuote], is a way of visualizing distributions of data. \
We will illustrate with some data taken by Darwin in 1878.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.452252485234375*^9, 3.45225249721875*^9}, {
  3.5006389526785*^9, 3.50063895320975*^9}},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData["Exit"], "Input",
 CellChangeTimes->{{3.45225251540625*^9, 3.452252515953125*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Darwin", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"CrossFertilizedData\\\\\\\\nand SelfFertilizedData\\\\\\\"\\\"}}, \
RowSpacings -> 1, ColumnAlignments -> Left, ColumnAlignments -> Left], \
Column], Function[BoxForm`e$, TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], \
"Message", "MSG",
 CellChangeTimes->{3.45200480896875*^9, 3.45200764821875*^9, 
  3.452252024140625*^9, 3.452252532328125*^9, 3.4522536734375*^9, 
  3.452254574390625*^9, 3.51455597079825*^9},
 CellTags->"BoxPlot"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CrossFertilizedData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 StyleBox["\<\"CrossFertilizedData is the height of 15 Zea Mays plants that \
were\\n\tcross-fertilized, measured in inches. The data was taken by \
Darwin\\n\tin 1878.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455597586075*^9},
 CellTags->{"BoxPlot", "Info3514541575-3150195"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SelfFertilizedData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 StyleBox["\<\"SelFertilizedData is the height of 15 Zea Mays plants that \
were\\n\tself-fertilized, measured in inches. The data was taken by Darwin\\n\
\tin 1878.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514555978470125*^9},
 CellTags->{"BoxPlot", "Info3514541578-3150195"}]
}, Open  ]],

Cell[TextData[{
 "The data are some of the most analyzed ever, largely in pedagogical \
contexts. We form histograms of the two data sets using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in Histogram function."
}], "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.5006389893035*^9, 3.500639004616*^9}},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{"CrossFertilizedData", ",", "5", ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Crossed\>\""}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ",", 
      RowBox[{"Histogram", "[", 
       RowBox[{"SelfFertilizedData", ",", "5", ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Self\>\""}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.45225168946875*^9, 3.45225169740625*^9}, {
  3.45225254790625*^9, 3.4522525485625*^9}, {3.500639210366*^9, 
  3.50063921870975*^9}},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], {}, 
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[0.7]], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{10., 0.}, {12.5, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{28.110428525060854`, 
             49.25554205473156}, {-33.26076687433117, -15.141515180058605`}}],
           
           StatusArea[#, 2.]& ,
           TagBoxNote->"2."],
          StyleBox["2.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[2., {
            GrayLevel[0]}], "Tooltip"]& ], {}, {}, 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{17.5, 0.}, {20., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{88.545769114073, 
             109.6908826437437}, {-33.26076687433117, -15.141515180058605`}}],
           
           StatusArea[#, 2.]& ,
           TagBoxNote->"2."],
          StyleBox["2.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[2., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{20., 0.}, {22.5, 8.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{108.6908826437437, 
             129.8359961734144}, {-84.61852195714884, -15.141515180058605`}}],
           
           StatusArea[#, 8.]& ,
           TagBoxNote->"8."],
          StyleBox["8.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[8., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{22.5, 0.}, {25., 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{128.8359961734144, 
             149.9811097030851}, {-41.82039272146744, -15.141515180058605`}}],
           
           StatusArea[#, 3.]& ,
           TagBoxNote->"3."],
          StyleBox["3.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[3., {
            GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesOrigin->{10., 0},
      DisplayFunction->Identity,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      PlotLabel->FormBox["\"Crossed\"", TraditionalForm],
      PlotRange->{{10., 25.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.1]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], {}, 
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[0.7]], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{12., 0.}, {14., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.919498120665267`, 
             52.093634356270115`}, {-27.554349642906985`, \
-15.141515180058605`}}],
           StatusArea[#, 1.]& ,
           TagBoxNote->"1."],
          StyleBox["1.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[1., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{14., 0.}, {16., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{51.093634356270115`, 
             76.26777059187498}, {-38.96718410575535, -15.141515180058605`}}],
           
           StatusArea[#, 2.]& ,
           TagBoxNote->"2."],
          StyleBox["2.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[2., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{16., 0.}, {18., 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.26777059187498, 
             100.44190682747984`}, {-50.38001856860373, \
-15.141515180058605`}}],
           StatusArea[#, 3.]& ,
           TagBoxNote->"3."],
          StyleBox["3.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[3., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{18., 0.}, {20., 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{99.44190682747984, 
             124.6160430630847}, {-84.61852195714886, -15.141515180058605`}}],
           
           StatusArea[#, 6.]& ,
           TagBoxNote->"6."],
          StyleBox["6.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[6., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{20., 0.}, {22., 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{123.6160430630847, 
             148.79017929868957`}, {-50.38001856860373, \
-15.141515180058605`}}],
           StatusArea[#, 3.]& ,
           TagBoxNote->"3."],
          StyleBox["3.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[3., {
            GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesOrigin->{12., 0.},
      DisplayFunction->Identity,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      PlotLabel->FormBox["\"Self\"", TraditionalForm],
      PlotRange->{{12., 22.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.1]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  DisplayFunction->Identity,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.452004819453125*^9, 3.452007648734375*^9, {3.452251671015625*^9, 
   3.452251692390625*^9}, 3.452252549390625*^9, 3.452253682453125*^9, 
   3.452254582421875*^9, 3.50063921958475*^9, 3.514555982063875*^9},
 CellTags->"BoxPlot"]
}, Open  ]],

Cell["\<\
This seems to indicate that the cross-fertilized plants are somewhat larger.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell["\<\
The statistical measures, after some digging, seem to indicate the same.\
\>", "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.452252599625*^9, 3.45225260065625*^9}},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myReport", "[", "data_", "]"}], " ", ":=", " ", 
  RowBox[{"Print", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Mean\>\"", ",", " ", 
        RowBox[{"Mean", "[", "data", "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<HarmonicMean\>\"", ",", " ", 
        RowBox[{"HarmonicMean", "[", "data", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Quartiles\>\"", ",", " ", 
        RowBox[{"Quartiles", "[", "data", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<StandardDeviation\>\"", ",", " ", 
        RowBox[{"StandardDeviation", "[", "data", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Skewness\>\"", ",", " ", 
        RowBox[{"Skewness", "[", "data", "]"}]}], "}"}]}], "}"}], "//", 
    "TableForm"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4522531735625*^9, 3.452253187734375*^9}, {
  3.45225321809375*^9, 3.452253220328125*^9}, {3.452253266796875*^9, 
  3.45225335859375*^9}, {3.45225340340625*^9, 3.452253527859375*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myReport", "[", "CrossFertilizedData", "]"}]], "Input",
 CellChangeTimes->{{3.45225319015625*^9, 3.4522531955*^9}, {
  3.452253226828125*^9, 3.452253232890625*^9}, {3.45225343665625*^9, 
  3.45225343846875*^9}, {3.4522537628125*^9, 3.4522537691875*^9}, {
  3.45225379971875*^9, 3.45225379990625*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Mean\"\>", "20.191666666666666`"},
    {"\<\"HarmonicMean\"\>", "19.33704234420177`"},
    {"\<\"Quartiles\"\>", GridBox[{
       {"19.4375`"},
       {"21.5`"},
       {"22.125`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"StandardDeviation\"\>", "3.6169450737696676`"},
    {"\<\"Skewness\"\>", 
     RowBox[{"-", "1.5536749356132846`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{"Mean", 20.191666666666666`}, {
    "HarmonicMean", 19.33704234420177}, {
    "Quartiles", {19.4375, 21.5, 22.125}}, {
    "StandardDeviation", 3.6169450737696676`}, {
    "Skewness", -1.5536749356132846`}}]]], "Print",
 CellChangeTimes->{
  3.452253600453125*^9, 3.4522536880625*^9, {3.45225377134375*^9, 
   3.452253800375*^9}, 3.4522545879375*^9, 3.51455598804825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myReport", "[", "SelfFertilizedData", "]"}]], "Input",
 CellChangeTimes->{{3.45225361125*^9, 3.4522536206875*^9}, {
  3.452253785265625*^9, 3.45225379509375*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Mean\"\>", "17.575`"},
    {"\<\"HarmonicMean\"\>", "17.32560782521447`"},
    {"\<\"Quartiles\"\>", GridBox[{
       {"16.3125`"},
       {"18.`"},
       {"18.625`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"StandardDeviation\"\>", "2.051676144034433`"},
    {"\<\"Skewness\"\>", 
     RowBox[{"-", "0.7180769884936152`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{"Mean", 17.575}, {"HarmonicMean", 17.32560782521447}, {
    "Quartiles", {16.3125, 18., 18.625}}, {
    "StandardDeviation", 2.051676144034433}, {
    "Skewness", -0.7180769884936152}}]]], "Print",
 CellChangeTimes->{
  3.45225362190625*^9, 3.45225369040625*^9, {3.452253788578125*^9, 
   3.452253796*^9}, 3.4522545903125*^9, 3.514555990751375*^9}]
}, Open  ]],

Cell[TextData[{
 "However, the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["BoxPlot", "MR"],
 " shows the effect of fertilization clearly."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"CrossFertilizedData", ",", "SelfFertilizedData"}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "2"}], ",", 
   RowBox[{"FrameTicks", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{
   "FrameLabel", " ", "\[Rule]", " ", "\"\<Cross\\t\\t\\tSelf\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.45200483678125*^9, {3.452005040515625*^9, 3.45200511865625*^9}, 
   3.452253014328125*^9},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 GraphicsBox[{{{PointBox[{1, 12}], PointBox[{1, 12}]}, 
    PointBox[{2, 12.75}]}, {{
     LineBox[{{1, 19.4375}, {1, 18.25}, {0.75, 18.25}, {1.25, 18.25}}], 
     LineBox[{{0.85, 21.5}, {1.15, 21.5}}], 
     LineBox[{{1, 22.125}, {1, 23.5}, {0.75, 23.5}, {1.25, 23.5}}], 
     LineBox[{{0.75, 19.4375}, {1.25, 19.4375}, {1.15, 21.5}, {1.25, 
      22.125}, {0.75, 22.125}, {0.85, 21.5}, {0.75, 19.4375}}]}, {
     LineBox[{{2, 16.3125}, {2, 15.25}, {1.75, 15.25}, {2.25, 15.25}}], 
     LineBox[{{1.85, 18.}, {2.15, 18.}}], 
     LineBox[{{2, 18.625}, {2, 20.375}, {1.75, 20.375}, {2.25, 20.375}}], 
     LineBox[{{1.75, 16.3125}, {2.25, 16.3125}, {2.15, 18.}, {2.25, 18.625}, {
      1.75, 18.625}, {1.85, 18.}, {1.75, 16.3125}}]}}},
  AlignmentPoint->Center,
  AspectRatio->2,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->True,
  FrameLabel->FormBox["\"Cross\\t\\t\\tSelf\"", TraditionalForm],
  FrameStyle->{},
  FrameTicks->{None, Automatic},
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.4520051551875*^9, 3.452007648796875*^9, 
  3.45224999459375*^9, 3.45225301571875*^9, 3.452253693765625*^9, 
  3.452254593484375*^9, 3.514555995532625*^9},
 CellTags->"BoxPlot"]
}, Open  ]],

Cell["\<\
The \[OpenCurlyDoubleQuote]waist\[CloseCurlyDoubleQuote] in each box (which \
is actually two joined trapezoids) is the median of the data, the \
\[OpenCurlyDoubleQuote]shoulders\[CloseCurlyDoubleQuote] are at the upper \
quartile, and the \[OpenCurlyDoubleQuote]hips\[CloseCurlyDoubleQuote] are at \
the lower quartile. The vertical lines from the shoulders and hips extend to \
the maximum/minimum values of the data which are less/greater than the \
cutoffs; the cutoffs are the upper/lower quartiles plus or minus 3/2 of the \
height of the box, respectively. Any data that are represented as a point in \
the box plot is outside the cutoffs; there is one such datum in each of the \
data sets shown above. \
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell["\<\
Darwin threw out the data from Pot #1, which are the first three data points \
out of 15 for each sample; one of the plants died, another was diseased, and \
a third never grew to full height although a cause was not identified. The \
histograms and descriptive statistics are not very helpful in seeing the \
effect of throwing out this data.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"CrossFertilizedData", ",", 
          RowBox[{"-", "12"}]}], "]"}], ",", "5", ",", " ", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Crossed\>\""}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}], ",", 
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"Take", "[", 
         RowBox[{"SelfFertilizedData", ",", 
          RowBox[{"-", "12"}]}], "]"}], ",", "5", ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<Self\>\""}], ",", 
        RowBox[{"DisplayFunction", "\[Rule]", "Identity"}]}], "]"}]}], "}"}], 
    "]"}], ",", 
   RowBox[{"DisplayFunction", "\[Rule]", "$DisplayFunction"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.452253649578125*^9, 3.452253654*^9}, {
  3.500639307006625*^9, 3.5006393124285*^9}},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], {}, 
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[0.7]], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{12., 0.}, {14., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.919498120665295`, 
             48.064611650336005`}, {-29.836916535476632`, \
-15.14151518005859}}],
           StatusArea[#, 1.]& ,
           TagBoxNote->"1."],
          StyleBox["1.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[1., {
            GrayLevel[0]}], "Tooltip"]& ], {}, {}, 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{18., 0.}, {20., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{87.35483870967742, 
             108.49995223934813`}, {-43.53231789089469, -15.14151518005859}}],
           
           StatusArea[#, 2.]& ,
           TagBoxNote->"2."],
          StyleBox["2.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[2., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{20., 0.}, {22., 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.49995223934813`, 
             128.64506576901886`}, {-70.92312060173079, -15.14151518005859}}],
           
           StatusArea[#, 4.]& ,
           TagBoxNote->"4."],
          StyleBox["4.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[4., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{22., 0.}, {24., 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{127.64506576901886`, 
             148.79017929868957`}, {-84.61852195714884, -15.14151518005859}}],
           
           StatusArea[#, 5.]& ,
           TagBoxNote->"5."],
          StyleBox["5.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[5., {
            GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesOrigin->{12., 0},
      DisplayFunction->Identity,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      PlotLabel->FormBox["\"Crossed\"", TraditionalForm],
      PlotRange->{{12., 24.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.1]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}], InsetBox[
     GraphicsBox[
      {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
       EdgeForm[Opacity[0.7]], {}, 
       {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
        EdgeForm[Opacity[0.7]], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{12., 0.}, {13., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{28.110428525060883`, 
             42.54050421150802}, {-27.554349642906985`, \
-15.141515180058605`}}],
           StatusArea[#, 1.]& ,
           TagBoxNote->"1."],
          StyleBox["1.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[1., {
            GrayLevel[0]}], "Tooltip"]& ], {}, {}, 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{15., 0.}, {16., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{68.4006555844023, 
             82.83073127084944}, {-38.96718410575535, -15.141515180058605`}}],
           
           StatusArea[#, 2.]& ,
           TagBoxNote->"2."],
          StyleBox["2.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[2., {
            GrayLevel[0]}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{16., 0.}, {17., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{81.83073127084944, 
             96.26080695729658}, {-38.96718410575535, -15.141515180058605`}}],
           
           StatusArea[#, 2.]& ,
           TagBoxNote->"2."],
          StyleBox["2.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[2., {
            GrayLevel[0]}], "Tooltip"]& ], {}, 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{18., 0.}, {19., 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{108.69088264374372`, 
             123.12095833019086`}, {-84.61852195714886, \
-15.141515180058605`}}],
           StatusArea[#, 6.]& ,
           TagBoxNote->"6."],
          StyleBox["6.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[6., {
            GrayLevel[0]}], "Tooltip"]& ], {}, 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{20., 0.}, {21., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{135.551034016638, 
             149.98110970308514`}, {-27.554349642906985`, \
-15.141515180058605`}}],
           StatusArea[#, 1.]& ,
           TagBoxNote->"1."],
          StyleBox["1.`", {
            GrayLevel[0]}, StripOnInput -> False]],
         Annotation[#, 
          Style[1., {
            GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesOrigin->{12., 0},
      DisplayFunction->Identity,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      PlotLabel->FormBox["\"Self\"", TraditionalForm],
      PlotRange->{{12., 21.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.1]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  DisplayFunction->Identity,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.4520051821875*^9, 3.452007648875*^9, 
  3.452253655203125*^9, 3.452253698765625*^9, 3.45225459765625*^9, 
  3.5006393150535*^9, 3.514556000688875*^9},
 CellTags->"BoxPlot"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myReport", "[", 
  RowBox[{"Take", "[", 
   RowBox[{"CrossFertilizedData", ",", 
    RowBox[{"-", "12"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4522537310625*^9, 3.452253746671875*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Mean\"\>", "20.53125`"},
    {"\<\"HarmonicMean\"\>", "19.926680459657756`"},
    {"\<\"Quartiles\"\>", GridBox[{
       {"19.75`"},
       {"21.5625`"},
       {"22.125`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"StandardDeviation\"\>", "3.060992207676221`"},
    {"\<\"Skewness\"\>", 
     RowBox[{"-", "1.9428699468759474`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{"Mean", 20.53125}, {"HarmonicMean", 19.926680459657756`}, {
    "Quartiles", {19.75, 21.5625, 22.125}}, {
    "StandardDeviation", 3.060992207676221}, {
    "Skewness", -1.9428699468759474`}}]]], "Print",
 CellChangeTimes->{3.45225381140625*^9, 3.452254600890625*^9, 
  3.514556003220125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myReport", "[", 
  RowBox[{"Take", "[", 
   RowBox[{"SelfFertilizedData", ",", 
    RowBox[{"-", "12"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.4522538155625*^9, 3.452253833703125*^9}}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"Mean\"\>", "17.15625`"},
    {"\<\"HarmonicMean\"\>", "16.921982246118777`"},
    {"\<\"Quartiles\"\>", GridBox[{
       {"15.875`"},
       {"18.`"},
       {"18.5`"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}]},
    {"\<\"StandardDeviation\"\>", "1.9786681987915737`"},
    {"\<\"Skewness\"\>", 
     RowBox[{"-", "0.7979081714416814`"}]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{"Mean", 17.15625}, {"HarmonicMean", 16.921982246118777`}, {
    "Quartiles", {15.875, 18., 18.5}}, {
    "StandardDeviation", 1.9786681987915737`}, {
    "Skewness", -0.7979081714416814}}]]], "Print",
 CellChangeTimes->{3.452253834484375*^9, 3.4522546035625*^9, 
  3.51455600736075*^9}]
}, Open  ]],

Cell[TextData[{
 "Using ",
 StyleBox["BoxPlot", "MR"],
 " makes the comparison easy."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"CrossFertilizedData", ",", 
     RowBox[{"Take", "[", 
      RowBox[{"CrossFertilizedData", ",", 
       RowBox[{"-", "12"}]}], "]"}], ",", "SelfFertilizedData", ",", 
     RowBox[{"Take", "[", 
      RowBox[{"SelfFertilizedData", ",", 
       RowBox[{"-", "12"}]}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "1"}], ",", 
   RowBox[{
   "FrameLabel", " ", "\[Rule]", " ", 
    "\"\<Cross\\t\\tPart Cross\\t\\tSelf\\t\\tPart Self\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.452005222109375*^9, 3.452005282984375*^9}, {
   3.4520053624375*^9, 3.45200538590625*^9}, 3.45225384184375*^9},
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 GraphicsBox[{{{PointBox[{1, 12}], PointBox[{1, 12}]}, PointBox[{2, 12}], 
    PointBox[{3, 12.75}], {}}, {{
     LineBox[{{1, 19.4375}, {1, 18.25}, {0.75, 18.25}, {1.25, 18.25}}], 
     LineBox[{{0.85, 21.5}, {1.15, 21.5}}], 
     LineBox[{{1, 22.125}, {1, 23.5}, {0.75, 23.5}, {1.25, 23.5}}], 
     LineBox[{{0.75, 19.4375}, {1.25, 19.4375}, {1.15, 21.5}, {1.25, 
      22.125}, {0.75, 22.125}, {0.85, 21.5}, {0.75, 19.4375}}]}, {
     LineBox[{{2, 19.75}, {2, 18.25}, {1.75, 18.25}, {2.25, 18.25}}], 
     LineBox[{{1.85, 21.5625}, {2.15, 21.5625}}], 
     LineBox[{{2, 22.125}, {2, 23.25}, {1.75, 23.25}, {2.25, 23.25}}], 
     LineBox[{{1.75, 19.75}, {2.25, 19.75}, {2.15, 21.5625}, {2.25, 22.125}, {
      1.75, 22.125}, {1.85, 21.5625}, {1.75, 19.75}}]}, {
     LineBox[{{3, 16.3125}, {3, 15.25}, {2.75, 15.25}, {3.25, 15.25}}], 
     LineBox[{{2.85, 18.}, {3.15, 18.}}], 
     LineBox[{{3, 18.625}, {3, 20.375}, {2.75, 20.375}, {3.25, 20.375}}], 
     LineBox[{{2.75, 16.3125}, {3.25, 16.3125}, {3.15, 18.}, {3.25, 18.625}, {
      2.75, 18.625}, {2.85, 18.}, {2.75, 16.3125}}]}, {
     LineBox[{{4, 15.875}, {4, 12.75}, {3.75, 12.75}, {4.25, 12.75}}], 
     LineBox[{{3.85, 18.}, {4.15, 18.}}], 
     LineBox[{{4, 18.5}, {4, 20}, {3.75, 20}, {4.25, 20}}], 
     LineBox[{{3.75, 15.875}, {4.25, 15.875}, {4.15, 18.}, {4.25, 18.5}, {
      3.75, 18.5}, {3.85, 18.}, {3.75, 15.875}}]}}},
  AlignmentPoint->Center,
  AspectRatio->1,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->True,
  FrameLabel->FormBox[
   "\"Cross\\t\\tPart Cross\\t\\tSelf\\t\\tPart Self\"", TraditionalForm],
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.452005418453125*^9, 3.452007648921875*^9, 
  3.452250004140625*^9, 3.45225384325*^9, 3.45225460675*^9, 
  3.514556011188875*^9},
 CellTags->"BoxPlot"]
}, Open  ]],

Cell["\<\
In particular, since the box plot is based on robust descriptors of data such \
as the median and the quartiles, the effect of throwing out the three data \
points is shown to have virtually no effect on our conclusions regarding the \
fertilization\[CloseCurlyQuote]s influence on plant growth.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[TextData[{
 "Internally, ",
 StyleBox["BoxPlot", "MR"],
 " uses the graphics primitives ",
 StyleBox["Point", "MR"],
 " and ",
 StyleBox["Line", "MR"],
 ". Options given to ",
 StyleBox["BoxPlot", "MR"],
 " are passed to the ",
 StyleBox["Show", "MR"],
 " function, and the defaults differ from the defaults for ",
 StyleBox["Show", "MR"],
 " only in setting ",
 StyleBox["Frame", "MR"],
 StyleBox[" -> ", "MR",
  FontWeight->"Bold"],
 StyleBox["True", "MR"],
 " and ",
 StyleBox["PlotRange", "MR"],
 StyleBox[" -> ", "MR",
  FontWeight->"Bold"],
 StyleBox["All", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"BoxPlot", "BoxPlot--options"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.1.4 Log and Log-Log Plots", "Subsection",
 CellTags->{"EDALogListPlot", "EDALogLogListPlot"}],

Cell[TextData[{
 "The standard add-on ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " package ",
 StyleBox["Graphics`Graphics` ", "MR",
  FontSlant->"Italic"],
 "contains the functions ",
 StyleBox["LogListPlot", "MR",
  FontVariations->{"CompatibilityType"->0}],
 " and ",
 StyleBox["LogLogListPlot", "MR",
  FontVariations->{"CompatibilityType"->0}],
 " to do log plots and log-log plots. As a convenience, ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " includes two routines that take data formatted for ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 ", reformats it, and passes it to the functions in ",
 StyleBox["Graphics`Graphics`", "MO"],
 ". The convenience routines are named ",
 StyleBox["EDALogListPlot", "MR",
  FontVariations->{"CompatibilityType"->0}],
 " and ",
 StyleBox["EDALogLogListPlot", "MR",
  FontVariations->{"CompatibilityType"->0}],
 ". Any explicit errors in the data are ignored and all options are passed to \
",
 StyleBox["LogListPlot", "MR",
  FontVariations->{"CompatibilityType"->0}],
 " or ",
 StyleBox["LogLogListPlot", "MR",
  FontVariations->{"CompatibilityType"->0}],
 "."
}], "Text",
 CellTags->{"EDALogListPlot", "EDALogLogListPlot"}],

Cell[TextData[{
 "Reference: Wolfram Research, ",
 StyleBox["Mathematica 4.0 Standard Add-on Packages.",
  FontSlant->"Italic"]
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "8.1.5 Summary of General Purpose ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " Graphics Routines"
}], "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<EDAListPlot\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"EDAListPlot"],

Cell[BoxData[
 StyleBox["\<\"EDAListPlot[data] produces a plot of data. It determines \\n\t\
\tif there are errors associated with the data points, and\\n\t\tif so \
displays them also. EDAListPlot[data1, data2, ... ]\\n\t\tdisplays multiple \
data sets. Internally, EDAListPlot uses\\n\t\tthe built-in ListPlot and \
ErrorListPlot[] from the\\n\t\tstandard ErrorBarPlots` package.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556020970125*^9},
 CellTags->{"EDAListPlot", "Info3514541620-3150195"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Options", "[", "EDAListPlot", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.452253885515625*^9, 3.452253887421875*^9}},
 AspectRatioFixed->True,
 CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
     {
      RowBox[{"AspectRatio", "\[Rule]", 
       FractionBox["1", "GoldenRatio"]}]},
     {
      RowBox[{"Axes", "\[Rule]", "True"}]},
     {
      RowBox[{"AxesLabel", "\[Rule]", "None"}]},
     {
      RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"Background", "\[Rule]", "None"}]},
     {
      RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"ClippingStyle", "\[Rule]", "None"}]},
     {
      RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]},
     {
      RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"DataRange", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"ErrorBarFunction", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"Filling", "\[Rule]", "None"}]},
     {
      RowBox[{"FillingStyle", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"Frame", "\[Rule]", "False"}]},
     {
      RowBox[{"FrameLabel", "\[Rule]", "None"}]},
     {
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"GridLines", "\[Rule]", "None"}]},
     {
      RowBox[{"GridLinesStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
     {
      RowBox[{"ImagePadding", "\[Rule]", "All"}]},
     {
      RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"InterpolationOrder", "\[Rule]", "None"}]},
     {
      RowBox[{"Joined", "\[Rule]", "False"}]},
     {
      RowBox[{"Joined", "\[Rule]", "True"}]},
     {
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"MaxPlotPoints", "\[Rule]", "\[Infinity]"}]},
     {
      RowBox[{"Mesh", "\[Rule]", "None"}]},
     {
      RowBox[{"MeshFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"#1", "&"}], "}"}]}]},
     {
      RowBox[{"MeshShading", "\[Rule]", "None"}]},
     {
      RowBox[{"MeshStyle", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"Method", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PlotLabel", "\[Rule]", "None"}]},
     {
      RowBox[{"PlotMarkers", "\[Rule]", "None"}]},
     {
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PlotRangeClipping", "\[Rule]", "True"}]},
     {
      RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PlotStyle", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"Prolog", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"RotateLabel", "\[Rule]", "True"}]},
     {
      RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"TicksStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
     {
      RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
     {
      RowBox[{"PerformanceGoal", "\[RuleDelayed]", "$PerformanceGoal"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.45200764909375*^9, {3.45225175440625*^9, 3.45225178359375*^9}, 
   3.4522538879375*^9, 3.45225397521875*^9, 3.514556023751375*^9},
 CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<BoxPlot\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"BoxPlot"],

Cell[BoxData[
 StyleBox["\<\"BoxPlot[{a1, a2, ..., aN}] displays statistics about {a1, a2, \
..., aN}.\\n\tThe \\\"box\\\" spans the inner two quartiles, with an interior \
line\\n\tat the median. Lines extend from the box to the minimum/maximum\\n\t\
values which are greater/lesser than the cutoffs, respectively.\\n\tThe \
cutoffs are the lower/upper quartiles minus/plus 3/2 of the\\n\theight of the \
box, respectively. Data outside the cutoffs are\\n\trepresented by points. \
BoxPlot[{{a1, ..., aN}, {b1, ..., bM},...}]\\n\tdisplays boxplots for a, b, \
... side by side. Optional final\\n\targuments to BoxPlot[] are passed to \
Show[].\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556028517*^9},
 CellTags->{"BoxPlot", "Info3514541628-3150195"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Options", "[", "BoxPlot", "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"BoxPlot--options", "BoxPlot"}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"AlignmentPoint", "\[Rule]", "Center"}]},
     {
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"Axes", "\[Rule]", "False"}]},
     {
      RowBox[{"AxesLabel", "\[Rule]", "None"}]},
     {
      RowBox[{"AxesOrigin", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"Background", "\[Rule]", "None"}]},
     {
      RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"ColorOutput", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"ContentSelectable", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"CoordinatesToolOptions", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"DisplayFunction", "\[RuleDelayed]", "$DisplayFunction"}]},
     {
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"FormatType", "\[RuleDelayed]", "TraditionalForm"}]},
     {
      RowBox[{"Frame", "\[Rule]", "True"}]},
     {
      RowBox[{"FrameLabel", "\[Rule]", "None"}]},
     {
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"FrameTicksStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"GridLines", "\[Rule]", "None"}]},
     {
      RowBox[{"GridLinesStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"ImageMargins", "\[Rule]", "0.`"}]},
     {
      RowBox[{"ImagePadding", "\[Rule]", "All"}]},
     {
      RowBox[{"ImageSize", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"ImageSizeRaw", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"Method", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PlotLabel", "\[Rule]", "None"}]},
     {
      RowBox[{"PlotRange", "\[Rule]", "All"}]},
     {
      RowBox[{"PlotRangeClipping", "\[Rule]", "False"}]},
     {
      RowBox[{"PlotRangePadding", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PlotRegion", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"PreserveImageOptions", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"Prolog", "\[Rule]", 
       RowBox[{"{", "}"}]}]},
     {
      RowBox[{"RotateLabel", "\[Rule]", "True"}]},
     {
      RowBox[{"Ticks", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"TicksStyle", "\[Rule]", 
       RowBox[{"{", "}"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.45200764984375*^9, 3.45225389378125*^9, 
  3.452253981078125*^9, 3.514556031142*^9},
 CellTags->{"BoxPlot--options", "BoxPlot"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EDALogListPlot"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EDALogListPlot[data] is a front end to ListLogPlot. \\n\t\tIt \
takes data in the usual EDA format,\\n\t\treformats it, and passes it to \
ListLogPlot.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556035657625*^9},
 CellTags->"Info3514541635-3150195"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EDALogLogListPlot"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EDALogLogListPlot[data] is a front end to ListLogLogPlot.\\n\t\
\tIt takes data in the usual EDA format, reformats it, and\\n\t\tpasses it to \
ListLogLogPlot.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455603836075*^9},
 CellTags->"Info3514541638-3150195"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.2 Transforming Data", "Section",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "There are three similar reasons why one may wish to transform a data set. \
First, sometimes the data itself suggests a transformation. Second, it can \
happen that a model exists for the data, but the model is not formulated \
directly in terms of the variables of the data. Third, a transformation can \
sometimes point out hidden features of the data. In this section, we will \
examine these three related cases. No new functions from ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " are introduced in this section; rather, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " built-in functions and ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " functions discussed previously are used to perform transformations of the \
data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell["8.2.1 The Data Itself Suggests a Transformation", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
We begin by considering some data on the population of cities.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Population", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"PopulationData\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> \
Left, ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.452007650171875*^9, 3.452254668828125*^9, 
  3.514556044188875*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PopulationData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 StyleBox["\<\"PopulationData is the population of the 10 largest cities\\n\t\
of 16 countries as reported by the 1967 \\\"World Almanac\\\".\\n\tThe \
countries listed are, in order: Sweden, the Netherlands,\\n\tCanada, France, \
Mexico, Argentina, Spain, England, Italy,\\n\tWest Germany, Brazil, the \
Soviet Union, Japan, the United\\n\tStates, India, and China. Populations are \
in 100,000s. The\\n\tcountries are sorted by the value of the median of the \
population.\\n\tThe data for each individual country is available as, for \
example,\\n\t\\\"SwedenData\\\".\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556046845125*^9},
 CellTags->{"Info3514541646-3150195", "Transforming data"}]
}, Open  ]],

Cell[TextData[{
 "Using the ",
 StyleBox["BoxPlot", "MR"],
 " function discussed in the previous section, we examine this data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxPlot", "[", 
  RowBox[{"PopulationData", ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.452005467734375*^9, 3.452005483421875*^9}},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{
    PointBox[{1, 7.87}], {}, {PointBox[{3, 11.91}], PointBox[{3, 6.72}]}, 
    PointBox[{4, 28.11}], PointBox[{5, 31.18}], 
    PointBox[{6, 29.66}], {PointBox[{7, 25.99}], PointBox[{7, 16.96}]}, 
    PointBox[{8, 79.86}], PointBox[{9, 25.39}], 
    PointBox[{10, 21.92}], {PointBox[{11, 49.81}], PointBox[{11, 38.57}]}, {
     PointBox[{12, 63.34}], PointBox[{12, 36.36}]}, PointBox[{13, 110.21}], 
    PointBox[{14, 77.81}], PointBox[{15, 45.37}], 
    PointBox[{16, 69.}]}, {{
     LineBox[{{1, 0.78}, {1, 0.69}, {0.75, 0.69}, {1.25, 0.69}}], 
     LineBox[{{0.85, 0.88}, {1.15, 0.88}}], 
     LineBox[{{1, 2.49}, {1, 4.22}, {0.75, 4.22}, {1.25, 4.22}}], 
     LineBox[{{0.75, 0.78}, {1.25, 0.78}, {1.15, 0.88}, {1.25, 2.49}, {0.75, 
      2.49}, {0.85, 0.88}, {0.75, 0.78}}]}, {
     LineBox[{{2, 1.42}, {2, 1.29}, {1.75, 1.29}, {2.25, 1.29}}], 
     LineBox[{{1.85, 1.7349999999999999`}, {2.15, 1.7349999999999999`}}], 
     LineBox[{{2, 6.02}, {2, 8.68}, {1.75, 8.68}, {2.25, 8.68}}], 
     LineBox[{{1.75, 1.42}, {2.25, 1.42}, {2.15, 1.7349999999999999`}, {2.25, 
      6.02}, {1.75, 6.02}, {1.85, 1.7349999999999999`}, {1.75, 1.42}}]}, {
     LineBox[{{3, 2.49}, {3, 1.69}, {2.75, 1.69}, {3.25, 1.69}}], 
     LineBox[{{2.85, 2.705}, {3.15, 2.705}}], 
     LineBox[{{3, 3.84}, {3, 3.84}, {2.75, 3.84}, {3.25, 3.84}}], 
     LineBox[{{2.75, 2.49}, {3.25, 2.49}, {3.15, 2.705}, {3.25, 3.84}, {2.75, 
      3.84}, {2.85, 2.705}, {2.75, 2.49}}]}, {
     LineBox[{{4, 2.33}, {4, 1.99}, {3.75, 1.99}, {4.25, 1.99}}], 
     LineBox[{{3.85, 2.74}, {4.15, 2.74}}], 
     LineBox[{{4, 5.35}, {4, 7.83}, {3.75, 7.83}, {4.25, 7.83}}], 
     LineBox[{{3.75, 2.33}, {4.25, 2.33}, {4.15, 2.74}, {4.25, 5.35}, {3.75, 
      5.35}, {3.85, 2.74}, {3.75, 2.33}}]}, {
     LineBox[{{5, 2.17}, {5, 1.86}, {4.75, 1.86}, {5.25, 1.86}}], 
     LineBox[{{4.85, 3.185}, {5.15, 3.185}}], 
     LineBox[{{5, 8.06}, {5, 10.12}, {4.75, 10.12}, {5.25, 10.12}}], 
     LineBox[{{4.75, 2.17}, {5.25, 2.17}, {5.15, 3.185}, {5.25, 8.06}, {4.75, 
      8.06}, {4.85, 3.185}, {4.75, 2.17}}]}, {
     LineBox[{{6, 2.69}, {6, 2.44}, {5.75, 2.44}, {6.25, 2.44}}], 
     LineBox[{{5.85, 3.275}, {6.15, 3.275}}], 
     LineBox[{{6, 6.35}, {6, 7.61}, {5.75, 7.61}, {6.25, 7.61}}], 
     LineBox[{{5.75, 2.69}, {6.25, 2.69}, {6.15, 3.275}, {6.25, 6.35}, {5.75, 
      6.35}, {5.85, 3.275}, {5.75, 2.69}}]}, {
     LineBox[{{7, 2.64}, {7, 1.69}, {6.75, 1.69}, {7.25, 1.69}}], 
     LineBox[{{6.85, 3.455}, {7.15, 3.455}}], 
     LineBox[{{7, 5.01}, {7, 5.01}, {6.75, 5.01}, {7.25, 5.01}}], 
     LineBox[{{6.75, 2.64}, {7.25, 2.64}, {7.15, 3.455}, {7.25, 5.01}, {6.75, 
      5.01}, {6.85, 3.455}, {6.75, 2.64}}]}, {
     LineBox[{{8, 3.3}, {8, 2.99}, {7.75, 2.99}, {8.25, 2.99}}], 
     LineBox[{{7.85, 4.984999999999999}, {8.15, 4.984999999999999}}], 
     LineBox[{{8, 7.22}, {8, 11.02}, {7.75, 11.02}, {8.25, 11.02}}], 
     LineBox[{{7.75, 3.3}, {8.25, 3.3}, {8.15, 4.984999999999999}, {8.25, 
      7.22}, {7.75, 7.22}, {7.85, 4.984999999999999}, {7.75, 3.3}}]}, {
     LineBox[{{9, 4.44}, {9, 3.36}, {8.75, 3.36}, {9.25, 3.36}}], 
     LineBox[{{8.85, 6.87}, {9.15, 6.87}}], 
     LineBox[{{9, 11.82}, {9, 15.8}, {8.75, 15.8}, {9.25, 15.8}}], 
     LineBox[{{8.75, 4.44}, {9.25, 4.44}, {9.15, 6.87}, {9.25, 11.82}, {8.75, 
      11.82}, {8.85, 6.87}, {8.75, 4.44}}]}, {
     LineBox[{{10, 6.53}, {10, 5.66}, {9.75, 5.66}, {10.25, 5.66}}], 
     LineBox[{{9.85, 7.15}, {10.15, 7.15}}], 
     LineBox[{{10, 11.42}, {10, 18.56}, {9.75, 18.56}, {10.25, 18.56}}], 
     LineBox[{{9.75, 6.53}, {10.25, 6.53}, {10.15, 7.15}, {10.25, 11.42}, {
      9.75, 11.42}, {9.85, 7.15}, {9.75, 6.53}}]}, {
     LineBox[{{11, 5.02}, {11, 2.78}, {10.75, 2.78}, {11.25, 2.78}}], 
     LineBox[{{10.85, 8.055}, {11.15, 8.055}}], 
     LineBox[{{11, 9.68}, {11, 9.68}, {10.75, 9.68}, {11.25, 9.68}}], 
     LineBox[{{10.75, 5.02}, {11.25, 5.02}, {11.15, 8.055}, {11.25, 9.68}, {
      10.75, 9.68}, {10.85, 8.055}, {10.75, 5.02}}]}, {
     LineBox[{{12, 10.27}, {12, 9.17}, {11.75, 9.17}, {12.25, 9.17}}], 
     LineBox[{{11.85, 10.870000000000001`}, {12.15, 10.870000000000001`}}], 
     LineBox[{{12, 13.32}, {12, 13.32}, {11.75, 13.32}, {12.25, 13.32}}], 
     LineBox[{{11.75, 10.27}, {12.25, 10.27}, {12.15, 10.870000000000001`}, {
      12.25, 13.32}, {11.75, 13.32}, {11.85, 10.870000000000001`}, {11.75, 
      10.27}}]}, {
     LineBox[{{13, 7.89}, {13, 7.04}, {12.75, 7.04}, {13.25, 7.04}}], 
     LineBox[{{12.85, 12.66}, {13.15, 12.66}}], 
     LineBox[{{13, 18.88}, {13, 32.14}, {12.75, 32.14}, {13.25, 32.14}}], 
     LineBox[{{12.75, 7.89}, {13.25, 7.89}, {13.15, 12.66}, {13.25, 18.88}, {
      12.75, 18.88}, {12.85, 12.66}, {12.75, 7.89}}]}, {
     LineBox[{{14, 8.76}, {14, 7.5}, {13.75, 7.5}, {14.25, 7.5}}], 
     LineBox[{{13.85, 13.045}, {14.15, 13.045}}], 
     LineBox[{{14, 24.79}, {14, 35.5}, {13.75, 35.5}, {14.25, 35.5}}], 
     LineBox[{{13.75, 8.76}, {14.25, 8.76}, {14.15, 13.045}, {14.25, 24.79}, {
      13.75, 24.79}, {13.85, 13.045}, {13.75, 8.76}}]}, {
     LineBox[{{15, 9.47}, {15, 7.21}, {14.75, 7.21}, {15.25, 7.21}}], 
     LineBox[{{14.85, 16.68}, {15.15, 16.68}}], 
     LineBox[{{15, 22.98}, {15, 30.03}, {14.75, 30.03}, {15.25, 30.03}}], 
     LineBox[{{14.75, 9.47}, {15.25, 9.47}, {15.15, 16.68}, {15.25, 22.98}, {
      14.75, 22.98}, {14.85, 16.68}, {14.75, 9.47}}]}, {
     LineBox[{{16, 16.5}, {16, 11.13}, {15.75, 11.13}, {16.25, 11.13}}], 
     LineBox[{{15.85, 22.785}, {16.15, 22.785}}], 
     LineBox[{{16, 36.92}, {16, 40.1}, {15.75, 40.1}, {16.25, 40.1}}], 
     LineBox[{{15.75, 16.5}, {16.25, 16.5}, {16.15, 22.785}, {16.25, 36.92}, {
      15.75, 36.92}, {15.85, 22.785}, {15.75, 16.5}}]}}},
  AlignmentPoint->Center,
  AspectRatio->1,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->True,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->{None, Automatic},
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.45200546875*^9, 3.4520054840625*^9}, 
   3.452007650421875*^9, 3.452254674265625*^9, 3.514556051876375*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
Some of the features of the data include the fact that, with two exceptions, \
all countries\[CloseCurlyQuote] city populations are skewed toward larger \
cities. We also see that for every country but one (the Netherlands) the \
biggest city is designated as an outlier.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
The feature of the data seen above that will be of most concern here is the \
fact that as the median (the \[OpenCurlyDoubleQuote]level\
\[CloseCurlyDoubleQuote]) of the population increases, the height of the box \
(the \[OpenCurlyDoubleQuote]spread\[CloseCurlyDoubleQuote]) also tends to \
increase. In order to compare the data for the various countries, we will \
seek a transformation that minimizes the change in the spread with the level.\
\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell["\<\
For this particular data, there is some theoretical justification for \
choosing a logarithmic transformation, since many models assume that \
populations tend to grow exponentially. We form the box plot for the \
logarithm of the populations.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxPlot", "[", 
  RowBox[{
   RowBox[{"Log", "[", "PopulationData", "]"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.45200555665625*^9, 3.4520055695625*^9}},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, PointBox[{3, 2.477378383367209}], 
    PointBox[{4, 3.3361253849184407`}], {}, 
    PointBox[{6, 3.389799336709786}], {PointBox[{7, 3.2577118486533987`}], 
     PointBox[{7, 2.830857630363757}]}, 
    PointBox[{8, 4.380275101635076}], {}, {}, {
     PointBox[{11, 3.908215767085192}], 
     PointBox[{11, 3.6524747722201365`}]}, {PointBox[{12, 4.148517041110494}],
      PointBox[{12, 3.5934692693092782`}]}, 
    PointBox[{13, 4.702387636703451}], {}, {}, {}}, {{
     LineBox[{{1, -0.2484613592984996}, {1, -0.37106368139083207`}, {
       0.75, -0.37106368139083207`}, {1.25, -0.37106368139083207`}}], 
     LineBox[{{0.85, -0.12789794179472957`}, {1.15, -0.12789794179472957`}}], 
     LineBox[{{1, 0.9122827104766164}, {1, 2.063058062429312}, {0.75, 
       2.063058062429312}, {1.25, 2.063058062429312}}], 
     LineBox[{{0.75, -0.2484613592984996}, {1.25, -0.2484613592984996}, {
      1.15, -0.12789794179472957`}, {1.25, 0.9122827104766164}, {0.75, 
      0.9122827104766164}, {0.85, -0.12789794179472957`}, {
      0.75, -0.2484613592984996}}]}, {
     LineBox[{{2, 0.35065687161316933`}, {2, 0.25464221837358075`}, {1.75, 
       0.25464221837358075`}, {2.25, 0.25464221837358075`}}], 
     LineBox[{{1.85, 0.5509700393803922}, {2.15, 0.5509700393803922}}], 
     LineBox[{{2, 1.7950872593207297`}, {2, 2.1610215286722587`}, {1.75, 
       2.1610215286722587`}, {2.25, 2.1610215286722587`}}], 
     LineBox[{{1.75, 0.35065687161316933`}, {2.25, 0.35065687161316933`}, {
      2.15, 0.5509700393803922}, {2.25, 1.7950872593207297`}, {1.75, 
      1.7950872593207297`}, {1.85, 0.5509700393803922}, {1.75, 
      0.35065687161316933`}}]}, {
     LineBox[{{3, 0.9122827104766164}, {3, 0.5247285289349821}, {2.75, 
       0.5247285289349821}, {3.25, 0.5247285289349821}}], 
     LineBox[{{2.85, 0.9950592018598169}, {3.15, 0.9950592018598169}}], 
     LineBox[{{3, 1.3454723665996355`}, {3, 1.9050881545350582`}, {2.75, 
       1.9050881545350582`}, {3.25, 1.9050881545350582`}}], 
     LineBox[{{2.75, 0.9122827104766164}, {3.25, 0.9122827104766164}, {3.15, 
      0.9950592018598169}, {3.25, 1.3454723665996355`}, {2.75, 
      1.3454723665996355`}, {2.85, 0.9950592018598169}, {2.75, 
      0.9122827104766164}}]}, {
     LineBox[{{4, 0.8458682675776092}, {4, 0.688134638736401}, {3.75, 
       0.688134638736401}, {4.25, 0.688134638736401}}], 
     LineBox[{{3.85, 1.0052868311905176`}, {4.15, 1.0052868311905176`}}], 
     LineBox[{{4, 1.6770965609079151`}, {4, 2.057962510002712}, {3.75, 
       2.057962510002712}, {4.25, 2.057962510002712}}], 
     LineBox[{{3.75, 0.8458682675776092}, {4.25, 0.8458682675776092}, {4.15, 
      1.0052868311905176`}, {4.25, 1.6770965609079151`}, {3.75, 
      1.6770965609079151`}, {3.85, 1.0052868311905176`}, {3.75, 
      0.8458682675776092}}]}, {
     LineBox[{{5, 0.7747271675523681}, {5, 0.62057648772511}, {4.75, 
       0.62057648772511}, {5.25, 0.62057648772511}}], 
     LineBox[{{4.85, 1.154710835126517}, {5.15, 1.154710835126517}}], 
     LineBox[{{5, 2.086913556518537}, {5, 3.4397768636296306`}, {4.75, 
       3.4397768636296306`}, {5.25, 3.4397768636296306`}}], 
     LineBox[{{4.75, 0.7747271675523681}, {5.25, 0.7747271675523681}, {5.15, 
      1.154710835126517}, {5.25, 2.086913556518537}, {4.75, 
      2.086913556518537}, {4.85, 1.154710835126517}, {4.75, 
      0.7747271675523681}}]}, {
     LineBox[{{6, 0.9895411936137477}, {6, 0.8919980393051105}, {5.75, 
       0.8919980393051105}, {6.25, 0.8919980393051105}}], 
     LineBox[{{5.85, 1.1733009892054098`}, {6.15, 1.1733009892054098`}}], 
     LineBox[{{6, 1.8484548129046001`}, {6, 2.0294631718735947`}, {5.75, 
       2.0294631718735947`}, {6.25, 2.0294631718735947`}}], 
     LineBox[{{5.75, 0.9895411936137477}, {6.25, 0.9895411936137477}, {6.15, 
      1.1733009892054098`}, {6.25, 1.8484548129046001`}, {5.75, 
      1.8484548129046001`}, {5.85, 1.1733009892054098`}, {5.75, 
      0.9895411936137477}}]}, {
     LineBox[{{7, 0.9707789171582248}, {7, 0.5247285289349821}, {6.75, 
       0.5247285289349821}, {7.25, 0.5247285289349821}}], 
     LineBox[{{6.85, 1.2392682013900784`}, {7.15, 1.2392682013900784`}}], 
     LineBox[{{7, 1.6114359150967734`}, {7, 1.6114359150967734`}, {6.75, 
       1.6114359150967734`}, {7.25, 1.6114359150967734`}}], 
     LineBox[{{6.75, 0.9707789171582248}, {7.25, 0.9707789171582248}, {7.15, 
      1.2392682013900784`}, {7.25, 1.6114359150967734`}, {6.75, 
      1.6114359150967734`}, {6.85, 1.2392682013900784`}, {6.75, 
      0.9707789171582248}}]}, {
     LineBox[{{8, 1.1939224684724346`}, {8, 1.095273387402595}, {7.75, 
       1.095273387402595}, {8.25, 1.095273387402595}}], 
     LineBox[{{7.85, 1.6062115252137437`}, {8.15, 1.6062115252137437`}}], 
     LineBox[{{8, 1.9768549529047348`}, {8, 2.3997118037247684`}, {7.75, 
       2.3997118037247684`}, {8.25, 2.3997118037247684`}}], 
     LineBox[{{7.75, 1.1939224684724346`}, {8.25, 1.1939224684724346`}, {8.15,
       1.6062115252137437`}, {8.25, 1.9768549529047348`}, {7.75, 
      1.9768549529047348`}, {7.85, 1.6062115252137437`}, {7.75, 
      1.1939224684724346`}}]}, {
     LineBox[{{9, 1.4906543764441336`}, {9, 1.2119409739751128`}, {8.75, 
       1.2119409739751128`}, {9.25, 1.2119409739751128`}}], 
     LineBox[{{8.85, 1.917095592636995}, {9.15, 1.917095592636995}}], 
     LineBox[{{9, 2.469793011977952}, {9, 3.234355395716587}, {8.75, 
       3.234355395716587}, {9.25, 3.234355395716587}}], 
     LineBox[{{8.75, 1.4906543764441336`}, {9.25, 1.4906543764441336`}, {9.15,
       1.917095592636995}, {9.25, 2.469793011977952}, {8.75, 
      2.469793011977952}, {8.85, 1.917095592636995}, {8.75, 
      1.4906543764441336`}}]}, {
     LineBox[{{10, 1.8764069432883397`}, {10, 1.7334238922150915`}, {9.75, 
       1.7334238922150915`}, {10.25, 1.7334238922150915`}}], 
     LineBox[{{9.85, 1.966947040123157}, {10.15, 1.966947040123157}}], 
     LineBox[{{10, 2.435366204227864}, {10, 3.087399462079815}, {9.75, 
       3.087399462079815}, {10.25, 3.087399462079815}}], 
     LineBox[{{9.75, 1.8764069432883397`}, {10.25, 1.8764069432883397`}, {
      10.15, 1.966947040123157}, {10.25, 2.435366204227864}, {9.75, 
      2.435366204227864}, {9.85, 1.966947040123157}, {9.75, 
      1.8764069432883397`}}]}, {
     LineBox[{{11, 1.6134299337036377`}, {11, 1.0224509277025455`}, {10.75, 
       1.0224509277025455`}, {11.25, 1.0224509277025455`}}], 
     LineBox[{{10.85, 2.0862882002458374`}, {11.15, 2.0862882002458374`}}], 
     LineBox[{{11, 2.2700619012884857`}, {11, 2.2700619012884857`}, {10.75, 
       2.2700619012884857`}, {11.25, 2.2700619012884857`}}], 
     LineBox[{{10.75, 1.6134299337036377`}, {11.25, 1.6134299337036377`}, {
      11.15, 2.0862882002458374`}, {11.25, 2.2700619012884857`}, {10.75, 
      2.2700619012884857`}, {10.85, 2.0862882002458374`}, {10.75, 
      1.6134299337036377`}}]}, {
     LineBox[{{12, 2.329227023940467}, {12, 2.2159372862683733`}, {11.75, 
       2.2159372862683733`}, {12.25, 2.2159372862683733`}}], 
     LineBox[{{11.85, 2.3860028926232992`}, {12.15, 2.3860028926232992`}}], 
     LineBox[{{12, 2.589266665112243}, {12, 2.589266665112243}, {11.75, 
       2.589266665112243}, {12.25, 2.589266665112243}}], 
     LineBox[{{11.75, 2.329227023940467}, {12.25, 2.329227023940467}, {12.15, 
      2.3860028926232992`}, {12.25, 2.589266665112243}, {11.75, 
      2.589266665112243}, {11.85, 2.3860028926232992`}, {11.75, 
      2.329227023940467}}]}, {
     LineBox[{{13, 2.065596134857783}, {13, 1.951608170169951}, {12.75, 
       1.951608170169951}, {13.25, 1.951608170169951}}], 
     LineBox[{{12.85, 2.5368723347456856`}, {13.15, 2.5368723347456856`}}], 
     LineBox[{{13, 2.9381031607173544`}, {13, 3.4701013603093664`}, {12.75, 
       3.4701013603093664`}, {13.25, 3.4701013603093664`}}], 
     LineBox[{{12.75, 2.065596134857783}, {13.25, 2.065596134857783}, {13.15, 
      2.5368723347456856`}, {13.25, 2.9381031607173544`}, {12.75, 
      2.9381031607173544`}, {12.85, 2.5368723347456856`}, {12.75, 
      2.065596134857783}}]}, {
     LineBox[{{14, 2.1701959049483}, {14, 2.0149030205422647`}, {13.75, 
       2.0149030205422647`}, {14.25, 2.0149030205422647`}}], 
     LineBox[{{13.85, 2.5275270063214403`}, {14.15, 2.5275270063214403`}}], 
     LineBox[{{14, 3.210440346047099}, {14, 4.354269957628839}, {13.75, 
       4.354269957628839}, {14.25, 4.354269957628839}}], 
     LineBox[{{13.75, 2.1701959049483}, {14.25, 2.1701959049483}, {14.15, 
      2.5275270063214403`}, {14.25, 3.210440346047099}, {13.75, 
      3.210440346047099}, {13.85, 2.5275270063214403`}, {13.75, 
      2.1701959049483}}]}, {
     LineBox[{{15, 2.248128907197987}, {15, 1.9754689512968577`}, {14.75, 
       1.9754689512968577`}, {15.25, 1.9754689512968577`}}], 
     LineBox[{{14.85, 2.813626170333126}, {15.15, 2.813626170333126}}], 
     LineBox[{{15, 3.1346242724206097`}, {15, 3.8148510936758724`}, {14.75, 
       3.8148510936758724`}, {15.25, 3.8148510936758724`}}], 
     LineBox[{{14.75, 2.248128907197987}, {15.25, 2.248128907197987}, {15.15, 
      2.813626170333126}, {15.25, 3.1346242724206097`}, {14.75, 
      3.1346242724206097`}, {14.85, 2.813626170333126}, {14.75, 
      2.248128907197987}}]}, {
     LineBox[{{16, 2.803360380906535}, {16, 2.4096441652874536`}, {15.75, 
       2.4096441652874536`}, {16.25, 2.4096441652874536`}}], 
     LineBox[{{15.85, 3.1244087146978163`}, {16.15, 3.1244087146978163`}}], 
     LineBox[{{16, 3.6087534096346516`}, {16, 4.23410650459726}, {15.75, 
       4.23410650459726}, {16.25, 4.23410650459726}}], 
     LineBox[{{15.75, 2.803360380906535}, {16.25, 2.803360380906535}, {16.15, 
      3.1244087146978163`}, {16.25, 3.6087534096346516`}, {15.75, 
      3.6087534096346516`}, {15.85, 3.1244087146978163`}, {15.75, 
      2.803360380906535}}]}}},
  AlignmentPoint->Center,
  AspectRatio->1,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->True,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->{None, Automatic},
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{3.452005570078125*^9, 3.452007650484375*^9, 
  3.45225467746875*^9, 3.51455605592325*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
Even if we were ignorant of demography, we will show that the data itself \
suggests a logarithmic transformation.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
Suppose that the spread is proportional to a power of the median.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"spread", " ", "=", " ", 
  RowBox[{"c", " ", "*", " ", 
   RowBox[{"median", "^", "b"}]}]}]], "DisplayMath",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["Take the logarithm of both sides.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["Log[ spread ] = Log[ c ] + b * Log[ median ]", "DisplayFormula",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "Thus, a fit of ",
 StyleBox["Log[", "MR"],
 StyleBox["spread", "MO"],
 StyleBox["]", "MR"],
 " versus ",
 StyleBox["Log[", "MR"],
 StyleBox["median", "MO"],
 StyleBox["]", "MR"],
 " to a straight line allows us to estimate ",
 StyleBox["b", "MO"],
 ". Then we do a transformation of the data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["transf = original^(1 - b)", "DisplayFormula",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
This transformation will, at least approximately, eliminate the dependence of \
spread on level.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "In practice, we only estimate ",
 StyleBox["(1 - b)", "MR"],
 ", which leads to the following table."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<b\>\"", ",", "\"\<Transformation\>\""}], "}"}], ",", 
    "\"\<\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "\"\<original^3\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "\"\<original^2\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\"\<original (No transformation)\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "\"\<Sqrt[original]\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\"\<Log[original]\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", "\"\<1/Sqrt[original]\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "\"\<1/original\>\""}], "}"}]}], "}"}], "]"}]], "Input",\

 AspectRatioFixed->True,
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"b\"\>", "\<\"Transformation\"\>"},
    {"\<\"\"\>", "\<\"\"\>"},
    {
     RowBox[{"-", "2"}], "\<\"original^3\"\>"},
    {
     RowBox[{"-", "1"}], "\<\"original^2\"\>"},
    {"0", "\<\"original (No transformation)\"\>"},
    {"0.5`", "\<\"Sqrt[original]\"\>"},
    {"1", "\<\"Log[original]\"\>"},
    {"1.5`", "\<\"1/Sqrt[original]\"\>"},
    {"2", "\<\"1/original\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  TableForm[{{"b", "Transformation"}, 
    "", {-2, "original^3"}, {-1, "original^2"}, {
    0, "original (No transformation)"}, {0.5, "Sqrt[original]"}, {
    1, "Log[original]"}, {1.5, "1/Sqrt[original]"}, {
    2, "1/original"}}]]], "Output",
 CellChangeTimes->{3.452005601375*^9, 3.4520076505*^9, 3.514556060720125*^9},
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}]
}, Open  ]],

Cell["\<\
This is often called Tukey\[CloseCurlyQuote]s \[OpenCurlyDoubleQuote]ladder \
of powers\[CloseCurlyDoubleQuote].\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],

Cell[TextData[{
 "The transformation ",
 StyleBox["Log", "MR"],
 StyleBox["[", "MR"],
 StyleBox["original", "MO"],
 StyleBox["]", "MR"],
 " when ",
 StyleBox["(1 - ", "MR"],
 StyleBox["b", "MO"],
 StyleBox[")", "MR"],
 " is zero may seem to be artificial, but it is not. In fact,",
 StyleBox[" ", "MR"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", 
    RowBox[{"1", " ", "-", " ", "b"}]], TraditionalForm]], "MR"],
 " behaves much like the logarithm when ",
 StyleBox["(1 - ", "MR"],
 StyleBox["b", "MO"],
 StyleBox[")", "MR"],
 " is close to zero. For example, the derivative of ",
 StyleBox["Log", "MR"],
 StyleBox["[", "MR"],
 StyleBox["x", "MO"],
 StyleBox["]", "MR"],
 " is ",
 StyleBox["1/", "MR"],
 StyleBox["x", "MO"],
 ", and the derivative of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SuperscriptBox["x", "0.001"], "MR"], TraditionalForm]]],
 " is proportional to",
 StyleBox[" ", "MR"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", 
    RowBox[{"-", "0.999"}]], TraditionalForm]], "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
When in doubt about what transformation to try, the logarithm is usually a \
good first choice. The reason is that often the factor we are trying to \
eliminate is multiplicative instead of additive, such as perhaps some \
percentage of the variable. A logarithmic transformation will give equal \
differences in the case of equal multiplicative factors.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
Applying the ladder of powers to the population data, we first extract the \
quartiles.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q", "=", 
  RowBox[{"Quartiles", "/@", "PopulationData"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.78`", ",", "0.88`", ",", "2.49`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.42`", ",", "1.7349999999999999`", ",", "6.02`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.49`", ",", "2.705`", ",", "3.84`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.33`", ",", "2.74`", ",", "5.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.17`", ",", "3.185`", ",", "8.06`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.69`", ",", "3.275`", ",", "6.35`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.64`", ",", "3.455`", ",", "5.01`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.3`", ",", "4.984999999999999`", ",", "7.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.44`", ",", "6.87`", ",", "11.82`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.53`", ",", "7.15`", ",", "11.42`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.02`", ",", "8.055`", ",", "9.68`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.27`", ",", "10.870000000000001`", ",", "13.32`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.89`", ",", "12.66`", ",", "18.88`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.76`", ",", "13.045`", ",", "24.79`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.47`", ",", "16.68`", ",", "22.98`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16.5`", ",", "22.785`", ",", "36.92`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4520056068125*^9, 3.452007650515625*^9, 
  3.45225468865625*^9, 3.514556064595125*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["The medians are the center value of each triple.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"medians", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
     "&"}], ")"}], "/@", "q"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.88`", ",", "1.7349999999999999`", ",", "2.705`", ",", "2.74`", ",", 
   "3.185`", ",", "3.275`", ",", "3.455`", ",", "4.984999999999999`", ",", 
   "6.87`", ",", "7.15`", ",", "8.055`", ",", "10.870000000000001`", ",", 
   "12.66`", ",", "13.045`", ",", "16.68`", ",", "22.785`"}], "}"}]], "Output",\

 CellChangeTimes->{3.45200561196875*^9, 3.45200765053125*^9, 
  3.452254691671875*^9, 3.514556067720125*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["We calculate the quartile spreads.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qspreads", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#1", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
      "-", 
      RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "&"}], ")"}], "/@", "q"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.7100000000000002`", ",", "4.6`", ",", "1.3499999999999996`", ",", 
   "3.0199999999999996`", ",", "5.890000000000001`", ",", 
   "3.6599999999999997`", ",", "2.3699999999999997`", ",", "3.92`", ",", 
   "7.38`", ",", "4.89`", ",", "4.66`", ",", "3.0500000000000007`", ",", 
   "10.989999999999998`", ",", "16.03`", ",", "13.51`", ",", "20.42`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.452005615625*^9, 3.45200765053125*^9, 
  3.45225469953125*^9, 3.514556070938875*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "Thus, we form a data set of ",
 StyleBox["{ ", "MR"],
 StyleBox["median", "MO"],
 StyleBox[", ", "MR"],
 StyleBox["spread", "MO"],
 StyleBox[" }", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"medians", ",", "qspreads"}], "}"}], "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "We fit the logarithms to a straight line with the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " ",
 StyleBox["LinearFit", "MR"],
 " function; since ",
 StyleBox["mydata", "MR"],
 " is not the normal type of experimental data the program was mainly \
designed for, we set the ",
 StyleBox["Reweight", "MR"],
 " option to ",
 StyleBox["False", "MR"],
 StyleBox[".",
  FontWeight->"Bold"]
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{
   RowBox[{"Log", "[", "mydata", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
   RowBox[{"Reweight", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxXk41HkcAOBhvsMvtmN6aB0teUpJp03JtZ+PsrWIZNVOVpRjeyqZIeeU
o+TJZiiSajahxJYcU1TWMdgtiiJ2RmQit8TIUTMNZts/3uc18mG7+avSaDTn
r/5fc/jgqTbPamGjrdV5SaAY7kbHdi23qRZmz5Tzd3PF4KCVtY2jXy0MK7fN
r4kXw4KYKubiEqFwmaVd4+3rYmCsLTcNLawShpr/tCDwuRim4ks8rW9VCA3W
7EudM26DFsu86jreY2GQTjDfUNIGF7J5Cd3excIlk3fuHnJqB2aqgGOfFQom
enMucf6dIGBVrzAbFEDhsSu1xKkLgheKtLMW1YCPaazT7KJ3kGmhqL8veQbN
bbmfd/zRA4bMqzXmGq8gUo+TiJp9IDNJfHg5SgSM9DXvKH4/cH0aNm/obAeW
xOVwotEgmM+mPuZLJTBQpiWqTB4Cm4xrw/Hr3gGrqZEI9d4DN6AgIs+2Fwh3
1VIObwR4jYO7/Lf3Q9j4sO+bTx+gN2rBqHHoIDRm3jiuHTsG4i5Z8u7Tw+DV
N+2lHJPCwktNMyfLRmC42HCeZ9U4LG1rLLIfHIVze2Xcy6c/wpOGJL8wqRRq
7W9251pMQEdCRrCI+RHYrj/mGc5OgCERb1qhOwFluWWHOKWToP4n+TVkyySE
6q6KMomagv1pT3NSXaZAO7i+2NZuGuSso+z+n6fBTdv6talsGqx3kCxL9ieg
iXIPxlR9ggbN2D214Z/Bqau3M//rT3QvGOuelAG3yT1o8zoZ+LimeQelyUG/
s+q3lRMycPY+qTfH/wL7N33ZLb0jhzfpLGveIwXMy1vPNwz6Aq1LnkUPvZyB
DNqVmXvmCtBl62+PbJ2FlznNbotHFKAy7ntcc2wOgvzpGl3FM2DhkKzTMq2E
Yo56adyRWQiYNj6x6RQN/z0EEfEGc5DcoeRFUyp4lM25PtYzB235joO+iSqY
URdcsoGvhKCUi1MOuqpoZPBoScBGGn7vu3Pb8wxVrI36znltEg1N2ndmCwzp
6N6csVB/iIZs3+0Prt2j4zIB/0ylowpK2osYSzcStLSIlTbkquB1v281M6sI
8px6vknWUMWUS/VGvzsy8JWb18PoAFUsKHwfMf8FA/2Utfvf1Kmi3lv1uFQP
NTSzyikYMaVjofzyC8FbNXTSC1QcPkfH8LLjq7ceVEfW6B7R4h46piThVuEH
dcxwue8dZE+wxfnsuW42hWZ7Fb3WWQQnWFvmmwZTuP5iSo0omyDTbyj1RAiF
pg2rMtm3CLpyd91Qi6RwuZ27x61cgi9ztUrXnqFQe11Bs0YBwQZlTk9EGoVy
4l3ZXkbwH8ETW2YZhTUltenhrQT7KsL/9iinsErKCmGKCNLrVzvkVFL4l6l0
T76Y4La3Se4WtRQ+yNKf39VOsFpj37EDDRTe5oXE7egmWOE7cPWOhMIEv5Uc
7VGCnYFXDSa7KIzPrHAuGiOoiHTMsemh8HSH2xqHcYJWFwuLmgYo5LrGDJya
JPi4IuzptJTCAJvXnn1ygq/rTHbBBIVHwgOtohUEP7d0vEqYotD/PtHRmSW4
ZfgHib6cQi8Ts1YnGgP3TY37+Cso9PCtK+5XYWCY8uZQ4SyFv9w4kBxDZ2C6
xt5AmZJC9/bJY7oMBpZqq0/Zqc5DV63zDg/UGPgfEvRJRw==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVzn881HccwPH75T5flD3uUcwhHj3scpZtjULrx/sdV+LBwtRDWj8ejsdj
a0lX5vfJWq22nN/ZsQw9bNPKCSOaTIppfpS7R47LHZc4WiIdjsOt/fF6vP59
ro+MDY1m0Gg037f9/y1ayp6uuwelPRHDEl4xlHgZO2rUDyFjo66eZnUbnDjS
e5stemHa4OJ8q+I+GPiX66+In0D98cyTFYldkBzZueWjwQGYq7PlNmfJYfNy
bkPRlBrSHTfG3ZH2wfbiwokLH2jh80wbzlODCpJPVCb+tmMEeGM+LplWQ5DR
pQuM9h2F3tb2VOVFLYyIrSZ5X+tga0E/e7F2BPqGDJn7vpmAQvUP3aN3RuGd
vEdLKY3/QmmFa51wUgcOyq4qgW4Szv+oTJZav4C2TklU/NQUHFnkiQtsX4Lq
UvHpJ5zXoB0+VrrB7xU4sfo83uPOQOU6Rxryp4FUsA7Feb6B5lXnWup8XsPB
/Pby3E/10CyZnGKHz8BC+PHY0c9moWHv9btNEW9g2x5W6dbYOfhu99Oftp3R
Q6dlekhrwjwEpx62dUqahTZuFo+bYgCyW8fUJM1BZHD+UVH+AuTt05mis+ch
6GiK3UrRItjlexWF5hvgaUH4tozbRoi3WxFQsgVQ2DxMG+9Zghb3riOFrYvA
jbX3TVIsA/vCC5usB0agTwtjLF+tgBP37FDQ4BJ4+WfaymdN4KET7hFpl+HE
LO+MRyoNPf2CHU5pVyBTZcpIo+hoNVHD8J43gfJGgE54mY6nntX4uotpKMrJ
1vtzGSgQ+VlVmtPRXejn808xA23WsfiqDDryB/zKqp2YqM4RLMStZmCs0Le2
8CYTs1xaQvVSBqoHqswcNrFwp0po5Nkz8WrUu5YlzSzsr/Rx217BxJy8jvXf
B5jhlwG/rG1xZ2Gl7EXi6m4znGduCpyrZaGdhnybG8FGkWbWkoNmKFu40l2t
YePYkxE7TasZJjTGuHofIxhWsF9r68vGHAl6//WS4I0ExibvHjbKg85fHI6l
kBav7DYPJjgT7rn6/dMUqsoLE4NCCXKixnPPxFH4h+KQc04YweDkwJ/ZSRR+
8fFwou1Bgj2/rq1zO0fh45fjzi6RBDtN5c8S8ym8JlxMEsQRfFDdtoPTSKEg
ZN2Gs1KCz5sS7kf8SaFj+tDj1iKCzA5X//K7FBpkZSnsYoI+GkmYVyuFN1dt
6JWUEWyxOPDV4U4KrTs+TL36O8Em4Zj0uprC0Z0ob2wiOHhS6vhmiMKWGIZ4
uZmgMSmgfPszCguvPnDZdY/gJ9myqkdjFAYt7hV3tBFsaIpvn52isL4uhK/s
Idj/Nz8QZijMfr5GYddLcF6u6r2kp/D4mj7xEQVBz4mdavuFt15RhGJUSfCA
fjoy2vjWW+KQ5qoiGG+6Ni5bplDeo+HHDBIssNh/0mCisHK5VHFLQ7DOmuh3
MczxopswTT9M8D9MI/hV
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVxX040wkcAPDt19gvotblvBXnSg9SieXlqO/31OmIouLxdsjLXVfkJSQv
vewS1RCxR3qb0rrThfWKdm0REelw5ZKXpEKXsdmyzdjd/fF5PhaR8TtiCAqF
4vOf/9cdi8jsCRUJb1Y+/66OIobKw0cHl7uJhLFB4tAvaGLwXMJ1TzAVCW1I
veQ4uhj0jzxkLL4jFPJivK5Y6ItBy/aBTUrVQyH3q6a5k6ZikGXfCXW9KhCe
5dTfD3YUQ5fLddETdq0wnXXNWr1PDAXl7Nw34TXC74Mz9KBHDIwifsJmbgoQ
CjPnP4UTwA8UrVg3wodlvNuqDO9JSFr4woC76BEs1qktE9+bhMtOMy23+lvB
MMb50482EjBnlD5i6nRCiKlujg1HAgqr0/dKsl5AVUtQ95SOFNIj29av7XsF
vdXk0PksKTBni2rLJvrBQzrfuWBUCm4Xz41lrx6CR6tyMDd0CtJjb6Zd3zAM
GaKAovaWKWC3j3jHbHoP+gUnrk3Yy2A4S3/cMmUEanbZ7zXiyeDloCJ/+7Ex
KEqxS2Mz5LDw7HN1Rt0/wMqrdNI+IYelPe3Vm0fGwXvweG2YQg5NbXnRqRMT
4M/ms4ioz9CbezHpBUMC++2C5268/AzmtJcOK4yl0LTWv5HrPg30X2khyY5T
YLuy3eX8/WkIKm6uKNomg9iAq4nJNgpQBu6Nf79TDp+G2qWlJQpw9aBxXeI/
Q3p0kmXjfCW06R71azg4DR7ue8udU5XQZFxgaZyhgPGghgH2GyVE+haHJxYr
4eoezrMPO1XgE55hMlemgtIugRZbqILXnEBX9v0ZuOAQPuHInIHuL1sPj3ao
Ib1jd5mINwPG8aabDnXPAufxvfwShhqok1FxuuI5aOTnMBOy1eDkmW/UJdfA
alXlco5EDbFyywMOmRRMylzzV1nILOT3atiHSSo2y1c7XuuYhZ4bXiNRp6kY
9PTIkMplDhILz8g8jQlUl/hsDKiaA/uoLe5PLxLYL4h7pzbRgNWrLeV883nI
WSbeysrWQHzUptvnfp+HkSkfo/WUGuh/Va211I6GzOILw4n2FLwQbah7+SEN
cezY+GAsBQvPtlic9NJClxDDwA08Ct6s+pim90wLO1X+P4leU9BkgP5LUbA2
Skp2bG82oGKVsuQZf0Aba8IUryVbqXiwLs7aOYKOoZu3tS44RsXCPHQWfqJj
gWVkQWU9Fbt8jue8iScxkmmuipukojTQUc8miURWxkmdMAkVGdGjRQeSSeQ2
TJlsk1LRN937kvYhEgd8W1zXyKjYwVty15ZFYnBcYpZ4moptmoq3acUk+vIa
KfEaKj7mN21g1JG40WgPPUGfwHeCg43BD0gMC+8yjFhI4LwWa8+KP0jM5LlZ
+S4i0H0gb5dTA4n1TIan3WICRToB+35oI3G9X/2pSQMCBVEfSn/rJ3HVqQX6
icsI7NtfajY1SKJXZ6rZbjMCZw55Vbi9JfFno6E1fuYEfnOmqvr5BxKv8+5u
X2dBYK0gtVk+QeLXjWGFkhUE/v3EyhukJLrrtJYPWRI43dXbmSsjMcLP4Vbn
SgIdxzb2mypJvDRI7+ZbERggm4yMmSFRsDJpuNyawFTNldGqWRL74vqmCm0I
5Oj471doSJy540FjrSLwrgFd9i0xH43VNUuSbAn8F3CBScM=
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{-0.12783337150988489`, 0.5364933705145686}, {
      0.5510074133988224, 1.5260563034950492`}, {0.9951019122984449, 
      0.3001045924503378}, {1.007957920399979, 1.105256831386778}, {
      1.1584522890241267`, 1.7732559976634954`}, {1.1863178690872151`, 
      1.2974631474132747`}, {1.2398224572196332`, 0.8628899551470397}, {
      1.6064334034138015`, 1.366091653802371}, {1.927164106234258, 
      1.998773638612381}, {1.9671123567059163`, 1.5871923034867805`}, {
      2.0862930166289377`, 1.5390154481375546`}, {2.3860067011331183`, 
      1.1151415906193205`}, {2.5384474167160302`, 2.39698576841553}, {
      2.568404918588692, 2.7744619666214616`}, {2.8142103969306005`, 
      2.6034301519721073`}, {3.126102424715846, 3.01651481273652}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-0.45322695113245803`, 0.028463570421719653`},
  DisplayFunction->Identity,
  PlotRange->{{-0.45322695113245803`, 3.4514960043384195`}, {
   0.028463570421719653`, 3.288155834765138}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[{{-0.12783337150988489`, 0.185976730571488}, {
         0.5510074133988224, 0.7003511141158735}, {
         0.9951019122984449, -0.8364667461585735}, {
         1.007957920399979, -0.040313712893207176`}, {1.1584522890241267`, 
         0.5223393953466067}, {1.1863178690872151`, 0.027040639052224202`}, {
         1.2398224572196332`, -0.4449857649067035}, {
         1.6064334034138015`, -0.19841172858728973`}, {1.927164106234258, 
         0.20975876424840068`}, {
         1.9671123567059163`, -0.22978634620736083`}, {
         2.0862930166289377`, -0.36138966350270163`}, {
         2.3860067011331183`, -0.9950631001738621}, {2.5384474167160302`, 
         0.18007257671430876`}, {2.568404918588692, 0.5365785236093772}, {
         2.8142103969306005`, 0.19348287412068688`}, {3.126102424715846, 
         0.388243115435428}}]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.45200562384375*^9, 3.452007650625*^9, 
  3.452254707015625*^9, 3.514556077017*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.44`", ",", "0.55`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7`", ",", "0.29`"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "3.461515242119128`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "14"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452005623875*^9, 3.452007650640625*^9, 
  3.45225470703125*^9, 3.514556077032625*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
The slope is between 0.4 and 1.0. The latter suggests the logarithmic \
transformation we have already examined, while the former suggests a \
square-root transformation.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxPlot", "[", 
  RowBox[{
   SqrtBox["PopulationData"], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", "Automatic"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.452005628640625*^9},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{
    PointBox[{1, 2.8053520278211077`}], {}, {
     PointBox[{3, 3.4510867853474796`}], PointBox[{3, 2.592296279363144}]}, 
    PointBox[{4, 5.301886456724625}], PointBox[{5, 5.583905443325486}], 
    PointBox[{6, 5.44609952167604}], {PointBox[{7, 5.098038838612354}], 
     PointBox[{7, 4.1182520563948}]}, PointBox[{8, 8.936442245099556}], {}, 
    PointBox[{10, 4.68187996428785}], {PointBox[{11, 7.057619995437555}], 
     PointBox[{11, 6.210475022089695}]}, {PointBox[{12, 7.958643100428615}], 
     PointBox[{12, 6.029925372672534}]}, PointBox[{13, 10.49809506529637}], 
    PointBox[{14, 8.820997676000147}], {}, {}}, {{
     LineBox[{{1, 0.8831760866327847}, {1, 0.8306623862918074}, {0.75, 
       0.8306623862918074}, {1.25, 0.8306623862918074}}], 
     LineBox[{{0.85, 0.9380680092572709}, {1.15, 0.9380680092572709}}], 
     LineBox[{{1, 1.57797338380595}, {1, 2.0542638584174138`}, {0.75, 
       2.0542638584174138`}, {1.25, 2.0542638584174138`}}], 
     LineBox[{{0.75, 0.8831760866327847}, {1.25, 0.8831760866327847}, {1.15, 
      0.9380680092572709}, {1.25, 1.57797338380595}, {0.75, 
      1.57797338380595}, {0.85, 0.9380680092572709}, {0.75, 
      0.8831760866327847}}]}, {
     LineBox[{{2, 1.1916375287812984`}, {2, 1.1357816691600546`}, {1.75, 
       1.1357816691600546`}, {2.25, 1.1357816691600546`}}], 
     LineBox[{{1.85, 1.3171816801963478`}, {2.15, 1.3171816801963478`}}], 
     LineBox[{{2, 2.453568829277059}, {2, 2.946183972531247}, {1.75, 
       2.946183972531247}, {2.25, 2.946183972531247}}], 
     LineBox[{{1.75, 1.1916375287812984`}, {2.25, 1.1916375287812984`}, {2.15,
       1.3171816801963478`}, {2.25, 2.453568829277059}, {1.75, 
      2.453568829277059}, {1.85, 1.3171816801963478`}, {1.75, 
      1.1916375287812984`}}]}, {
     LineBox[{{3, 1.57797338380595}, {3, 1.3}, {2.75, 1.3}, {3.25, 1.3}}], 
     LineBox[{{2.85, 1.6446708592801604`}, {3.15, 1.6446708592801604`}}], 
     LineBox[{{3, 1.9595917942265424`}, {3, 1.9595917942265424`}, {2.75, 
       1.9595917942265424`}, {3.25, 1.9595917942265424`}}], 
     LineBox[{{2.75, 1.57797338380595}, {3.25, 1.57797338380595}, {3.15, 
      1.6446708592801604`}, {3.25, 1.9595917942265424`}, {2.75, 
      1.9595917942265424`}, {2.85, 1.6446708592801604`}, {2.75, 
      1.57797338380595}}]}, {
     LineBox[{{4, 1.5264337522473748`}, {4, 1.4106735979665885`}, {3.75, 
       1.4106735979665885`}, {4.25, 1.4106735979665885`}}], 
     LineBox[{{3.85, 1.6541902824995738`}, {4.15, 1.6541902824995738`}}], 
     LineBox[{{4, 2.3130067012440754`}, {4, 2.7982137159266447`}, {3.75, 
       2.7982137159266447`}, {4.25, 2.7982137159266447`}}], 
     LineBox[{{3.75, 1.5264337522473748`}, {4.25, 1.5264337522473748`}, {4.15,
       1.6541902824995738`}, {4.25, 2.3130067012440754`}, {3.75, 
      2.3130067012440754`}, {3.85, 1.6541902824995738`}, {3.75, 
      1.5264337522473748`}}]}, {
     LineBox[{{5, 1.4730919862656235`}, {5, 1.3638181696985856`}, {4.75, 
       1.3638181696985856`}, {5.25, 1.3638181696985856`}}], 
     LineBox[{{4.85, 1.7829898673485127`}, {5.15, 1.7829898673485127`}}], 
     LineBox[{{5, 2.839013913315678}, {5, 3.181194744117373}, {4.75, 
       3.181194744117373}, {5.25, 3.181194744117373}}], 
     LineBox[{{4.75, 1.4730919862656235`}, {5.25, 1.4730919862656235`}, {5.15,
       1.7829898673485127`}, {5.25, 2.839013913315678}, {4.75, 
      2.839013913315678}, {4.85, 1.7829898673485127`}, {4.75, 
      1.4730919862656235`}}]}, {
     LineBox[{{6, 1.6401219466856725`}, {6, 1.5620499351813308`}, {5.75, 
       1.5620499351813308`}, {6.25, 1.5620499351813308`}}], 
     LineBox[{{5.85, 1.8038356320697462`}, {6.15, 1.8038356320697462`}}], 
     LineBox[{{6, 2.5199206336708304`}, {6, 2.7586228448267445`}, {5.75, 
       2.7586228448267445`}, {6.25, 2.7586228448267445`}}], 
     LineBox[{{5.75, 1.6401219466856725`}, {6.25, 1.6401219466856725`}, {6.15,
       1.8038356320697462`}, {6.25, 2.5199206336708304`}, {5.75, 
      2.5199206336708304`}, {5.85, 1.8038356320697462`}, {5.75, 
      1.6401219466856725`}}]}, {
     LineBox[{{7, 1.624807680927192}, {7, 1.3}, {6.75, 1.3}, {7.25, 1.3}}], 
     LineBox[{{6.85, 1.8585055255094125`}, {7.15, 1.8585055255094125`}}], 
     LineBox[{{7, 2.238302928559939}, {7, 2.238302928559939}, {6.75, 
       2.238302928559939}, {7.25, 2.238302928559939}}], 
     LineBox[{{6.75, 1.624807680927192}, {7.25, 1.624807680927192}, {7.15, 
      1.8585055255094125`}, {7.25, 2.238302928559939}, {6.75, 
      2.238302928559939}, {6.85, 1.8585055255094125`}, {6.75, 
      1.624807680927192}}]}, {
     LineBox[{{8, 1.816590212458495}, {8, 1.7291616465790582`}, {7.75, 
       1.7291616465790582`}, {8.25, 1.7291616465790582`}}], 
     LineBox[{{7.85, 2.232587518986574}, {8.15, 2.232587518986574}}], 
     LineBox[{{8, 2.6870057685088806`}, {8, 3.3196385345395663`}, {7.75, 
       3.3196385345395663`}, {8.25, 3.3196385345395663`}}], 
     LineBox[{{7.75, 1.816590212458495}, {8.25, 1.816590212458495}, {8.15, 
      2.232587518986574}, {8.25, 2.6870057685088806`}, {7.75, 
      2.6870057685088806`}, {7.85, 2.232587518986574}, {7.75, 
      1.816590212458495}}]}, {
     LineBox[{{9, 2.1071307505705477`}, {9, 1.833030277982336}, {8.75, 
       1.833030277982336}, {9.25, 1.833030277982336}}], 
     LineBox[{{8.85, 2.6144957801491118`}, {9.15, 2.6144957801491118`}}], 
     LineBox[{{9, 3.438022687534217}, {9, 5.038849074937649}, {8.75, 
       5.038849074937649}, {9.25, 5.038849074937649}}], 
     LineBox[{{8.75, 2.1071307505705477`}, {9.25, 2.1071307505705477`}, {9.15,
       2.6144957801491118`}, {9.25, 3.438022687534217}, {8.75, 
      3.438022687534217}, {8.85, 2.6144957801491118`}, {8.75, 
      2.1071307505705477`}}]}, {
     LineBox[{{10, 2.5553864678361276`}, {10, 2.3790754506740637`}, {9.75, 
       2.3790754506740637`}, {10.25, 2.3790754506740637`}}], 
     LineBox[{{9.85, 2.6738378862723815`}, {10.15, 2.6738378862723815`}}], 
     LineBox[{{10, 3.37934904974316}, {10, 4.308131845707603}, {9.75, 
       4.308131845707603}, {10.25, 4.308131845707603}}], 
     LineBox[{{9.75, 2.5553864678361276`}, {10.25, 2.5553864678361276`}, {
      10.15, 2.6738378862723815`}, {10.25, 3.37934904974316}, {9.75, 
      3.37934904974316}, {9.85, 2.6738378862723815`}, {9.75, 
      2.5553864678361276`}}]}, {
     LineBox[{{11, 2.240535650240808}, {11, 1.6673332000533065`}, {10.75, 
       1.6673332000533065`}, {11.25, 1.6673332000533065`}}], 
     LineBox[{{10.85, 2.838129771885665}, {11.15, 2.838129771885665}}], 
     LineBox[{{11, 3.111269837220809}, {11, 3.111269837220809}, {10.75, 
       3.111269837220809}, {11.25, 3.111269837220809}}], 
     LineBox[{{10.75, 2.240535650240808}, {11.25, 2.240535650240808}, {11.15, 
      2.838129771885665}, {11.25, 3.111269837220809}, {10.75, 
      3.111269837220809}, {10.85, 2.838129771885665}, {10.75, 
      2.240535650240808}}]}, {
     LineBox[{{12, 3.2046840717924128`}, {12, 3.028200785945344}, {11.75, 
       3.028200785945344}, {12.25, 3.028200785945344}}], 
     LineBox[{{11.85, 3.2969651652373506`}, {12.15, 3.2969651652373506`}}], 
     LineBox[{{12, 3.6496575181789317`}, {12, 3.6496575181789317`}, {11.75, 
       3.6496575181789317`}, {12.25, 3.6496575181789317`}}], 
     LineBox[{{11.75, 3.2046840717924128`}, {12.25, 3.2046840717924128`}, {
      12.15, 3.2969651652373506`}, {12.25, 3.6496575181789317`}, {11.75, 
      3.6496575181789317`}, {11.85, 3.2969651652373506`}, {11.75, 
      3.2046840717924128`}}]}, {
     LineBox[{{13, 2.808914381037628}, {13, 2.6532998322843198`}, {12.75, 
       2.6532998322843198`}, {13.25, 2.6532998322843198`}}], 
     LineBox[{{12.85, 3.5566891316225826`}, {13.15, 3.5566891316225826`}}], 
     LineBox[{{13, 4.345112196480086}, {13, 5.669215113223347}, {12.75, 
       5.669215113223347}, {13.25, 5.669215113223347}}], 
     LineBox[{{12.75, 2.808914381037628}, {13.25, 2.808914381037628}, {13.15, 
      3.5566891316225826`}, {13.25, 4.345112196480086}, {12.75, 
      4.345112196480086}, {12.85, 3.5566891316225826`}, {12.75, 
      2.808914381037628}}]}, {
     LineBox[{{14, 2.9597297173897483`}, {14, 2.7386127875258306`}, {13.75, 
       2.7386127875258306`}, {14.25, 2.7386127875258306`}}], 
     LineBox[{{13.85, 3.5754370187747115`}, {14.15, 3.5754370187747115`}}], 
     LineBox[{{14, 4.978955713801841}, {14, 5.958187643906492}, {13.75, 
       5.958187643906492}, {14.25, 5.958187643906492}}], 
     LineBox[{{13.75, 2.9597297173897483`}, {14.25, 2.9597297173897483`}, {
      14.15, 3.5754370187747115`}, {14.25, 4.978955713801841}, {13.75, 
      4.978955713801841}, {13.85, 3.5754370187747115`}, {13.75, 
      2.9597297173897483`}}]}, {
     LineBox[{{15, 3.0773365106858237`}, {15, 2.6851443164195103`}, {14.75, 
       2.6851443164195103`}, {15.25, 2.6851443164195103`}}], 
     LineBox[{{14.85, 4.083519189768467}, {15.15, 4.083519189768467}}], 
     LineBox[{{15, 4.793745925682754}, {15, 6.735725647619565}, {14.75, 
       6.735725647619565}, {15.25, 6.735725647619565}}], 
     LineBox[{{14.75, 3.0773365106858237`}, {15.25, 3.0773365106858237`}, {
      15.15, 4.083519189768467}, {15.25, 4.793745925682754}, {14.75, 
      4.793745925682754}, {14.85, 4.083519189768467}, {14.75, 
      3.0773365106858237`}}]}, {
     LineBox[{{16, 4.06201920231798}, {16, 3.3361654635224554`}, {15.75, 
       3.3361654635224554`}, {16.25, 3.3361654635224554`}}], 
     LineBox[{{15.85, 4.771343703818277}, {16.15, 4.771343703818277}}], 
     LineBox[{{16, 6.076183012385325}, {16, 8.306623862918075}, {15.75, 
       8.306623862918075}, {16.25, 8.306623862918075}}], 
     LineBox[{{15.75, 4.06201920231798}, {16.25, 4.06201920231798}, {16.15, 
      4.771343703818277}, {16.25, 6.076183012385325}, {15.75, 
      6.076183012385325}, {15.85, 4.771343703818277}, {15.75, 
      4.06201920231798}}]}}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->True,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->{None, Automatic},
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.45200563034375*^9, 3.452005640390625*^9}, 
   3.4520076506875*^9, 3.452254711234375*^9, 3.51455608267325*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
This transformation also reduces the dependence of spread on the median, \
although perhaps not as well as the logarithmic one.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
Although we have been dealing with transformations as a tool to enhance \
visual comparison, these sorts of transformations are sometimes necessary in \
order to use common confirmatory methods. For example, classical \
analysis-of-variance models assume constant variance within groups.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
A similar example of when transformations can be required or preferred is \
illustrated by the ganglion data which we have already examined in Chapters \
4, 6, and 7.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
We will load the data and review the fit to a parabola which we have made to \
it.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Ganglion", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"GanglionData\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> Left, \
ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.452007650703125*^9, 3.514556087063875*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GanglionData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 StyleBox["\<\"GanglionData is data for the ratio of the central ganglion \
cell density\\n\tto the peripheral density versus retinal area for 14 cat \
fetuses.\\n\tThe fetuses ranged in age from 35 to 62 days, and the retinal \
area\\n\tis approximately monotonic in the age of the fetus. The data is from\
\\n\tBarry Lia, Robert W. Williams, and Leo M Chalupa, Science 236, (1987)\\n\
\tpg 848. The format of the data is {area, CP}, where area is in mm^2\\n\tand \
CP is dimensionless.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556089251375*^9},
 CellTags->{"Info3514541689-3150195", "Transforming data"}]
}, Open  ]],

Cell[TextData[{
 "Remember that ",
 StyleBox["CP", "MR"],
 " denotes central to peripheral cell density ratio and ",
 StyleBox["area", "MR"],
 " denotes retinal area."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"LinearFit", "[", 
   RowBox[{"GanglionData", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}], ",", "a", ",", 
    RowBox[{"ReturnResiduals", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVznk4lAkAx3GGV4SRocvIEYaZEV6WdbTNL2VyDGkIscO8HhFLKYlSspZC
rlQUI1lhU8pImnjk6EKebHJ1rS7VY+XRYcsRu/vH9/n8+zUM3SXcTpOTk/P5
r/9tcjfNtrFh4XGlfvmoA4Enoi97z2xiYbpw0NXFicB0bLtoIYiFbvoym6q1
BOyLgizvp7GQUmDR+wuPQOPrvL7QQRbWjd0xUXIhUH/w24qC/aZYeJIjSPAm
UHO5q3Ky1QzF7akpHjsIlDCiW2sFXFhUyKU2lxD4wXnbaHcoF9wmzo/5pQR6
dvNV3ydyoTkdERFeRmD+TwP/1ZVcFE0wHZZXEAjNG5go/M5FriyyPKuGAEeN
p5dy2RzsTkm67AYBGcE4JFxiAbVBscTqMYGouaDS2Ugr5F4SKxToKuEPShbR
PG+NZvc9u51rlBDy4Q0z/YgtlLrCW+3dFmGD8tK9di72+FCZtIappgzXU7PD
tAFH+OhfidEYUsZ+6ejLxpKfcEDipTjbpQLGzOaoJg7wWcVl9HrvYiT4Ko+x
YtfDKy9w+tywKuL2dTgteugM/ldNMpOujsMPh7TidTaihK3RoOdCRydv4EWE
yAVW0jrp0UwNVMf3H37QzEfShujXfx9egsI3FpUdNFeIkvt4yg6a0GUek3C2
uyFYy0moq87AX2G9Gcvb3fEtdZP7yHsGpO92zh4nBFgXoZ9s0qYFHeslSNnu
iXzDxozRBm2cuKamOlfrBbuPbN5YxVIIU4j+KWVvjNeleOyqX4bEK9906657
w8uniiG9txyspJVsaeAWuC54V97qX4EyjpNetKoQEqvZ7KcKOijflzUYUydE
VfRWXhqbifU9nirWQh+czumvifTRxSWCYVIn74t8jXuHuspXoeypgmJ8pS/O
trQ1+r3Rg+jUP/c/+23FiYpr9VKWAZoCRHRbwg+xnC2sG88NUCb7qNVS7YfP
DSkOZ3MMsXnuCG3B3x96N03PKwpX4+gzt4ajc/6w2fVV/wLdCMF3U170lQZg
vMauJK/HCHInZVNDgm0IXWmvTZ4zBmd+1QOjyW2YtOnuHIkygb4gLY9dHogr
E11uHgIWJHYrtPfxg6BYk9RqZGwKGcdAK/19EG5f/L767pwpymjsWc/TPyOJ
vmOH+IMZ6AkhVaK1IrQ9vxVh+4gN195CR9MJESYmTJyJPg4MSWe3q5JgPFQv
mpLv4yLVksk8wguB2atV9xbumOOy5tQAYzIEvGdZEsf+NSBd59lx7mIsKFg0
Dw5YIEhtLWtdiRgv2YYq4iFLRDnPLHv7SQyX+Q6+1QErtPA3R0o3UjDbmZvc
KU9C0nOiQo9PwShMv4GrSOKgcPj5sU0UjGPW6OYpkXAMpoTh7hQ4srbf/FRJ
NMbHOTG9KQRb3657p02i7nyRenoQhbDr61K1zEj8TnshDdhD4ZECTeG4F4lf
M4zH78RRsA20zZjxJiGmR7Js4ikU3xrlhfmQ0Nf5VKyeSCG2t4VvH/DfD6mY
1nGIAu6717+iSJwSm/mZZ1JI9BmWWx9PYu/b6PwzWRTUnzyrrU0g4Rst7VbK
plAdF5yjc4AEI9GR9zKXwquR4ddfkknk5gnMCk9SSJbUTFzMIBGz9HioQiEF
8+YiS51jJAQlA5LYIgoj4/IVGTkkVKuDNT2KKXhlehqGF5AYM6/wkJVQWPzF
wnzgJInu+nfpJqUUunfnRG4sInHB3ryt4CyFbFrk46tnSGTcjJ1ZKKMgrGpP
MpKQ+BfDcC75
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVkHs0lAkAR/F5RpZBhAbJYGj4SNuK/DzG27KTJTTMpySS5BVbNpVHWzYp
pmRkvZpFXtmQTp6nLaJoQ2JbnRRHi1Ikz23/uOf+e8/VCT7CCRETERHZ/ZX/
3eSqn2FuzsA7wr11wZbAC+6n2FwnBoj9p9ih9gS+RLVx1wIYqC5+pT7oQGDH
lQCTRykMdLRtrm9yIlD/OvNp8AADIwnCqiwPArdOLKhdStRH39Mm4c9+BMqr
Okvftxig10KmyTuaQB4toqXS3QhqjQ5BH4QEttn5vekKNgLdpXBsqIxA91FH
2YkEI6Rbqs51VBBY7dX23VxqhKRdng2CagLBmf3T/BUjrHTNtPIaCDDlbOjJ
VcbwnJ+dMHtAoFGClsRRYMGcL5qxNk4gfDkgfynMFOJLNnRLljh+pxpD766a
gXs5eGS8TRxBU2MaqWkWcFuJPsAPlYC9tErsdvYOVJhJPr5tJgnnnKXnYv2W
CLnoE7BLUgqJtW9e1edZI0F/a0skIQ3aomd4ExOY9YlVsFKWwTFv6UlGlC0u
/bNt0tdgHWLi23dK9dkhRzg06HdIFif7BpXi1B3Aq1Tbr1Ath4c2/aOhXDZ6
ldetMxWVhzDu2cnHdx1h0m//hJP+DfhjrNJ2MWeokV8WrqYoQFPjvIAZ4gKe
4LNKCaWIl/ufnFVtc8X8wTrrWkcaascjl7Ik3GFFK1dU1FeCupkCkkM8cKdv
ot6QoYzLt+Vklyu/x9QhZVEXLRVwkiWezUl7QSqoIs36uw1IqF7QrGnwQmr8
mepv/VXBOL7RsNb/Byxks2nl0WooYO6kR8hyoGl78mNW1UYUxp8bOFzDQa75
QFrJqDpsuz1kzDi7Ydv5rFJHVRM3JWh6NaLeYBn5rxTHbELBMCEeV+qNepZM
+18ddHBz5h999PkR7Laj3Yp0bTTt4cpbSPjgoKjUdP+INgoaPyjdE/ogarD1
J2a2DjyX08TWfH1hE5rJfsnbjPQRlz/Sl32RPBvBOqGni8A/k0ef5u+BcpBT
Xdg7XYhkN84NuvthWqMhcOXBFjBXNz3Wfe+H56Y9R6zz9KDlnpJpWOiPpgTZ
vaZpDAi2qynHOwbgDT3vN4NQfTQytZVSJwJwjGG696OzAQrEDJc8ru4Fmavr
f8feEPLHgm5wrbho1Wk+wzZnwvkJ31J/mgufTf7DL6yMoEPaudQJAuH/rraj
zMkYp000NNJsgmBJV1j8zN6KKsW5ftr7IJRE5usVBLFAOq8axrjysDZzU1or
wgQBclaMXXk8LE01CNlWpgi3W9zwdpaHyHPSRHevKe45eobVOlAouNXD1wok
Iei+XEx3pNDQU1Ek4JE4wXn+93knCjf8DV9v3EfCMpDiHHClsNwpJqZykER9
XMxODS8K11dZDeujSdSUXFmfGkChviViTTqNRJHYaO2eaAo6hUlS+lUkTp3d
8u/9GAr3512E5TUkePJhDPM4ClbNt4+z6khoqc9eW59AoaLoUPv2xq89pHhK
exKFxDavBy7tJHJ4Bj7Gv1AY8xGpThwgEfs24mLuOQrdnR1XRYZIeEfUdklm
UDhfxWhIHyZBS7C0eXWBwumeriz+KIkLme4G/GwKIVRGc/0kicMqWcEEn8JM
sJuHzRQJ97x+QdQVCl4DZQoPZ0jICgMV3a5R+JXGtnjxicSkcbFbYx6F8OFT
/H2fSXTdGk/Vy6eguSHQeOoLibIdxq2XrlMoah+aj18mcbY5anGt4Ouv0U9z
Imsk/gOjkDgL
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVznk4lAkAx3EN9p1yZMZ95EgGM2JeV5LySxp3NOS+XolHq1LCtBEqR/RQ
EmJkVWiFTOestGG3zbW1edChenhCspscKSG2/eP7fP796kUc4O+hSUhIeH/v
f5tcDU9bWLDwyGkmvYck8DLk0+ELTix87OC461sQ+BrXGrIcxMLIEVe3BEsC
NsVBZl0nWdi823ZMawOBO2/zeyL6Wfg5aFj4kx2BG8lzagVHDLH+bfjUAScC
tQ0dVZMPjBDpschzCCVQxox9UO/OgWNe85WMfAKWDgEjnREc2HBuneKdJdB9
kCczJuCg7K74Bf0cgaW/df3WVnEgujjWdLaIQER+30TRNw50qt+m3yonwJa1
105rMIFkKW/tljoCYmlmCl/BFCPKLXVUJ4G9i0HlCzFcqIWmj71fRcdVShx9
b8kc6rTjP5QX0BH2YVgzI9MKrYWBagPsldhGVz5svd0GZupTp9NGVsL5/MJz
Wp8ttjYQaYM1q3BENDJ0p2wzkhlxLllnZMCc99zbxAY+NSs3WeTKIsmHPs6K
24pV9mn08Ww5xCe2bSKeOuALzzVHLJJH6tNnigkajuivkpZaP7Aa7fZ9g9Eh
29Fefa3uY7YCahJ6Ux/f4yFUaB1masdA0bBpVRvNGZe6rmUmfWBASzNXyN7j
guCcY3mFYibeRD7JVm11xbxwwFcuVxGid/sXzkq7A82F4xsDlKBhroC0PR6I
PngisHKbMs7dlpVZrN+B1ET7lFwjFfDTpHtn6V54SvNVqOSoQnB9TqvxrhdU
uR0JbCs1sI6qG4sCd6IkJtjmtbU6KtibtGNl+NDSTWIZBGigMjGnf18jHzer
er/sPqSJrd0eK8353vi4s7dGlK+FOmmmQeMKH0zPWCxNPFmDigFJqYQqH2S6
C669kNJByPnPXTO+uzCU8bVkp5kumvxD5K2kfSHwLgsVvtFFhXhK8X6NLxIL
MMfI0oPnYiZt2c8P35RaaJxta5H1yuVW1qIfRv9JZ/R/WYvQP9MGe8r98cdn
gxO36/UhUSiefeYegH6VXzsiBevAXlrzWH8yAPQNj/SO2xpAx/1kvnFlIK5E
Zm+IYrIgtFZTSuQFQd8q+I32EAtitq5ixlgQGGTX+5JGQ1TQjBc8SoLx8ERd
IlFsBPmksOoQuxC0XOhwM4g3hvOTIlvDiRBktkxdNYtmQ490cLkpDIUzN9kw
MJiD42aampn2YVCp5hQSPBM0MGb7mJNheOkiUOx3Xg/Seck43jUcy6rX9+XZ
myJI1o61pSwc3Uk9bZbWZtjrMK8yOh0OrUMpOYX6XNznecaIHCmIjD2jDlZx
Iew+d1mbRyF/vuBhUw0Xyfznr3OdKFxKJXdJ1XJhG0rxo1wp+Fcfky5p4OJO
QvwmTS8K2lEBta13uWi8UiyXEUSBeV1BWruTi0u0QZH/IQoZUZlL8xNcpGev
+/dhPIWq+7oxrlNchMvHsCwSKMy1K0uVznChozFdKiegYLW4umvj3PcfUupk
WwoFos+x/OgKEufDjXxNTlGQ9Wrk05VIHB6NPXMhh8KO8dm2QBUSPrGizh9O
U/jdpmh3vRoJpsDWfiiPgsP0qJX3GhJ5+e5GRYUUip+1a1eySOxTPhshWUQh
RnGYMWtEwr2sTxhXTGG/ZKCVC4eETE0ow62UwmoJX7lpMxLjJpfdxGUUamVf
tfLMSXTeeJdhUE5B8FdzdZkliV9sTFoKLlJIdJi7N2lNIvu3uPnlCgpXf8xb
wdtI4j/32yvO
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{11.1, 2.56}, {13.6, 2.87}, {22.5, 2.96}, {31.4, 3.75}, {32.7, 
      3.42}, {34., 3.5}, {53.8, 4.55}, {63., 4.68}, {67., 6.98}, {81., 
      6.85}, {101., 11.25}, {107., 10.91}, {114., 11.1}, {141., 
      18.29}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-1.8900000000000006`, 0.9870000000000003},
  DisplayFunction->Identity,
  PlotRange->{{-1.8900000000000006`, 153.99}, {0.9870000000000003, 19.863}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[{{11.1, -0.09}, {13.6, 0.17}, {22.5, 0.02}, {31.4, 0.44}, {
          32.7, 0.05}, {34., 0.06}, {53.8, -0.2}, {63., -0.88}, {67., 1.02}, {
          81., -0.68}, {101., 0.97}, {107., -0.32}, {114., -1.3}, {141., 
          0.68}}], {{
           LineBox[{{11.1, 0.6}, {11.1, -0.7799999999999999}}], 
           LineBox[{
             Offset[{1.5, 0}, {11.1, 0.6}], 
             Offset[{-1.5, 0}, {11.1, 0.6}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11.1, -0.7799999999999999}], 
             Offset[{-1.5, 0}, {11.1, -0.7799999999999999}]}]}, {
           LineBox[{{13.6, 0.86}, {13.6, -0.5199999999999999}}], 
           LineBox[{
             Offset[{1.5, 0}, {13.6, 0.86}], 
             Offset[{-1.5, 0}, {13.6, 0.86}]}], 
           LineBox[{
             Offset[{1.5, 0}, {13.6, -0.5199999999999999}], 
             Offset[{-1.5, 0}, {13.6, -0.5199999999999999}]}]}, {
           LineBox[{{22.5, 0.71}, {22.5, -0.6699999999999999}}], 
           LineBox[{
             Offset[{1.5, 0}, {22.5, 0.71}], 
             Offset[{-1.5, 0}, {22.5, 0.71}]}], 
           LineBox[{
             Offset[{1.5, 0}, {22.5, -0.6699999999999999}], 
             Offset[{-1.5, 0}, {22.5, -0.6699999999999999}]}]}, {
           LineBox[{{31.4, 1.13}, {31.4, -0.24999999999999994`}}], 
           LineBox[{
             Offset[{1.5, 0}, {31.4, 1.13}], 
             Offset[{-1.5, 0}, {31.4, 1.13}]}], 
           LineBox[{
             Offset[{1.5, 0}, {31.4, -0.24999999999999994`}], 
             Offset[{-1.5, 0}, {31.4, -0.24999999999999994`}]}]}, {
           LineBox[{{32.7, 0.74}, {32.7, -0.6399999999999999}}], 
           LineBox[{
             Offset[{1.5, 0}, {32.7, 0.74}], 
             Offset[{-1.5, 0}, {32.7, 0.74}]}], 
           LineBox[{
             Offset[{1.5, 0}, {32.7, -0.6399999999999999}], 
             Offset[{-1.5, 0}, {32.7, -0.6399999999999999}]}]}, {
           LineBox[{{34., 0.75}, {34., -0.6299999999999999}}], 
           LineBox[{
             Offset[{1.5, 0}, {34., 0.75}], 
             Offset[{-1.5, 0}, {34., 0.75}]}], 
           LineBox[{
             Offset[{1.5, 0}, {34., -0.6299999999999999}], 
             Offset[{-1.5, 0}, {34., -0.6299999999999999}]}]}, {
           
           LineBox[{{53.8, 0.48999999999999994`}, {
            53.8, -0.8899999999999999}}], 
           LineBox[{
             Offset[{1.5, 0}, {53.8, 0.48999999999999994`}], 
             Offset[{-1.5, 0}, {53.8, 0.48999999999999994`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {53.8, -0.8899999999999999}], 
             Offset[{-1.5, 0}, {53.8, -0.8899999999999999}]}]}, {
           
           LineBox[{{63., -0.19000000000000006`}, {
            63., -1.5699999999999998`}}], 
           LineBox[{
             Offset[{1.5, 0}, {63., -0.19000000000000006`}], 
             Offset[{-1.5, 0}, {63., -0.19000000000000006`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {63., -1.5699999999999998`}], 
             Offset[{-1.5, 0}, {63., -1.5699999999999998`}]}]}, {
           LineBox[{{67., 1.71}, {67., 0.33000000000000007`}}], 
           LineBox[{
             Offset[{1.5, 0}, {67., 1.71}], 
             Offset[{-1.5, 0}, {67., 1.71}]}], 
           LineBox[{
             Offset[{1.5, 0}, {67., 0.33000000000000007`}], 
             Offset[{-1.5, 0}, {67., 0.33000000000000007`}]}]}, {
           LineBox[{{81., 0.009999999999999898}, {81., -1.37}}], 
           LineBox[{
             Offset[{1.5, 0}, {81., 0.009999999999999898}], 
             Offset[{-1.5, 0}, {81., 0.009999999999999898}]}], 
           LineBox[{
             Offset[{1.5, 0}, {81., -1.37}], 
             Offset[{-1.5, 0}, {81., -1.37}]}]}, {
           LineBox[{{101., 1.66}, {101., 0.28}}], 
           LineBox[{
             Offset[{1.5, 0}, {101., 1.66}], 
             Offset[{-1.5, 0}, {101., 1.66}]}], 
           LineBox[{
             Offset[{1.5, 0}, {101., 0.28}], 
             Offset[{-1.5, 0}, {101., 0.28}]}]}, {
           LineBox[{{107., 0.36999999999999994`}, {107., -1.01}}], 
           LineBox[{
             Offset[{1.5, 0}, {107., 0.36999999999999994`}], 
             Offset[{-1.5, 0}, {107., 0.36999999999999994`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {107., -1.01}], 
             Offset[{-1.5, 0}, {107., -1.01}]}]}, {
           LineBox[{{114., -0.6100000000000001}, {114., -1.99}}], 
           LineBox[{
             Offset[{1.5, 0}, {114., -0.6100000000000001}], 
             Offset[{-1.5, 0}, {114., -0.6100000000000001}]}], 
           LineBox[{
             Offset[{1.5, 0}, {114., -1.99}], 
             Offset[{-1.5, 0}, {114., -1.99}]}]}, {
           LineBox[{{141., 1.37}, {141., -0.009999999999999898}}], 
           LineBox[{
             Offset[{1.5, 0}, {141., 1.37}], 
             Offset[{-1.5, 0}, {141., 1.37}]}], 
           LineBox[{
             Offset[{1.5, 0}, {141., -0.009999999999999898}], 
             Offset[{-1.5, 0}, {141., -0.009999999999999898}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {10., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.45200564540625*^9, 3.45200765096875*^9, 
  3.45225471815625*^9, 3.51455609304825*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.56`", ",", "0.25`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.000757`", ",", "0.000032`"}], "}"}]}], ",", 
   RowBox[{"PseudoErrorY", "\[Rule]", "0.6922444522906199`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "5.75042858072568`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "12"}], ",", 
   RowBox[{"Residuals", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"11.1`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.09`"}], ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13.6`", ",", 
        RowBox[{"{", 
         RowBox[{"0.17`", ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"22.5`", ",", 
        RowBox[{"{", 
         RowBox[{"0.02`", ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"31.4`", ",", 
        RowBox[{"{", 
         RowBox[{"0.44`", ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"32.7`", ",", 
        RowBox[{"{", 
         RowBox[{"0.05`", ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"34.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.06`", ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"53.8`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2`"}], ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"63.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.88`"}], ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"67.`", ",", 
        RowBox[{"{", 
         RowBox[{"1.02`", ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"81.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.68`"}], ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"101.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.97`", ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"107.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.32`"}], ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"114.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.3`"}], ",", "0.69`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"141.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.68`", ",", "0.69`"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4520056454375*^9, 3.452007650984375*^9, 
  3.4522547181875*^9, 3.514556093063875*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["We extract the residuals throwing away the errors.", "Text",
 CellChangeTimes->{{3.452255454375*^9, 3.45225546946875*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"residuals", " ", "=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", " ", "/@", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Residuals", " ", "/.", " ", "result"}], "]"}], ",", "3"}], 
       "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Part", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}], " ", "/@", " ", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Residuals", " ", "/.", " ", "result"}], "]"}], ",", "3"}], 
       "]"}]}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.452255475421875*^9, 3.45225550534375*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"11.1`", ",", 
     RowBox[{"-", "0.09`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13.6`", ",", "0.17`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22.5`", ",", "0.02`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31.4`", ",", "0.44`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32.7`", ",", "0.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34.`", ",", "0.06`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"53.8`", ",", 
     RowBox[{"-", "0.2`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"63.`", ",", 
     RowBox[{"-", "0.88`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"67.`", ",", "1.02`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"81.`", ",", 
     RowBox[{"-", "0.68`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"101.`", ",", "0.97`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"107.`", ",", 
     RowBox[{"-", "0.32`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"114.`", ",", 
     RowBox[{"-", "1.3`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"141.`", ",", "0.68`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.45225550596875*^9, 3.51455609748575*^9}]
}, Open  ]],

Cell[TextData[{
 "We have also previously used the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["LoessFit", "MR"],
 " to show that the average residuals for this fit are very close to zero."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{
   RowBox[{"LoessFit", "[", 
    RowBox[{
     RowBox[{"Residuals", "/.", "result"}], ",", "1", ",", 
     RowBox[{"Points", "\[Rule]", "13"}]}], "]"}], ",", "residuals", ",", 
   RowBox[{"Joined", " ", "\[Rule]", " ", "True"}], ",", 
   RowBox[{"PlotLegend", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<LoessFit\>\"", ",", "\"\<Raw\>\""}], "}"}]}], ",", " ", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.4520056525*^9, {3.45225551375*^9, 3.452255532015625*^9}, {
   3.514555167563875*^9, 3.514555174157625*^9}},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{11.1, 0.0660242175598512}, {13.6, 0.0887525072316561}, {22.5, 
     0.08721406776447546}, {31.4, 0.05877384058644493}, {32.7, 
     0.05216284829636577}, {34., 0.04744033684605494}, {53.8, 
     0.006711006202278755}, {63., -0.008020582623742237}, {
     67., -0.02219072518857597}, {81., -0.07446009010023141}, {
     101., -0.09701927621199635}, {107., -0.06698501627118149}, {
     114., -0.05135917575952326}, {141., 0.08847812374053105}}]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], 
    LineBox[{{11.1, -0.09}, {13.6, 0.17}, {22.5, 0.02}, {31.4, 0.44}, {32.7, 
     0.05}, {34., 0.06}, {53.8, -0.2}, {63., -0.88}, {67., 1.02}, {
     81., -0.68}, {101., 0.97}, {107., -0.32}, {114., -1.3}, {141., 0.68}}]}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{10., 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.452005653421875*^9, 3.452007651375*^9, 3.452254722640625*^9, {
   3.452255516140625*^9, 3.4522555330625*^9}, 3.514555174751375*^9, 
   3.514556101267*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "However, the square root of the absolute values of the residuals is not \
constant but rather tends to increase. We form a level-spread data set, \
ignoring the errors in the residuals contained in ",
 StyleBox["result", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"CPfitted", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2.56", "+", 
       RowBox[{"0.000757", " ", 
        SuperscriptBox["#1", "2"]}]}], "&"}], ")"}], "/@", 
    RowBox[{"First", "/@", "GanglionData"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sqrtResiduals", "=", 
   SqrtBox[
    RowBox[{"Abs", "[", 
     RowBox[{"First", "/@", 
      RowBox[{"Last", "/@", 
       RowBox[{"(", 
        RowBox[{"Residuals", "/.", "result"}], ")"}]}]}], "]"}]]}], 
  ";"}]}], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"lsdata", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"CPfitted", ",", "sqrtResiduals"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"lsdata", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "20"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1.5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.45200566528125*^9},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], 
   PointBox[{{2.65326997, 0.3}, {2.70001472, 0.41231056256176607`}, {
    2.94323125, 0.1414213562373095}, {3.30637172, 0.6633249580710799}, {
    3.3694525300000002`, 0.22360679774997896`}, {3.435092, 
    0.2449489742783178}, {4.75109108, 0.4472135954999579}, {5.564533, 
    0.938083151964686}, {5.958173, 1.0099504938362078`}, {7.526676999999999, 
    0.8246211251235321}, {10.282157, 0.9848857801796105}, {11.226893, 
    0.565685424949238}, {12.397972, 1.140175425099138}, {17.609917, 
    0.8246211251235321}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{{0, 20}, {0, 1.5}},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.452005665765625*^9, 3.45200765146875*^9, 
  3.45225555896875*^9, 3.51455610929825*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
The details of why we take each data point to be the following are discussed \
in Section 8.2.1.1. \
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "fitted", " ", "value", " ", "of", " ", "dependent", " ", "variable"}], 
   ",", 
   SqrtBox[
    RowBox[{"Abs", "[", "residual", "]"}]]}], "}"}]], "DisplayMath",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "For now, we simply state that this is the equivalent of the ",
 StyleBox["{", "MR"],
 StyleBox["median", "MO"],
 StyleBox[", ", "MR"],
 StyleBox["quartile spread", "MO"],
 StyleBox["}", "MR"],
 " data set we formed earlier for the city population."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "In attempting to compute confidence intervals for the results of the fit to \
the data using the standard ",
 StyleBox["Statistics`ConfidenceIntervals`", "MR"],
 " package, for example, the technique used depends on whether or not the \
residuals increase or decrease with level. If the absolute values of the \
residuals depend on level it is called a \[OpenCurlyDoubleQuote]monotone",
 "\[CloseCurlyDoubleQuote]",
 " behavior. Eliminating monotone behavior by a transformation of the data \
gives a more reliable statistical result."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],

Cell["\<\
We fit the logarithm of the level-spread data to a straight line.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{
   RowBox[{"Log", "[", "lsdata", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
   RowBox[{"Reweight", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVkH001GkcxWcMP6QXFsUmLzUVdY6ibJml71OxXlIsYduElTHVnoqyVFIZ
YVOLGFOdRG1EreSlzQg9TNMxZmYticbbrJdFhGHGGAzZ2T/uuef+cc/nnmsV
dtaXrkEikQ6q9b9nvjqrLHOUwim251T+VjmObijwOb9HCqt92s9228hxgLjr
6c79UqjXDZswtJZj03m3oEovKZjEX/zMpMrxQ2fL+poQKbw7XjQYuk6OS3jN
qQ1JUrC0IzrNVsmx8L2deU+LFNqE9VyWTIaZyovrNR0mAZEdWderZNhRO1Ol
6piEGEVEmcBZhs/13rfXip6CW5kW/P2CKZwwxBnQ0ZMBqcmDQj4yhVf2bnXr
KJFBe2YFhyqZxOaPM3Sq3eSQSipixP08iYuPHLh8clwOSFppFSWRYn1n01Nf
ZUzDlq8ptedHJ7ByRPynaLMCmtnHD3QTE/ho6kSFn0gBtE37mwz0x/G+acWq
MfoMBGvvdnluM4aXUvWHrizMgMtGfUqL22dMM044I8lTwqg/41W97yiePTFw
2Hv3LBwStwaZnBnBO0vvj9/qmYXo01j5bcwn/B2VQXp3dQ5+hLSuYeYw7vyJ
GrVyzTzMh50rn8sbwmOZu1jU6nkIvdcWL346iBN+czL2OqyCa1aHnNbx/sWs
uDvuaF4F4TWuUlvhAI5na83YPlgAgmX5md/ej0cu0cnbHBYhvFa/ky/rw62+
a7GqYxGS567WZqt6MUxzOzvOf4HwFE0W36gXJ3DjI8uXLQEpXxyhTZfgvdfT
OIElS1AX/CRtzaVuzE1x35aygYRma3Jz5C868fqG6C73GBLioOysk1iMJ3Ke
8VIaSGjS2dds8mM7jgvsCPI2JKN8iePNfQZtuEFvx6F4Ohl151sM2FJb8Yf8
pIkd5WR0a+V2q+HAFuz1oU/IWCSjCwMr+kNs/saJiyc0NLw10KfpSr+NAUIc
pzcyTL2vgdwPVt5m8hqwvSFrU8m4BiqdLH9kOPQW/7G0y6iORkE6XZQrTh51
OJ05uMc7mYJKI9+qlsdXYfulWq6LmIJC62PzdJrKMDs0XcGlaiISel7JcCnA
VdU3EwpjNdG1gsg+h6Fk7Pb8tqduoyZC+5hRGQZZwE7M4MqNtBDJ5wbnDa8Q
8v1eZ7kwtJCPzfZZ2b0KiNbpMTR/qYWazaJUAU2v4YWfbkv0khayNhYddZLW
wdO7ocN23xPok88Aw5THg3BuaXHsAwIVuRYUBgfyYT17K4hyCXTXnpHkz+BD
78knLZYPCXTBwua4VywfjhnkzDT+TqAf5orNaXf4EBCagsyKCDRb/DLb+CMf
PL4c+1BXTqATRrxEUUAj2NL0FnT5BDIZ6A+hBQhgbEVyWnAjgXSa853tIgTw
rI9kVSFQ92si1lrHCGDzjRnXoL8IxGePthuzBWAp7ksvea/me8oOTrUJwDCG
s8Gvh0DiMrJTkb8Q3nvseFUoUefct6Z5dCFkrCtxX/iHQJybScrsX4Sw/N3j
0wX9BPqVrluRmC0Ewii9UjlMoN2mBltC2oTAG9b19BohkDXRqh0wKARm9fXu
h6PqvXLWoJdCCEthl8ie4+q/RCaPaMYiePONIit3Qs2r6rxit1EEl5dFbpJL
1Xuf5ARZO4iAJhnluE2p+VnBNAtXEcyW0Q/kyNR/XrM0We0vgv8AUlFzUw==

      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAAkrZv97E57z8XknTU1Bn5v3THpVBz
Pu8/DEjvgQAX+b9W2NupNEPvPwD+aS8sFPm/GfpHXLdM7z/qaV+Kgw75v6A9
IMG8X+8/vEFKQDID+b+uxNCKx4XvP2DxH6yP7Pi/y9IxHt3R7z+oUMuDSr/4
v4L3eSIENfA/Og8iM8Bk+L85B5L7+9nwP6WB80xwoPe/cuCbMgV08T/f3VXG
Iun2v4HmuOMIC/I/D33PvW019r8O4CtH2a7yP4gRbXB9cvW/HqOQCLtH8z/P
j5uCj7z0v6xZS3xp7fM/XgPuT2b3878QPRlqEpD0P+W5V5vVNfO/9+nYtcwn
9T85WlJGR4Hyv1uK7rNTzPU/1u9wrH298b9C9PUP7GX2P0BvIHK2BvG//4oQ
5n789j+iMee1h1PwvzoVgW7en/c/mdKjaTsi77/4aONUTzj4P4kVmyZst+2/
NLCb7Yzd+D8JQ9pZJi7sv0YkZwDFf/k/efZHiRGs6r/aYSRxDhf6P4J913cB
ROm/7JI3lCS7+j8g767cer3nv4GNPBVMVPs/VzSoAPlQ5r+Ue5dIQPr7PyBk
6ZoAxuS/fZYF9i6d/D/WGVkxOULjv+l6ZQEvNf0/J6PqhnbY4b/TUhu/+9n9
PwoXxFI9UOC/P/TC2tlz/j8SvX67EcTdv4HCfXCyCv8/6lfSyQr22r9BhI64
V67/P+jHtcQW69e/wodIL4cjAEAa39w9LBTVvyLHdNtIdgBAdMuTo1QA0r/u
nKrEh8cAQECHTwO+9c2/e1fZXE8TAUAQxv675VLIv8cLM059ZQFAIK/NTTM2
wr/UpIXuM7IBQEDNR7gnA7m/TNThy2f9AUBw19Bs4aarv4P9aAICTwJAAOyF
bFYAe797C+nnJJsCQKAikt9/RqM/MhOUJq7tAkDgLBuUOeq1P6v/NxTAOgNA
0FWvn4awwD+PguU+T4YDQID9loQsT8Y/Mv+9wkTYA0Dw+l6QrGfMP5Zgj/XC
JARA8NTPzwwM0T+5u4uBp3cEQExX4GowIdQ/8ciJhlOjBEAa/gA08sDVPwsQ
nh8=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAkrZv97E57z96NUEc6nrqv3THpVBz
Pu8/QLB6u3B56r9W2NupNEPvPwQrtFr3d+q/GfpHXLdM7z+MICeZBHXqv6A9
IMG8X+8/nQsNFh9v6r+uxNCKx4XvP8Dh2A9UY+q/y9IxHt3R7z8DjnADvkvq
v4L3eSIENfA/jOaf6pEc6r85B5L7+9nwP47StCtKtum/cuCbMgV08T9yjtKT
yVbpv4HmuOMIC/I/4j2IkSj56L8O4CtH2a7yP0co9AGYk+i/HqOQCLtH8z+K
4miZzjTov6xZS3xp7fM/w9eToxXO578QPRlqEpD0P4rAVkM8aee/9+nYtcwn
9T8ueSIKKgvnv1uK7rNTzPU/x2ykQyil5r9C9PUP7GX2PzwwL6TtRea//4oQ
5n789j9D51GakujlvzoVgW7en/c/O9kqA0iD5b/4aONUTzj4PxObDJPEJOW/
NLCb7Yzd+D/fl6SVUb7kv0YkZwDFf/k/O4jULb5Z5L/aYSRxDhf6P3JIDe3x
++O/7JI3lCS7+j+gQ/weNpbjv4GNPBVMVPs/qQ70d0E347+Ue5dIQPr7P6gU
okNd0OK/fZYF9i6d/D82DuikWGviv+l6ZQEvNf0/odc2LRsN4r/TUhu/+9n9
PwLcOyjupuG/P/TC2tlz/j8/sElKiEfhv4HCfXCyCv8/C3jvAQLq4L9BhI64
V67/P8x6SyyMhOC/wodIL4cjAEBrTbB93SXgvyLHdNtIdgBA/LWWg35+37/u
nKrEh8cAQEC4/DYBtd6/e1fZXE8TAUBAWnQ4Evndv8cLM059ZQFAKHJYH0Qt
3b/UpIXuM7IBQMgpTlQEb9y/TNThy2f9AUCKyHO0g7Tbv4P9aAICTwJAON0F
+iPq2r97C+nnJJsCQJyRqY1SLdq/MhOUJq7tAkDou7kGomDZv6v/NxTAOgNA
8IXbzX+h2L+PguU+T4YDQBg3LcAc5te/Mv+9wkTYA0AoXuuX2hrXv5Zgj/XC
JARA8CS7vSZd1r+5u4uBp3cEQKRh98iTj9W/R62RSgnJBEB4hWP/v8XUv5aD
kMLzFAVABEnhg3oJ1L+kU7qTRGcFQHyCy+1VPdO/dAjdEx60BUCsW8elv37S
v69TCdF0/wVA/BvziOjD0b+pmGDnMVEGQDBSi1Ey+dC/ZMKwrHedBkAkKDVo
CjzQvyKWKz/MngZAkN28yb040L/gaabRIKAGQASTRCtxNdC/XRGc9smiBkDk
/VPu1y7Qv1Zgh0AcqAZAqNNydKUh0L9J/l3UwLIGQCB/sIBAB9C/LjoL/AnI
BkBArFcy7aTPv+wNho5eyQZAGBdn9VOez7+q4QAhs8oGQPCBdri6l8+/J4n2
RVzNBkC4V5U+iIrPvyDY4Y+u0gZAOAPTSiNwz78TdrgjU90GQDBaTmNZO8+/
0kkztqfeBkAAxV0mwDTPv5Adrkj83wZA6C9t6SYuz78MxaNtpeIGQLAFjG/0
IM+/BhSPt/fnBkAwscl7jwbPv8TnCUpM6QZACBzZPvb/zr+Cu4TcoOoGQOCG
6AFd+c6//2J6AUrtBkCoXAeIKuzOv7429ZOe7gZAiMcWS5Hlzr98CnAm8+8G
QGAyJg743s6/Ot7quEfxBkA4nTXRXtjOv/ixZUuc8gZAKAhFlMXRzr+yK31s

      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{0.9757928302497684, -1.2039728043259361`}, {
      0.993257224847274, -0.8859784209659376}, {
      1.0795080424470862`, -1.956011502714073}, {
      1.1958514310696857`, -0.41049027603491517`}, {
      1.2147502771612544`, -1.4978661367769954`}, {
      1.2340437084306441`, -1.4067053583800182`}, {
      1.5583742927219337`, -0.8047189562170503}, {
      1.71641306386573, -0.06391668575494241}, {1.7847638904589966`, 
      0.009901313648089891}, {2.0184536429488324`, -0.1928312404059923}, {
      2.3304100629195768`, -0.015229603742354263`}, {
      2.418312060835341, -0.5697171415941824}, {2.5175329108483986`, 
      0.13118213223374559`}, {
      2.8684622092658887`, -0.1928312404059923}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.7865258923481564, -2.164730866208855},
  DisplayFunction->Identity,
  PlotRange->{{0.7865258923481564, 3.057729147167501}, {-2.164730866208855, 
   0.33990149572852746`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[{{0.9757928302497684, -0.005817427013262488}, {
         0.993257224847274, 0.29907866039860687`}, {
         1.0795080424470862`, -0.8356425345493876}, {1.1958514310696857`, 
         0.6226211506628205}, {1.2147502771612544`, -0.4789288446479363}, {
         1.2340437084306441`, -0.40223813970300126`}, {
         1.5583742927219337`, -0.04349967575850067}, {1.71641306386573, 
         0.5787735163457599}, {1.7847638904589966`, 0.6013283958038425}, {
         2.0184536429488324`, 0.2233285273823834}, {2.3304100629195768`, 
         0.1669628490679631}, {2.418312060835341, -0.45345118722068833`}, {
         2.5175329108483986`, 0.17303244909744658`}, {
         2.8684622092658887`, -0.4141778973554088}}]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {1., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452005670515625*^9, 3.45200765153125*^9, 
  3.452255577703125*^9, 3.5145561163295*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.93`"}], ",", "0.8`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.75`", ",", "0.44`"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "2.7498432797839527`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "12"}]}], "}"}]], "Output",
 CellChangeTimes->{3.45200567053125*^9, 3.452007651546875*^9, 
  3.452255577703125*^9, 3.514556116345125*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "From Tukey",
 "\[CloseCurlyQuote]",
 "s ladder of powers, we can reasonably transform with ",
 StyleBox["Log[CP]", "MR"],
 "or ",
 StyleBox["Sqrt[CP]", "MR"],
 ". We form a data set in which we do the logarithmic transformation."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"transfGanglionData", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"Log", "[", 
         RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "]"}]}], "}"}], "&"}], ")"}], "/@", "GanglionData"}]}], 
  ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["We fit to a line.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"newresult", "=", 
  RowBox[{"LinearFit", "[", 
   RowBox[{"transfGanglionData", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
    RowBox[{"ReturnResiduals", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVznlYzHkAx/Fpan6/SG2No4hsG8PkjpSk70cYnVs72tCY6teKLaE1TQdR
u7qo7T6kMrpYEZVUy0M62BZbj4jWkuSoh0w1ujRj2t0/3s/r37ep30GhP5vF
Yrn+1/9ed1qUtHo1D9Yb9jSUGcrJM/FwSO5WHrodZctS5srJ5+AG8aSIhwTP
zlyJqZxY54hW3I/h4elBp0O2S+Sk5nVKu98THkKLlpu12slJVeS4UXrEIlyj
x2KG/OWk7PKfpYP1i2HRHu9gXS0nedyg+nKXJVi290LbHfcBEqgSFSgDVsI+
qPWEsXCQ/MbU7b2htgB3qqg3c3CQ+Hx8YxwbZ4mXhWlSReIQ2aQ9M2TtFmuI
xWdNjqxREIcsZSe7wwYs9cbjzQ8VJKLy7auavA0QNt5gr4v8RLgTboHXzYHi
6JdVaWbDJMxD+z0veCOMFmSbXKwfJpLQxvX0Q3vYfVhQOvDjCIl6+HS6dM5m
xOcIeoepUdJCOrr3iregdQPXq6twlJyXPo5qvSHAXbqmV+E4RrLfLC9tZDug
p6Z/Zcu7MTLXODHf3N8RFSeUmS2p46Rrd1uCYYMTDntW88utPpPK3gPKNI4L
ArRZh4WPPpM5FvqI9neFdpfZ228iJ0jGtWk6qvJv8eDUM53q2UoijOY8HtF2
h31YgGtws5KEXxmfW1HrjqtuRfX6QSrCOzKbX+n1HRx1D3z8SfsLkZmvNwnS
ESJVbrBWXfmFFIaefLK/QghltYONs7uabHzgOsVCuA27pfyDkR/U5BKHu7BC
wwPHdvbc6syYJLJ/NLWkpR7wNjB8e9iIBXHW6P1Pnt/jMc0fP7Ofhes7xHqW
HE84K1PMLBtYkNUNTb953hPbmNuXlnylATdVHHty+3as+XtXU+0PGoh/7lgd
r9qOc02NViVVGvC+G93dXrADRhePNrNZbLAy60aeuuyEX0lJ1+g2NszV81rN
BnfCTj/L07mIjfkuMSn8Qi8ofh0SWY6xkb/WaEaoQATrY4b1UQJN1Jl/PT22
T4Rj+9JtbDM1IWPzla6ndiEvMGJTcp8m9MJ8zoltxXB+zi+DlRYc2rJtFsnF
eOQjOJOQpAXTVfaOV/O94dVdW2bfrYVfVhgbxxEfhDxSzBAv5+CywUgHd9AH
/p2503SPc7DKQc2XOPmiz22q37x2DkTTbHl2eb4Iam5rk82nEGg/Meudwhd3
nTTu10oo3BS4BVRuZnB1k8psZSOF/AcZxSYCBhZ3jsQlN1GIFHa+SNzKoEqg
7OtvpmDjzQj3ODG44jhRfuEPCjVSyXpjdwYX3catzP6iUFGSoxsrYlAiGnae
1UmhiN1dueMQgwxJv0T1kcLPCQv670gYcEf2PfEaoOCrF8BbLWWQFvrB+vdB
CvPnKE7rhjNIjXj/Rfrpv59VWjGNRxkkRfXFD4xTyPJd7Ln0BIOYxDd5PZo0
Qt4FpeaeZKCpu1sNDg2PoMp7VBKD48mvfWUUDW64DXmVzCA6rWfhrik0klNc
FmdnMojM6b7SoUdj/8w0P81sBkojX+4afRoueR35wTkMIk6/DEk3oKFz3tvA
+TSD8IKudW4zaLxfWuxcl8dgzMQ7v3wmjXtVvbELCxiEnX2h1jGkccF66e30
MwxGTcVMoBGNhFvBE5MyBiHFz5taZtP4Fy+VKIE=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVzms0lHkAx/ExjEduiYpMubQal6iwrKX2/+tCiGiaxmUM8yikdQ2lLZta
JJSoqNCsraHddRtZOZxW6bKJIyWlVq3KxsHIJQqDbV98z+ft1zg4mhvCZDAY
nl/633p30yxbWw4WXy/mGHYNkZfCj/EXt3LQYPjOzuHVEJmKuS2cF3CwO8vE
ecfbIeKQL1jbksKBNKR0909DQ6T2XfaT4GccbNcr/7mPISPVRz7r5R4yxcmk
Ov0qcxn5raJZMtJohvmtjzQ3HpaRAu2IxnKP1Rjslk8GGwyTfXJB0Uz4Otg2
FPvpJX8g1+i6sIY5G7yOsMpfEzJCgmS97NQ0O7j7jzXqUKNks8qSeHtnB3ww
7pZKa0eJ6/mZLmanI2oWtAfk+4+RQ9J/39QWbEBVS3+7nfo40Z722ldvAXQO
hivm14+TgzyVAU7MRrAtJ4aJ8COJO9DkRD3ehAsukivFGhPk6OPnOgn6W2B3
LGjRtuoJ8oB09oQJnTGz7PiGGzsnSWnC06NtDS6Yymq26WZ+Inm9ayRNTFfo
GrHfuJZ8IsvZmYUWIW6IOpXjG+Xzmbze8yhd97Y7Bn1jTvNZU0TaFzWTw/JA
xha/pLTSKaJvo4XkEE/QqmF20T7T5Owf6mry8u3wHfmxRDwzTbjJrKcTKt5I
r2roSS+fIYmVn5dX3fDG6zbRi68D5IRzeJm51H8H+BpamWbzciK2cDKIUOOC
xelldVbOkuIDGc8iq7joDGz6tpk3Rza2ei6w4e5E24SKZfLkHCljaa+qUuBh
LjS+74Nknoj/VlRKkPBgKv9Y3mHCgPD8ZMs4fxcGrJtaM5MYqPcVatqx+Lib
d8dd8pQBcd2ozs1SPsrU3CVvVynAS57GnPfxgVQWvEeepIAT3W41J+Q+uPcP
g+HYroDA+8k9T4p8MczomO4yYoJxrm7iuYcfbLO/8eclMmExt6LtqxE/pFsZ
5403M2HokZJtXuyPKYci++iViii011t8wEWAH3iXr2smKKLOwkgntV8ALXFH
9sL7ihAzzWc8LwTgFr+gfWiFEjQPBpUI1wtx3KBfJotWguujPEfTYSFEO/+K
bnmgBGPrTW7XCwOx48ZLb1UjFo6vZbPTSBB4q+M0I2NZqFg00ak9EoRY9cvr
yppZsHadM49zF0E867l24XJlCNTXc74rEOHdCptTHRHK2Ldpeun7MRHw+zWv
+LvKuOniFS7dQqPC9eqww1IKha1nrxi40LgTOataokvhCLfrVeZWGi9y+aY6
yyg4BtLcUHcazFcqIhmbQm1CnBPbm8au2MjHxcYUqq7ma6QKaMxetK9RtaLw
C7NH6rufhtvgg0PdmykcSzcZuhdHQ6i1Ms/NmYJIM5xjm0Bjv93h6loXCob6
Y5c0EmkUHbUaPOP25cdaKaUpicaITm6AsxeF8yIzvuVJGvnrBaTCn0L8+4gz
FzNolNE1AnYABV6E9KFyFo3baRqJ6UIK2omO5M1pGgPtjVXBIgqnsz3M8s7R
2BBislI3lELkkpxgxTwa3Iyk71LCKHgUdBbG5NMIrXzmP7qXglpp4KJtl2jk
TKWfbfmewoDllW11BTQkBm8rHSIpPKzuS11VRKNhs1OrJIrCrw6Wt3Iv02jf
e65fO4ZC+p8x0/NiGr2nZErJsRT+Az3RIgU=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVkn081HcAx89xv/FSFkKLHmgOlyUUTfT9UOThRDcP6Rx+isYo5SFNWyrq
Fi8SpzxHdKvXFEfnYhEvPWE1XulBa9NILeok7LrzsPbH+/X+9/3H2zRyHy+K
yWAwfD/xv5u9LbLt7dkIvcMJdQiWkwHBZFLRVjZYSXzzEb6cfExoF8zz2ahd
mf1OFCEnG87ybboz2Jg99DZ9KkZOpEO5fZGP2Ci3rqtpPCwnksOKJWcOWeBF
3nq5XZWcXL5yr2a8zRJRoThm81ZOSvTi2mq5q9Gk4AQUuI6T2Bl+mSpmLUaV
3SOc4XHyMy3b0zJnBw+x0FGV9p6Evx02zjyxHkn/rF3du2iCbNY0SHJw34Du
c7uztkgmiKdI9YTZ7wTuRMOl954fyKH6ly+kJS6YlOWscx77QPSUfrHNHGC/
QWBkdvYkORig+Yad4AoDE8dthmZTJDGlY+NnvW4Yzq2+6NI5RY70PtZPXroF
T2u/ulHOnyZ3Sf/gHoE7KumqFNb4NBEnPzxyv8UD+ceqSrXy/iWFw2tqOpie
qPVtTd9qoSAmxlmlnCgvTGRG9Zp1Kcifux8Ijdq9oRWg6FSP/UjqX+1V5bG4
8Oy5mLJ8/iNZarcI6VG+uFo/WPDovJLkX1ugPVO7DXB12H/XUUV46ayHU5r+
mHExag5+piKpVxUmdU3+EP4+VDOWNkPYaV9Y1e/cDueFPX4turOkgrNxeZw2
D8ZNJNqicZZUppx6FF/Hg6n2A6fffOaIa4+vlh3vGygnvSSpg3PkF5aeeZ1a
AOZ8/Avbj86TimfqGsk1ARCxvzYxW8CAQDTd/SEoEK3Pc1dJBAw07xDorGcF
oS88dKazloEK2Xv9G+IgKKUOjUkKBvxmTjDng4PR1BlkluilhpN/eDWenAnG
SXHGPh2RGsJupw/2le2AW6BljvVfamAUyKYec0OQd113V5ENE5y5ZfdXjYdg
ckLT6ML3TKzgZuRaVe7E6N/uR1XdTJQ6LFmc4sHHtPh017iROmSclfqZr/kY
c9z+8ttIdVQwrVS+50KR8mOw1KZBHToHwy8KnAVYXPxddP6cOjwfFDpZvBPA
I+5Wj7u/Bkxt3bwaSsOwS0ukkXZe49OkxsYnSDgK0g4Y+45q4IruVL/eeDhC
qkWv451ZsPWcs0r0joBt1e2C1UIW+Auc2ZtKIjAVG68X18dCrJvScGQiAtw3
IR4qMwo3PPxi6rfQkG0KCLHYS6G0J//Ccg8alSZKtYP7KBzmPXmetZVGlrLi
8u0ECk5hNC/am0aodFQVlUhBmpy40difhtqa4+XVqRTqqs8uzOTT8FkmGTI9
TqGKOVi/4wCN56rP95qco3BU+OXYrUQad55eM4wrohChE8O2T6ZR18Rvaymm
sGLpRPHCVBrHE8WL+GWfemw1Mjp+oGE5uqmhqIqCKMIyyPonGvsH4hWGtRSS
RuJOF52isVOmXxl9hUJAXH0XlU3DvfC6l/QqBb1UJ/Iih4Yhj1USKKGQk8u1
LCyg0XKv1KWgiUK8QV6keiGNarHbyJCMArekvzThLI3szNc59s0UtMVhuj7F
NMJd1w32/UrhjfUFH1kJDa8VA0KzVgpdkleZ5mU07GeP2B5oo3Bpg/XNM+U0
TJ6ZD7TfpCBsTVDOV9DQuN59TLeDwn8qYiw7
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{11.1, 0.9400072584914712}, {13.6, 1.0543120297715298`}, {22.5,
       1.085189268335969}, {31.4, 1.3217558399823195`}, {32.7, 
      1.2296405510745139`}, {34., 1.252762968495368}, {53.8, 
      1.5151272329628591`}, {63., 1.5432981099295553`}, {67., 
      1.9430489167742813`}, {81., 1.9242486522741338`}, {101., 
      2.4203681286504293`}, {107., 2.3896797998449792`}, {114., 
      2.4069451083182885`}, {141., 2.906354462402774}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-1.8900000000000006`, 0.7433725381003409},
  DisplayFunction->Identity,
  PlotRange->{{-1.8900000000000006`, 153.99}, {0.7433725381003409, 
   3.1029891827939045`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[{{11.1, 0.}, {13.6, 0.076}, {22.5, -0.026}, {31.4, 0.077}, {
          32.7, -0.035}, {34., -0.031}, {53.8, -0.065}, {63., -0.175}, {67., 
          0.165}, {81., -0.064}, {101., 0.132}, {107., 0.012}, {
          114., -0.076}, {141., 0.019}}], {{
           LineBox[{{11.1, 0.093}, {11.1, -0.093}}], 
           LineBox[{
             Offset[{1.5, 0}, {11.1, 0.093}], 
             Offset[{-1.5, 0}, {11.1, 0.093}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11.1, -0.093}], 
             Offset[{-1.5, 0}, {11.1, -0.093}]}]}, {
           LineBox[{{13.6, 0.16899999999999998`}, {13.6, -0.017}}], 
           LineBox[{
             Offset[{1.5, 0}, {13.6, 0.16899999999999998`}], 
             Offset[{-1.5, 0}, {13.6, 0.16899999999999998`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {13.6, -0.017}], 
             Offset[{-1.5, 0}, {13.6, -0.017}]}]}, {
           LineBox[{{22.5, 0.067}, {22.5, -0.119}}], 
           LineBox[{
             Offset[{1.5, 0}, {22.5, 0.067}], 
             Offset[{-1.5, 0}, {22.5, 0.067}]}], 
           LineBox[{
             Offset[{1.5, 0}, {22.5, -0.119}], 
             Offset[{-1.5, 0}, {22.5, -0.119}]}]}, {
           LineBox[{{31.4, 0.16999999999999998`}, {31.4, -0.016}}], 
           LineBox[{
             Offset[{1.5, 0}, {31.4, 0.16999999999999998`}], 
             Offset[{-1.5, 0}, {31.4, 0.16999999999999998`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {31.4, -0.016}], 
             Offset[{-1.5, 0}, {31.4, -0.016}]}]}, {
           LineBox[{{32.7, 0.057999999999999996`}, {32.7, -0.128}}], 
           LineBox[{
             Offset[{1.5, 0}, {32.7, 0.057999999999999996`}], 
             Offset[{-1.5, 0}, {32.7, 0.057999999999999996`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {32.7, -0.128}], 
             Offset[{-1.5, 0}, {32.7, -0.128}]}]}, {
           LineBox[{{34., 0.062}, {34., -0.124}}], 
           LineBox[{
             Offset[{1.5, 0}, {34., 0.062}], 
             Offset[{-1.5, 0}, {34., 0.062}]}], 
           LineBox[{
             Offset[{1.5, 0}, {34., -0.124}], 
             Offset[{-1.5, 0}, {34., -0.124}]}]}, {
           LineBox[{{53.8, 0.027999999999999997`}, {53.8, -0.158}}], 
           LineBox[{
             Offset[{1.5, 0}, {53.8, 0.027999999999999997`}], 
             Offset[{-1.5, 0}, {53.8, 0.027999999999999997`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {53.8, -0.158}], 
             Offset[{-1.5, 0}, {53.8, -0.158}]}]}, {
           LineBox[{{63., -0.08199999999999999}, {63., -0.268}}], 
           LineBox[{
             Offset[{1.5, 0}, {63., -0.08199999999999999}], 
             Offset[{-1.5, 0}, {63., -0.08199999999999999}]}], 
           LineBox[{
             Offset[{1.5, 0}, {63., -0.268}], 
             Offset[{-1.5, 0}, {63., -0.268}]}]}, {
           LineBox[{{67., 0.258}, {67., 0.07200000000000001}}], 
           LineBox[{
             Offset[{1.5, 0}, {67., 0.258}], 
             Offset[{-1.5, 0}, {67., 0.258}]}], 
           LineBox[{
             Offset[{1.5, 0}, {67., 0.07200000000000001}], 
             Offset[{-1.5, 0}, {67., 0.07200000000000001}]}]}, {
           LineBox[{{81., 0.028999999999999998`}, {81., -0.157}}], 
           LineBox[{
             Offset[{1.5, 0}, {81., 0.028999999999999998`}], 
             Offset[{-1.5, 0}, {81., 0.028999999999999998`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {81., -0.157}], 
             Offset[{-1.5, 0}, {81., -0.157}]}]}, {
           LineBox[{{101., 0.225}, {101., 0.03900000000000001}}], 
           LineBox[{
             Offset[{1.5, 0}, {101., 0.225}], 
             Offset[{-1.5, 0}, {101., 0.225}]}], 
           LineBox[{
             Offset[{1.5, 0}, {101., 0.03900000000000001}], 
             Offset[{-1.5, 0}, {101., 0.03900000000000001}]}]}, {
           LineBox[{{107., 0.105}, {107., -0.081}}], 
           LineBox[{
             Offset[{1.5, 0}, {107., 0.105}], 
             Offset[{-1.5, 0}, {107., 0.105}]}], 
           LineBox[{
             Offset[{1.5, 0}, {107., -0.081}], 
             Offset[{-1.5, 0}, {107., -0.081}]}]}, {
           LineBox[{{114., 0.017}, {114., -0.16899999999999998`}}], 
           LineBox[{
             Offset[{1.5, 0}, {114., 0.017}], 
             Offset[{-1.5, 0}, {114., 0.017}]}], 
           LineBox[{
             Offset[{1.5, 0}, {114., -0.16899999999999998`}], 
             Offset[{-1.5, 0}, {114., -0.16899999999999998`}]}]}, {
           LineBox[{{141., 0.112}, {141., -0.074}}], 
           LineBox[{
             Offset[{1.5, 0}, {141., 0.112}], 
             Offset[{-1.5, 0}, {141., 0.112}]}], 
           LineBox[{
             Offset[{1.5, 0}, {141., -0.074}], 
             Offset[{-1.5, 0}, {141., -0.074}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {10., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.4520056778125*^9, 3.452007651640625*^9, 
  3.4522555874375*^9, 3.514556123517*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.774`", ",", "0.046`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.01499`", ",", "0.00063`"}], "}"}]}], ",", 
   RowBox[{"PseudoErrorY", "\[Rule]", "0.09332858344258035`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "0.10452269384878438`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "12"}], ",", 
   RowBox[{"Residuals", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"11.1`", ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13.6`", ",", 
        RowBox[{"{", 
         RowBox[{"0.076`", ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"22.5`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.026`"}], ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"31.4`", ",", 
        RowBox[{"{", 
         RowBox[{"0.077`", ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"32.7`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.035`"}], ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"34.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.031`"}], ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"53.8`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.065`"}], ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"63.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.175`"}], ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"67.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.165`", ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"81.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.064`"}], ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"101.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.132`", ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"107.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.012`", ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"114.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.076`"}], ",", "0.093`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"141.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.019`", ",", "0.093`"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.45200567784375*^9, 3.45200765165625*^9, 
  3.452255587453125*^9, 3.51455612354825*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
We form a level-spread data set analogous to the one before, again ignoring \
the errors in the residuals.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newresData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.77", "+", 
          RowBox[{"0.015", " ", "#1"}]}], "&"}], ")"}], "/@", 
       RowBox[{"First", "/@", "GanglionData"}]}], ",", 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{"First", "/@", 
         RowBox[{"Last", "/@", 
          RowBox[{"(", 
           RowBox[{"Residuals", "/.", "newresult"}], ")"}]}]}], "]"}]]}], 
     "}"}], "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
Examination shows that we have effectively eliminated the monotone behavior \
of the residuals.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "newresData", "]"}]], "Input",
 CellChangeTimes->{3.452005688859375*^9},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{0.9365, 0.}, {0.974, 0.27568097504180444`}, {1.1075, 
     0.161245154965971}, {1.241, 0.27748873851023215`}, {1.2605, 
     0.18708286933869708`}, {1.28, 0.17606816861659008`}, {1.577, 
     0.25495097567963926`}, {1.7149999999999999`, 0.4183300132670378}, {1.775,
      0.406201920231798}, {1.9849999999999999`, 0.25298221281347033`}, {2.285,
      0.363318042491699}, {2.375, 0.10954451150103323`}, {2.48, 
     0.27568097504180444`}, {2.885, 0.13784048752090222`}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.9, 0},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{{0.9365, 2.885}, {0., 0.4183300132670378}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452005689359375*^9, 3.4520076516875*^9, 
  3.45225559946875*^9, 3.51455613567325*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "Finally, in the fit of the original ganglion data to a parabola in Chapter \
4, the data were reweighted using a statistical assumption, which is the \
default for ",
 StyleBox["LinearFit", "MR"],
 " when there are no errors in the data. Although the result was fairly \
reasonable, we can now see that the fact that the residuals of that fit \
increase with the value of the dependent variable means that the reweight \
procedure is not entirely reasonable. For the transformed ganglion data ",
 StyleBox["transfGanglionData", "MR"],
 ", however, it is reasonable."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "We have been pushing this ganglion data pretty hard here and in previous \
chapters. Some problems inherent in many experiments, especially in the life \
sciences, are that variations in samples, inherent noise in the measurements, \
and limited sample sizes are common. Here we see problems in the fact that, \
for example, there is a triple of data points on the right that have almost \
the same value of the ",
 StyleBox["CP", "MO"],
 " ratio for measurably different areas. Whether this triple is due to \
differences in the individual fetuses or difficulty in measurement is not \
certain, but it is not grounds for criticizing the experimenters. The \
existence of such features, however, means that any analysis of this data \
should be viewed skeptically."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "That having been said, in the absence of a theoretical model for the way \
the ",
 StyleBox["CP", "MO"],
 " ratios could be related to the retinal area, we can go a bit further with \
the result of this last fit to the data. We have used the data itself to make \
a model of the following form."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["Log[ CP ] = a[0] + a[1]*area", "DisplayFormula",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "Such a model can arise when the change in the ",
 StyleBox["CP", "MO"],
 " ratio, call it ",
 StyleBox["Delta(CP)", "MO"],
 " is proportional to the value of ",
 StyleBox["CP", "MO"],
 " itself times the change in the area of the retina, ",
 StyleBox["Delta(area)", "MO"],
 ". Thus, the conclusion is that by transforming the data we have found a \
suggestion of a model for the growth of the retina."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell["8.2.1.1 Level and Spread for Bivariate Data", "Subsubsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell["\<\
When we examined the level and spread for the city population data, the level \
was chosen to be the median and the spread was chosen to be the quartile \
spread. These choices for data with only one coordinate, a \
\[OpenCurlyDoubleQuote]univariate\[CloseCurlyDoubleQuote] data set, are \
perfectly reasonable and natural.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell["\<\
When the data has two coordinates (\[OpenCurlyDoubleQuote]bivariate\
\[CloseCurlyDoubleQuote]) like the ganglion data, we made two decisions that \
may not be quite so obvious. First, we chose the level to be the fitted value \
of the dependent variable. Second, we chose the spread to be the square root \
of the absolute value of the residuals. In this section we discuss these \
decisions.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell["\<\
Regarding the level, imagine that the univariate city data were not sorted by \
the value of the medians. \
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomorder", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "8", ",", "2", ",", "16", ",", "3", ",", "11", ",", "14", ",", 
     "5", ",", "9", ",", "15", ",", "7", ",", "4", ",", "13", ",", "6", ",", 
     "10", ",", "12"}], "}"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  RowBox[{"randomData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"PopulationData", "\[LeftDoubleBracket]", 
      RowBox[{
      "randomorder", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
      "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "16"}], "}"}]}], "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BoxPlot", "[", 
  RowBox[{"randomData", ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "2", ",", "4", ",", "6", ",", "8", ",", "10", ",", "12", ",", "14", 
        ",", "16"}], "}"}], ",", "Automatic"}], "}"}]}], ",", " ", 
   RowBox[{"AspectRatio", " ", "\[Rule]", " ", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4520057118125*^9, 3.452005721140625*^9}},
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 GraphicsBox[{{PointBox[{1, 7.87}], PointBox[{2, 79.86}], {}, 
    PointBox[{4, 69.}], {PointBox[{5, 11.91}], PointBox[{5, 6.72}]}, {
     PointBox[{6, 49.81}], PointBox[{6, 38.57}]}, PointBox[{7, 77.81}], 
    PointBox[{8, 31.18}], PointBox[{9, 25.39}], 
    PointBox[{10, 45.37}], {PointBox[{11, 25.99}], PointBox[{11, 16.96}]}, 
    PointBox[{12, 28.11}], PointBox[{13, 110.21}], PointBox[{14, 29.66}], 
    PointBox[{15, 21.92}], {PointBox[{16, 63.34}], PointBox[{16, 36.36}]}}, {{
     LineBox[{{1, 0.78}, {1, 0.69}, {0.75, 0.69}, {1.25, 0.69}}], 
     LineBox[{{0.85, 0.88}, {1.15, 0.88}}], 
     LineBox[{{1, 2.49}, {1, 4.22}, {0.75, 4.22}, {1.25, 4.22}}], 
     LineBox[{{0.75, 0.78}, {1.25, 0.78}, {1.15, 0.88}, {1.25, 2.49}, {0.75, 
      2.49}, {0.85, 0.88}, {0.75, 0.78}}]}, {
     LineBox[{{2, 3.3}, {2, 2.99}, {1.75, 2.99}, {2.25, 2.99}}], 
     LineBox[{{1.85, 4.984999999999999}, {2.15, 4.984999999999999}}], 
     LineBox[{{2, 7.22}, {2, 11.02}, {1.75, 11.02}, {2.25, 11.02}}], 
     LineBox[{{1.75, 3.3}, {2.25, 3.3}, {2.15, 4.984999999999999}, {2.25, 
      7.22}, {1.75, 7.22}, {1.85, 4.984999999999999}, {1.75, 3.3}}]}, {
     LineBox[{{3, 1.42}, {3, 1.29}, {2.75, 1.29}, {3.25, 1.29}}], 
     LineBox[{{2.85, 1.7349999999999999`}, {3.15, 1.7349999999999999`}}], 
     LineBox[{{3, 6.02}, {3, 8.68}, {2.75, 8.68}, {3.25, 8.68}}], 
     LineBox[{{2.75, 1.42}, {3.25, 1.42}, {3.15, 1.7349999999999999`}, {3.25, 
      6.02}, {2.75, 6.02}, {2.85, 1.7349999999999999`}, {2.75, 1.42}}]}, {
     LineBox[{{4, 16.5}, {4, 11.13}, {3.75, 11.13}, {4.25, 11.13}}], 
     LineBox[{{3.85, 22.785}, {4.15, 22.785}}], 
     LineBox[{{4, 36.92}, {4, 40.1}, {3.75, 40.1}, {4.25, 40.1}}], 
     LineBox[{{3.75, 16.5}, {4.25, 16.5}, {4.15, 22.785}, {4.25, 36.92}, {
      3.75, 36.92}, {3.85, 22.785}, {3.75, 16.5}}]}, {
     LineBox[{{5, 2.49}, {5, 1.69}, {4.75, 1.69}, {5.25, 1.69}}], 
     LineBox[{{4.85, 2.705}, {5.15, 2.705}}], 
     LineBox[{{5, 3.84}, {5, 3.84}, {4.75, 3.84}, {5.25, 3.84}}], 
     LineBox[{{4.75, 2.49}, {5.25, 2.49}, {5.15, 2.705}, {5.25, 3.84}, {4.75, 
      3.84}, {4.85, 2.705}, {4.75, 2.49}}]}, {
     LineBox[{{6, 5.02}, {6, 2.78}, {5.75, 2.78}, {6.25, 2.78}}], 
     LineBox[{{5.85, 8.055}, {6.15, 8.055}}], 
     LineBox[{{6, 9.68}, {6, 9.68}, {5.75, 9.68}, {6.25, 9.68}}], 
     LineBox[{{5.75, 5.02}, {6.25, 5.02}, {6.15, 8.055}, {6.25, 9.68}, {5.75, 
      9.68}, {5.85, 8.055}, {5.75, 5.02}}]}, {
     LineBox[{{7, 8.76}, {7, 7.5}, {6.75, 7.5}, {7.25, 7.5}}], 
     LineBox[{{6.85, 13.045}, {7.15, 13.045}}], 
     LineBox[{{7, 24.79}, {7, 35.5}, {6.75, 35.5}, {7.25, 35.5}}], 
     LineBox[{{6.75, 8.76}, {7.25, 8.76}, {7.15, 13.045}, {7.25, 24.79}, {
      6.75, 24.79}, {6.85, 13.045}, {6.75, 8.76}}]}, {
     LineBox[{{8, 2.17}, {8, 1.86}, {7.75, 1.86}, {8.25, 1.86}}], 
     LineBox[{{7.85, 3.185}, {8.15, 3.185}}], 
     LineBox[{{8, 8.06}, {8, 10.12}, {7.75, 10.12}, {8.25, 10.12}}], 
     LineBox[{{7.75, 2.17}, {8.25, 2.17}, {8.15, 3.185}, {8.25, 8.06}, {7.75, 
      8.06}, {7.85, 3.185}, {7.75, 2.17}}]}, {
     LineBox[{{9, 4.44}, {9, 3.36}, {8.75, 3.36}, {9.25, 3.36}}], 
     LineBox[{{8.85, 6.87}, {9.15, 6.87}}], 
     LineBox[{{9, 11.82}, {9, 15.8}, {8.75, 15.8}, {9.25, 15.8}}], 
     LineBox[{{8.75, 4.44}, {9.25, 4.44}, {9.15, 6.87}, {9.25, 11.82}, {8.75, 
      11.82}, {8.85, 6.87}, {8.75, 4.44}}]}, {
     LineBox[{{10, 9.47}, {10, 7.21}, {9.75, 7.21}, {10.25, 7.21}}], 
     LineBox[{{9.85, 16.68}, {10.15, 16.68}}], 
     LineBox[{{10, 22.98}, {10, 30.03}, {9.75, 30.03}, {10.25, 30.03}}], 
     LineBox[{{9.75, 9.47}, {10.25, 9.47}, {10.15, 16.68}, {10.25, 22.98}, {
      9.75, 22.98}, {9.85, 16.68}, {9.75, 9.47}}]}, {
     LineBox[{{11, 2.64}, {11, 1.69}, {10.75, 1.69}, {11.25, 1.69}}], 
     LineBox[{{10.85, 3.455}, {11.15, 3.455}}], 
     LineBox[{{11, 5.01}, {11, 5.01}, {10.75, 5.01}, {11.25, 5.01}}], 
     LineBox[{{10.75, 2.64}, {11.25, 2.64}, {11.15, 3.455}, {11.25, 5.01}, {
      10.75, 5.01}, {10.85, 3.455}, {10.75, 2.64}}]}, {
     LineBox[{{12, 2.33}, {12, 1.99}, {11.75, 1.99}, {12.25, 1.99}}], 
     LineBox[{{11.85, 2.74}, {12.15, 2.74}}], 
     LineBox[{{12, 5.35}, {12, 7.83}, {11.75, 7.83}, {12.25, 7.83}}], 
     LineBox[{{11.75, 2.33}, {12.25, 2.33}, {12.15, 2.74}, {12.25, 5.35}, {
      11.75, 5.35}, {11.85, 2.74}, {11.75, 2.33}}]}, {
     LineBox[{{13, 7.89}, {13, 7.04}, {12.75, 7.04}, {13.25, 7.04}}], 
     LineBox[{{12.85, 12.66}, {13.15, 12.66}}], 
     LineBox[{{13, 18.88}, {13, 32.14}, {12.75, 32.14}, {13.25, 32.14}}], 
     LineBox[{{12.75, 7.89}, {13.25, 7.89}, {13.15, 12.66}, {13.25, 18.88}, {
      12.75, 18.88}, {12.85, 12.66}, {12.75, 7.89}}]}, {
     LineBox[{{14, 2.69}, {14, 2.44}, {13.75, 2.44}, {14.25, 2.44}}], 
     LineBox[{{13.85, 3.275}, {14.15, 3.275}}], 
     LineBox[{{14, 6.35}, {14, 7.61}, {13.75, 7.61}, {14.25, 7.61}}], 
     LineBox[{{13.75, 2.69}, {14.25, 2.69}, {14.15, 3.275}, {14.25, 6.35}, {
      13.75, 6.35}, {13.85, 3.275}, {13.75, 2.69}}]}, {
     LineBox[{{15, 6.53}, {15, 5.66}, {14.75, 5.66}, {15.25, 5.66}}], 
     LineBox[{{14.85, 7.15}, {15.15, 7.15}}], 
     LineBox[{{15, 11.42}, {15, 18.56}, {14.75, 18.56}, {15.25, 18.56}}], 
     LineBox[{{14.75, 6.53}, {15.25, 6.53}, {15.15, 7.15}, {15.25, 11.42}, {
      14.75, 11.42}, {14.85, 7.15}, {14.75, 6.53}}]}, {
     LineBox[{{16, 10.27}, {16, 9.17}, {15.75, 9.17}, {16.25, 9.17}}], 
     LineBox[{{15.85, 10.870000000000001`}, {16.15, 10.870000000000001`}}], 
     LineBox[{{16, 13.32}, {16, 13.32}, {15.75, 13.32}, {16.25, 13.32}}], 
     LineBox[{{15.75, 10.27}, {16.25, 10.27}, {16.15, 10.870000000000001`}, {
      16.25, 13.32}, {15.75, 13.32}, {15.85, 10.870000000000001`}, {15.75, 
      10.27}}]}}},
  AlignmentPoint->Center,
  AspectRatio->1,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->True,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->{{{2, 
      FormBox["2", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}, {12, 
      FormBox["12", TraditionalForm]}, {14, 
      FormBox["14", TraditionalForm]}, {16, 
      FormBox["16", TraditionalForm]}}, Automatic},
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.452005712265625*^9, 3.45200572171875*^9}, 
   3.45200765175*^9, 3.452255641078125*^9, 3.514556146438875*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell["\<\
Further, imagine that we characterize each country\[CloseCurlyQuote]s data by \
its position in the list. Clearly, the \[OpenCurlyDoubleQuote]level\
\[CloseCurlyDoubleQuote] of each country is not that position. Similarly, for \
a bivariate data set, it is not the value of the independent variable that \
sets the level, but the value of the dependent variable.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[TextData[{
 "Considering the \[OpenCurlyDoubleQuote]level",
 "\[CloseCurlyDoubleQuote]",
 " for a data set such as the ",
 StyleBox["Cobalt60Data", "MR"],
 " we have examined in previous chapters may make this realization even \
clearer."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Cobalt60", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"Cobalt60Data\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> Left, \
ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.452007651765625*^9, 3.452255652453125*^9, 
  3.514556152017*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Cobalt60Data"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 StyleBox["\<\"Cobalt60Data is part of a cobalt-60 nuclear spectrum. The\\n\t\
format is: {channel, counts}. The data was collected in the second-year\\n\t\
Lab of the Department of Physics, University of Toronto with a NaI \\n\t\
scintillator and a PC-based multichannel analyzer running PC-MCA software \\n\
\tby David Harrison (1990, unpublished).\"\>", "MSG"]], "Print", "PrintUsage",
 
 CellChangeTimes->{3.514556154470125*^9},
 CellTags->{"Info3514541754-3150195", "Level-spread", "Transforming data"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "Cobalt60Data", "]"}]], "Input",
 CellChangeTimes->{3.452005736390625*^9},
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxdliFsa3UUxi9kYmJiYmJiISNZSPPSkAIDFlKgjAEFBoxHgQHjUR57j4Us
YWJiYqJiYmKiYqKB8qiomKioqKiYqJiYqJioqKioqKiomJiYmCC88/3Evpkv
v3znfOf8713vvS8//vPhkxeTJHnphST5X5//lf/KPdfSx6Gn8CehFXHyUWgV
fy20hv9+aB1eDT2jXv0N4yb1mt+C86Ftyzu3fTrGF+R/GHqJnw3tmn9l+T3L
69v5BsZDWHkjyx9b3sSu97XxDbweegt/EXoHf6Dcv6W6H1Pikq7fNL7yZvBX
Q2etfg7+PHQeVv6C1S/C+n9Zgj8LTTFf50/DX4ZmbL9l+r8KXYE/Dc2an6Nf
/prtk4c1b93Ov0G/rm8B3gjdtP226Fd9EV/7bOOrf0fc+Tp0F1+8J86J980/
oF95h8Yl6z+iX/seU/8w9MS4zP6F0FPbtwLLr8LfhtaYp7y65Z1ZfYN95Tep
l9+ifjO0Tf73oefUb6kO/in0gnr1XzLvh9Au/nehV5bfg1XfZ58fQweWP2S+
/BH12m/MfPGEfvE1/b+E3lD/a+ituCi+o7+ovur9fafEQ9VPV+/nzYiL6p81
nhN3fgudJ1/7LYgT+Yv0Pw5dYr78lOWl2Uf1GfLFy7b/Ciw/K66Jc8x/Erpm
/Xnbd535qt+gX36BfcSbzFP9lnhRXCRfvM38p6E7+Nuhu/iq37N99pmv/gPq
d0IPuZ46X8nOf4Sv+mPm/x56wjztU4Y179T2qZAvv2r1Nfw/Qut2f87wNb/B
PupvUq/+ll3PNr7qz+36d7g+yr/g/Kq/tHldfJ3/ijz19+z69O36DqhX3tDO
O7L5Y1j5E/p1/66538q/sfPf0i++Y57+P5N/pNp3Sszvb1pc4vdv9bNifp9z
9Kt+3niBfn7/xkuwnicp8tWftvkZcU7Pl2WY37/lZ/EfSeGfQ9eoV16e+Xo+
r+Pr+bsBK69g/qbN2yJP75uimOfnNv3aZ8d4F9bzeo988T75er8c4Ov9dMj9
1PuyRJ7eZ0f0K++Yfr1vT2xemTy9v0/p/ya0Qr3yq7D8GvP1/VMnT99bZ7C+
JxrW36RffgvW902bfcTn5GleB1/7X9Cv79dL4y6s78Ur8vS91MPX920fX9+T
A3ydb2h5I+r1vTuG5U+s/hpf3/M3+O+F3uLr+/sOX/nJs/s8Bat/+tn9/WfM
n8XPhc7hr4bOm7+A/3boIr72W8JXfQpf50vjvxOaMV6GXw9dgZdDs1afg9Oh
a7Zf3njd8jbgN0IL8Fuhm/CboVvwK6FFeCV023gHzoTuwq+F7tn++3b+A+s/
tPqS5R3BD0KPzT+x85ftfKfwq6EV668a1+BUaN3mnxk3bH7T/Jbltc0/N+5Y
3oX9f1za+bp2vivL69n5+nb9B3Z/hjZ/ZP9PYzvPxO7fNfxu6I313xrf2fzk
3/s8BWdy/wGYEnwT
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1700., 0},
  PlotRange->{{1700., 1985.}, {0., 213.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.45200573690625*^9, 3.452007651984375*^9, 
  3.514556156626375*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell["\<\
Clearly, in this case the level must be the value of the dependent variable, \
not the independent one.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell["\<\
To illustrate why we should use the fitted value of the dependent variable to \
measure the level instead of the experimental data value, we will repeat a \
couple of straight-line fits we performed earlier.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Anscombe", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"AnscombeData[[i]], for i = 1,2,3,4\\\\\\\"\\\"}}, RowSpacings -> 1, \
ColumnAlignments -> Left, ColumnAlignments -> Left], Column], \
Function[BoxForm`e$, TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", \
"MSG",
 CellChangeTimes->{3.452007652*^9, 3.514556162142*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AnscombeData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 StyleBox["\<\"AnscombeData is a quartet of made-up data devised by F.J.\\n\t\
Anscombe, American Statistician 27 (Feb. 1973), pg 17.\\n\tAll four data \
sets, AnscombeData[[1]], AnscombeData[[2]],\\n\tAnscombeData[[3]], and \
AnscombeData[[4]], have almost identical\\n\taverages and fit to almost \
identical straight lines. The format\\n\tof each data set is {x, y}, where \
neither coordinate has units.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556164595125*^9},
 CellTags->{"Info3514541764-3150195", "Level-spread", "Transforming data"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ansc1", "=", 
  RowBox[{"LinearFit", "[", 
   RowBox[{
    RowBox[{
    "AnscombeData", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
    RowBox[{"ReturnResiduals", "\[Rule]", "True"}], ",", 
    RowBox[{"ResidualPlacement", "\[Rule]", "None"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtx30w1HkAx/Ht4Zw66Vd+u+2y7G/3u+za3+iiB+XkPpdOhtjSNBXpjrOH
0l55yJCLXPQoimQUpvLQ1Ugtdcel8RRtaKLIVlO0Uul6kFFsi+tm9o/3vOYt
Dv0tQDWVw+H4fel//+BrZnE4FFZY6Mw4HBrW+17NlE6jMKsh9qvjU2ho3jHm
3mYUdPHUdOk0Gr3NmVOzLCjs0K+a4m1GwyNu+yeRgEJRzbXPmRY0Rjvkfd+7
UDBG5LwXCWhEHS6qSg6jcO2m8uH3LjTWTxwJmrxFQZHcXJ4cRuNz/t/tA2fn
YI/f419jOmi8kbllB6vn4qNVgXa+KxeX3FWnuxdbYUOhi//rfC48zfu0rpY0
JPve99t8zYO0SeMj76ExN3STPR3Fg25J1ztOJRdRpwbjU3Q8BDuf6Xl0kIdL
eWv+fbNyHpyEjbRXwDzwjobMJH/OQ0ft4rg8lo+XT/Ld2rh81Csn5Ikf+eiV
JdPLd/ORErmD2VIrQN2ipVTFEz6s3Ba6K05YY2aBwO6EjwAfDL4X07bYIGG8
pGtFhQAl0Vc9tEuFCKgOLAoTWkMWfYs7e7Yt6GX9h/bvt8ZIiDP6u21huMxn
ol9b46T566NnKuywel9cy90NNkgrMix4myBCg/J3/qfrNijeVb77mIIxKcT2
EA3HKZcxKcTmlaHfZhkYk0JcTXXbER4uNmmLRdW1gWbtYpO2yK/khpcukJi0
w9YZuWk1pyUm7fDzhnq/3CnEpAh1HK58QE1MimCuXi51fUhMirDrHnVb6SHF
P5Hmz2UiBv45FqmPL0gh8zH7Qb2ewWq/Sv0Cyh6lpbqd/AMMnG/PD0+PsQdf
dXJhYzWDlLOdRuVTe2Bt5ETZOwYj0WL3Pk8HJFZThe/FYtwvzMsYuOyArco2
r5iNYugaag5U8mSICglu2nRYjOYLV0r2JsrwS1dPJ2rFsH17937jgAyW8RGD
IcNi5DueKm/3laM9p717wF6CvXUZeb7VcqDXq61kswRKm/Ult6WOOJ9xIUB1
XAJPdUvQnIOOkPylLz/QJMEZYai0bcQRayyd5w4YJHBoLMv1D1Igu2+db5kT
wXGnBkXnDQW0vBBu5E8EEcPTO7QKFlUJqS/DThCEXfnAHMxkodmYkNXUQqBO
XWf0OcbCtd5xT8ktgvh1VQ8ssllcd3y4LV1LcGgk7mhWLoubBrdV3q0EFcvG
Pp8sYNFz2jjeeofAUD/ZXXqRxXhv8rZ7XQTHOi0ymlpYeEemez3TE+Sf2x6R
rmXR3rFkUWM/QXHsHU/vVhYBbi/Exc8JrvGyDK13WAR94z2uekHwONAq4l4X
C3X5jKpXgwRyvcDzmZ5FztAR8dAQgUtVol3xcxaCwOWzOz8QfJf2aEz1gkVh
wxujZpjAX1Zw+dUgi7Js/57YEYKYbYzd0BCLmsVU5ugoQZL73jHNMAuPwrok
3RhB+qxn92NHWDSa7dxaYyDIqzh3eHSURduDjh+TjARnU6aH1xhYrEXqwuBx
gotrVSuSjCy6z7uIPSYIqiTNth4TLALn6C1FkwQ3hh3GJidZPE3INk5++f8A
YHkUWA==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVkn0wlAkAhzd12lDtssuu3WU/3teufU+R6wttvzmdGo6tnGtK6nxFV2iQ
jppLXUQI+Uh76LC4EtUuDWZI2fHVUYTT6QshpzTlNpHLdX8888zz/yMKiNgZ
bECj0Tw/879/4WiW02gMGGnvN1klMGF5ZsKIWMwAY9XMRuZZJjRvhPRthgxY
XLHSLk5m4nlLukGGCQPE5bDSl6lMKI6GzVhzGUCK8TlNNhMfumVDm9cwEBO4
1dtNzcThlMvVJ4MYGDa7PRrWzITPp1TfhTYG6qKrjBoWmeKjqrZzrJiJMrFT
a3+SKV5LnbL8wk1h2n0pa97QDFUuwfn9a82Q08Ue+/20GVzpQ+3rV7DgXauo
eEBngdBp3GUDLGQWO8cvSWTh0bq+NzQtG8axo63a5Wz4ORQNDCabQ1VYkTNx
gQ07fjPLbacFKnTfRFErzdHdsPZoHsXBTH9q88scc9xRfpLFvedAN1Eu0ZhZ
IP7gEeG+Bi7KPJ4tM0i3gJmTo4s8xxK6S80BnSwO3s15VCTs4yHw5fF76kwO
SiNrFO0b+NgkGSqb4XAhjWxjr1wpgF1lAL27gAu9vwNe9AuQv7429hbXEhfp
k+eLrlvBvarez+I3SyRcnrOfirVGDJm544yAB3VM5fFMuRDPk1i1h0t5CPPX
0OxyhdjnXK0elPOxd0vA6oy5zz0lLfq+nI+a005HQkJEyEvbxvBcJcBXdQ17
DDtF8LHblK68JoBKyw4psxeD5HtlD0it8OOy3IT6fDEcZoxNnlRa4Ydddzxz
F0nQ2FOQ9VpujSYaWzYWLkGS6nFarMYa9PBNxPq/JNAO8Ja28ISIecjoUCoI
BAY5Kvt2C+GVbXL68VUC9geKtosLhPjWUztizyChCJ3drR8UwqFjVUhiFIn+
zP1lKVwR4ot75pXPSKQ58K/t3yuCPlLkMuRqg1+679bVqUToLcxLG7thg7zx
2/E7norw6G59ktZcilf/likjBGK0XL1ZeipOik7nfP/tvmIIph70No9J0fFm
/MuIQjFUtr9WdnrIQFcLaKwnYpxqSsvzqJMhqOtK6nuhBEqeT2kHYQsP4Za9
+YESuIa3+jKTbREZ2ebYViRBET+A+ENvixqnEp3DqAQ2zeW5Xr5yOC8O9RMR
BC7Y3ZX3NMrhMe20sdefQOj0ku52OYXY3UFdOjWBoJvvhMnpFMZvHzvkPEIg
/LT3vHsmhXZx83c7XxA45l39p0kWhWsJKxQHRwmc0x89n5FLIcKjlHFxnMD1
jbMfLxZQn//sqXk3SWDuzkJ/WQUFwyk72tV/CGT2mKTpWinY8F9kcwxJqErC
QhPbKdBPrv559VIS6ugu1233KEwOxYW40UncMs+Yu9dFoaqc6RRtROLxHrPQ
h30U1jlufnZ/BQnZCNd1eITCVneV7VkLEmuq46zUoxRsK0dNCzkknBMGZ4PH
KRgzHOaruSS8pAU3Jv6mcL+vtWuYRyLqkNDq7VsKu/z1UQohiRMup2Y10xQ2
6ODnIyKRuHy4N1pPgSdNdTssJpF3vSTlwwcKT1+JuSqCRHH8kpD6OQpNynCD
mySJih3BX5+Yp1CiqZtstSFRLW4RKD5ROMP+ou+plETjtM3swgKFAz9tb9TL
SPwHZ1wIWA==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVjX041AcAxy9FErmS4467+93P5c79xlyrFRnfJ2ZKKI2at8rjdqq5SkmJ
vCxKTaF5SVpeko3JazaeXfP2eIvynsqqo7RqZeg2d8Ruf3yf7/N5nu8LL/iQ
t0SLRqN5aPS/f2taZUCj0RElGd2miGKAdeaVHn8xHXq+Uz2rohmomiB03XTo
uOqq5eMSw8Cz1ktaqfp0/CYgA4tjGXCMCPuXy6Rj/tW+sLAzDMz0ChVOa+lI
kClSVCkMfHPhek1sCB3nI5/dW5nPgM/8d/4L7Zq95CfbN7cxMJvza/d4wUr4
njitQ2eZ4K3A/nKgbBUe+eYt7JWa4JaDJHdovRGYMq9a62oTOOsqOjasWI1J
rwKOVNsU/JaqrcLh1bjMi+y08DbFw08HJ2jVxuiWTwg8ikwRKM4ffpzMQFO6
cvPUP6awNm9e7eptgvhdMfksZyZ65esjsilNb/zHyvIMJhq95oVRmtycxFe7
fZSJuP2HiSA5E4/YaYwAGxaM7D9xEGWwsD3v0MOAOBam1O6liUFmuLSq5+mz
LhaKwm87dmw0h9RrIKuXawZBeLuxoSEbsy0SA8cjZlDuE+P5EBu7RSdbreVm
yNJ9czG/nANPP1vxeUNzJF5X2747ycWKqP1P9weY48bxslNpIgKhIa5OteXm
CNtXRbPOJBB9tiLg9CI2AlyCP05VE/DLyZV3eLBxO8H+sFTKQ1/kRz3xeWys
q5P76XTzYPS5o6X8LRs51cbSm7YkDN3/sDtmx8GBZZmJ9bkkCs2IhawLHOzd
1eiRucgCWiPPlzoNc9BAMxaOyyww87VHkzfFha7sM/6GRxYoETnbj0Zzcbyf
3unlyIfgSb3yfTsXnt/rJ4yU8MGxOSiuNyCwzaN6zJa+Bite1CVvWkdA3Gkj
TTq6Bn4b7zeovyIQV9A35/V0DaYP127/O4GAMpznoHC2xJH8oATBTwQGfshO
Ga+whMMvw/oZfQQeNtWfq2YI8FeLkZ2LikBrSWVRfJQAKpmxi5jLA/tdz0Dz
uADe838Wf+nGQ47V1bJudyHSE2PK6mQ8xDekZLvXCWE+NbbcJ5sHLzOfok6+
FbRn6VtsGnlwlrX5r0y2Qt/svGDLSx7yzYP5XUorvFHc2ZNDJ2HZXJzp6S/C
m9+d7Kw3kEi3bhL13RHhC/uzkx8CSIROL+ntEFGYuJKnpZ1EIqRyiki+RCFm
Muq2x88kZAk757amUSjak1o8o+HInTUP9C9T6OouulJYRuK8MuJiaiYFs5Ke
GNUtEuV2qtmsaxTqgi1diypJqBsXhm6WUnjf3zs0V0sirU8/paWNwoFa4Uxp
I4mcwrDQpA4K6XzH175NJG4cu+fsdlfTT985sqiZRC0jVX33HgXdQ6cbdrWQ
GPEzCu0fpHBTMHBucRsJ4RjTeXSMgiI7lunfRWJtTRTnxgsKy5ZmLNfpJrEp
8bFK8pKCOKLkQ4WGPQXXKl69phC7Y1Chc5/E0YMEZ3KSAluPKqnqJRHtEK+q
mqbgcgK5gX0kkgxGB44pKRwc97mo208iu7zwwswMhfqmuPCgARIFcUuk9WoK
o7aZIcsGSZTukGyOntP8Xy/1rdFwDdnKdpynYGvQ6LZniMSdaUvVwgKF3aeG
7PUekPgPt4oWDA==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{10., 8.04}, {8., 6.95}, {13., 7.58}, {9., 8.81}, {11., 
      8.33}, {14., 9.96}, {6., 7.24}, {4., 4.26}, {12., 10.84}, {7., 4.82}, {
      5., 5.68}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3., 3.602},
  DisplayFunction->Identity,
  PlotRange->{{3., 15.000000000000002`}, {3.602, 11.498000000000001`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.45200574240625*^9, 3.452007652203125*^9, 
  3.452255658703125*^9, 3.514556168142*^9},
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3.`", ",", "1.1`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "0.12`"}], "}"}]}], ",", 
   RowBox[{"PseudoErrorY", "\[Rule]", "1.2366033227263211`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "13.762690000000001`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "9"}], ",", 
   RowBox[{"Residuals", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.7`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.2`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"6.`", ",", 
        RowBox[{"{", 
         RowBox[{"1.2`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"7.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.7`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"9.`", ",", 
        RowBox[{"{", 
         RowBox[{"1.3`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"11.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.2`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"12.`", ",", 
        RowBox[{"{", 
         RowBox[{"1.8`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"13.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.9`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"14.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.2`"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.452005742421875*^9, 3.45200765221875*^9, 
  3.452255658703125*^9, 3.514556168157625*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ansc4", "=", 
  RowBox[{"LinearFit", "[", 
   RowBox[{
    RowBox[{
    "AnscombeData", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
    RowBox[{"ReturnResiduals", "\[Rule]", "True"}], ",", 
    RowBox[{"ResidualPlacement", "\[Rule]", "None"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtz3lQ1HUcxvGVuNaABFrGY4XfnnwRWJYvUQakD+aEFqDSIMsqDnI1oWJg
mikwxKFATIQZOoQWypitUAhUGAYFxjEcAhOCjcKKgaSC2DgodzR+/njmNc+f
b1nU/pBYE5FIFLS4/92kz7YQiQQ8V4oN57xe/2WJQErhe38g/sMXBFIKzRHv
zlFzgZRCUjR0sttaIKUYuuknP79KIKVIDn/s99ZrAinFDzp9Ul6CQErRN/5p
WOyIQEox+eXUsqDtMnI1po+Y3jC5JiNXo/5pgsTMV0464miWxMXBICcd8cyw
6ucDcgXpBL1N/davTytIJ1Sln627aa6E3n/L4N7Fro7Pbl+ITFUirjnhXe16
AQOXdNGTY0o8Ci3znDkk4E/zRFf9DhXiM2ok5eUC8qZG9y3tUaEp+cmrZv8I
8JkrzmyFGmdSgxtiBBkMpyskvTVqhAb258bvlGEhcXfl9xpniK5ow8NOyfD2
zmDFqWJnqDTfFrzTKUPYQJFNuz2D2/4gixGxHPpERedLGQzlNbb3jvvL4VT8
ouU3MwzLOs1Mu1LkaDUtCJpPdEFMeot6oUaO91ND3ttjdMEr67+r8p6Qoy3/
wIxStwYjzVdS7NwUUFZ2RY81r4Fd+OjlyWgFouza+jK8XeGZM/zg9yIFdi9V
NcWVuUKbZRftdUOBMPvabN0qN5TlRGwss1bCprrij8Iv3GCh749q26yE4cSb
NufF7ghtlR3vzlTijXQ717qP3OHonyMZrFWiQOzfoHrkjpZM4c6Jp0rcKrnk
XrxLg/GuXodgDxWsDleVGts0ML8aHjIRq8Lc8MrCxA0emE+ybltbosJwTN0O
28seSOKD5dn9KjT/auxIfVlLqlG4TaRLDtSSaugyx+9FZmhJNWbSrX58UKcl
1ViRu+lhyqSWVGN5RHXkT9yTdIb4+vhfvfs8SWcc2hxQP1vqSTqjMf+6sdXo
STojb+Dg3rPLOckQ0H5/LnwLJxnuZuW31+ZykmE6IMRM1cBJBvW4e6K0kZMM
206Kb9tf4yTDReNv1SZNnGTY/rFHjLGVkwyVBqvGr7o5ybDHujnN7g4nGQqr
zj0UD3GSoSE8VbfkLicZVl7w1k78zUmGlnWlgx2jnGRQfvDJupwJTjJsdYgw
pD3mJMPRq2sdDv/LSYYey4mxuCecZEgr2XVm4zNOMpQF+Ij9pjjJ0DcmOeg1
zUkGjU9HoHyWkwx648WaFXOcZMg6lqm0neckQ4Vb5OeWC5xkuNXjO7uw+J/L
8B9PJRal
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAASFqIBwAAIEC1ZWHgo3AbQEKiMzm6
ASBA1zlzMshyG0A76t5qdAMgQPcNhYTsdBtALno1zugGIEA5tqgoNXkbQBWa
4pTRDSBAvgbwcMaBG0Di2TwioxsgQManfgHpkhtAfFnxPEY3IEDX6ZsiLrUb
QK9YWnKMbiBA+G3WZLj5G0DX7otXZeYgQHvgPLRUjhxA9pX5EE1WIUCNU9nh
FxkdQPp6BNYCxCFAaeqUPCKhHUC/924VBTsiQIbrQWK0NB5Ae4UVKRaqIkAy
7SRmbb4eQPiqG7dzIiNAH1n5NK5TH0BaDr9Qn5gjQNbo7DA25h9As4KevtkG
JECOPIuFcjcgQM2O3aZgfiRA0LkY2I2BIEDeq1hj9u0kQFw3wZm8xiBA1AZx
K1pbJUDLRvnxjgohQIz56G0K0iVAXAuqLyVUIUA6/ZyEyUAmQDPQddzOmCFA
qpiwFdW4JkAsSrpuPOMhQP9xYbKuLidAClaOl00sIkBKXE4jl5wnQC5ifS9y
cCJAV96aDswTKEB0I+WsWroiQFpxI84PgyhA/+RnmVb/IkAfnAsIoPsoQK1b
Y2sWSiNAyQSRTf5xKUA/ZO7TeZMjQGl+Umdr4ClAGG2Uq/DXI0DLj3P7JFgq
QBMrs2grIiRAJLLQY+3HKkBU6eyUeWckQGISy9eDNStAejm2V2urJEBhCiXG
ZqwrQME++P8g9SRAVxO7iFgbLEBQRFUX6jklQA60sMWWkyxA/v4qFHeEJUCq
kkMOowktQJJLkKenzSVAPYISK753LUBtmBCq6xEmQJEJQcIl7y1AaZoJkvNb
JkDcoastnF4uQKycHekOoSZADHizpODLLkDUMMHWzeQmQP3lGpZxQi9AHHrd
qVAuJ0DlZL5bEbEvQKzDFOzmcidAx73gzX4UMEBdwsQTQb0nQJZRAFh8TDBA
VMGPqq4CKEBYhO7nYIMwQDBS6te/RihA+4IMteu+MEAtmL3qlJAoQBmKSOx9
9jBAcd6rbH3VKEAYXbRgtjIxQNbZEtQpIClACc/u2tVtMUAgZwnSeWkpQHZJ
R7/8pDFAsfQaP92tKUDDj8/gyeAxQGI3pZEE+ClAjN51bJ4YMkBcekpTPz0q
QIUQQgghRDJANDMzMzNzKkDW1Wp6
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwV0Xs0lAkcxnGUayUU6zJ45/aq3MZrFZGepJRVK+fIuGSHYs+maFxSqmly
aXOJqKQaQrbV1Ca3IjWsLOYIZZNqa5qSsoUttTKY7Owfv/M7n3+fLz0yLiBK
Q01NbZPq/v8bQo5pq6kR+GtzlUNYHg1e5c5ut9QJ/Kb3efXVEzS4v5PtTJxD
4HC765aZfBocUlx6hrUIMD1bE0SnaDA+9+rUgwUEdtn3Nzw7S8OrJx6MixYE
vs6b9tpWQcPB4I8e61cQoEvXB4U30lDFDYnPiSUQvVZ2mDdIw8BYdlDUGwLO
yqdTSZ6WmDitMNi0lY4fHpsh9aQlplLmPtJooyN7XmLc4BtLNH+JNdZ0Z2By
jqgzcI0VDmQYLzURM9BmqTUiOW2FSbHFzQQGEw9mVrm5fbRCiH6z/4UiJmTO
+Xt0vrNGbWqJ5IkWC345ZHxPiTW6c59f4glY+HI5s/gXhTVkV7jbJ0ZZSE08
I3WzIfBQi28bEsqGbkuyW5c/gRzF8G69PjY4Y56eQ4cIrFSK0qUgoW1vUzn1
KwFx0XXj/gYSgs0Tl4r6CczyI2quOdhgwuJP8wgNOnzDNjPPiGxAm7r/iWVH
R5DsnP69RUvw+lZ9BD+YjhA+s2dh2hKE5jR925hGh7Vonk7p9BIkoFKUWU2H
dG7+pq/8pcgsLd+fLqPjJ0HAjzHypfA3lDSl6DDQlZcwzeIuQ+OOlgKFCwOs
mvvbRzuW4X7nYE8Cj4FIo66BNBdbDD9eLDTNYiBCj90efdUWF7rs2tfdZCBo
UdMxroUddHqj+LEvGdCvu/5H4Uk7GNRnVFsvZEJcsFb/oq49TH1qo6fdmViV
amQrSbZH79/qR/qimMjXXdPK/sceNnErONRJJp6VXbEXhTuAo5nrffwOE/P3
1VbIuxzg6jPebfSWCeWQeSHfyxHymFUjxGIWhnZIQg2rHeFadjlumScLHXfk
3YLFHDg1zvx8O4aFwi1q3IN+HDx+uUfTt5AFbvrYW14aB8Ib41/UW1iYTp1f
/17CgXR36GEvVUezrA0jhyY4+N1lKEbwDRum2+p4NygnhMgDR73Wqbr2jj3t
3+2E8eUPB53i2di70ad5psIJ7iUJq2kiNu7m9cqlciewhhWOeVI2cmRJu0pM
Kdz2KstQfmLD5947ZfD3FAI3bvUvtCQxmJF3rymLQi41XnXTl8SUT4Amu5XC
XruqxIeJJMgxez7tLoW4cYXgRBKJLad0ny9qoxDd4J3pt5dEpbylTqOdQpD3
0+K2ZBJb9zvukEsprAjT7KhLIVEjnn/3/AMKk9mhZqeFJGIWdAiNXlJIea8t
CcwhUVhbPqL7ikJ8dUCn4XESrcECrvoghZ3JxX3dKptfcuF8eE0hbI7z23V5
JDo9K150D1PwsAg3WF5AgrXniGfmBwpK37pIkyIS/ibbxMKPFP41mN3Vp/KB
264m+8YpjD7amJx7lkSfzofR6M8Unke+yNY6T0JYFl7sPUlBkqJXP1FM4qrP
Sl0PBYUbCGyuKSExMGqc5DxF4ZpWqTT2AgmHld1+jBkKJQUusjelpKpLZYOZ
kkIhVzhcXkYi42g6y/Crak+rrvHwchLX7XgndGYpHH1trDS/SOJZn/vMrMoC
MU97QOX/AJE6GzQ=
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{8., 6.58}, {8., 5.76}, {8., 7.71}, {8., 8.84}, {8., 8.47}, {
      8., 7.04}, {8., 5.25}, {19., 12.5}, {8., 5.56}, {8., 7.91}, {8., 
      6.89}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{6.9, 4.525},
  DisplayFunction->Identity,
  PlotRange->{{6.9, 20.1}, {4.525, 13.225000000000001`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.45200574778125*^9, 3.452007652265625*^9, 
  3.45225566228125*^9, 3.514556171970125*^9},
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3.`", ",", "1.1`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.5`", ",", "0.12`"}], "}"}]}], ",", 
   RowBox[{"PseudoErrorY", "\[Rule]", "1.2356954856813769`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "13.742490000000005`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "9"}], ",", 
   RowBox[{"Residuals", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.8`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.4`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.2`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.4`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1`"}], ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.7`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.9`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{"1.5`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8.`", ",", 
        RowBox[{"{", 
         RowBox[{"1.8`", ",", "1.2`"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"19.`", ",", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.2`"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.452005747796875*^9, 3.45200765228125*^9, 
  3.452255662296875*^9, 3.514556171970125*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell[TextData[{
 "We form level-spread data sets using the values of ",
 StyleBox["y",
  FontSlant->"Italic"],
 " for the level."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  RowBox[{"try1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Last", "/@", 
       RowBox[{
       "AnscombeData", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}]}], ",", 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Last", "/@", 
         RowBox[{"(", 
          RowBox[{"Residuals", "/.", "ansc1"}], ")"}]}], "]"}]]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  RowBox[{"try4", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Last", "/@", 
       RowBox[{
       "AnscombeData", "\[LeftDoubleBracket]", "4", 
        "\[RightDoubleBracket]"}]}], ",", 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Last", "/@", 
         RowBox[{"(", 
          RowBox[{"Residuals", "/.", "ansc4"}], ")"}]}], "]"}]]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell["\<\
These two sets look about the same, despite the fact that the data that \
generated them are so very different.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"try1", ",", "try4", ",", " ", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.45200576028125*^9, {3.452255677984375*^9, 3.452255724125*^9}, {
   3.514555354657625*^9, 3.51455536004825*^9}},
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{8.04, 0.8366600265340756}, {6.95, 0.4472135954999579}, {7.58, 
     1.0954451150103321`}, {8.81, 1.3038404810405297`}, {8.33, 0.}, {9.96, 
     1.140175425099138}, {7.24, 0.}, {4.26, 0.4472135954999579}, {10.84, 
     1.3416407864998738`}, {4.82, 1.378404875209022}, {5.68, 
     0.}}], {{LineBox[{{8.04, 1.9321051415444077`}, {
       8.04, -0.2587850884762566}}], 
      LineBox[{Offset[{1.5, 0}, {8.04, 1.9321051415444077`}], 
        Offset[{-1.5, 0}, {8.04, 1.9321051415444077`}]}], 
      LineBox[{Offset[{1.5, 0}, {8.04, -0.2587850884762566}], 
        Offset[{-1.5, 0}, {8.04, -0.2587850884762566}]}]}, {
      LineBox[{{6.95, 1.54265871051029}, {6.95, -0.6482315195103743}}], 
      LineBox[{Offset[{1.5, 0}, {6.95, 1.54265871051029}], 
        Offset[{-1.5, 0}, {6.95, 1.54265871051029}]}], 
      LineBox[{Offset[{1.5, 0}, {6.95, -0.6482315195103743}], 
        Offset[{-1.5, 0}, {6.95, -0.6482315195103743}]}]}, {
      LineBox[{{7.58, 2.1908902300206643`}, {7.58, 0.}}], 
      LineBox[{Offset[{1.5, 0}, {7.58, 2.1908902300206643`}], 
        Offset[{-1.5, 0}, {7.58, 2.1908902300206643`}]}], 
      LineBox[{Offset[{1.5, 0}, {7.58, 0.}], 
        Offset[{-1.5, 0}, {7.58, 0.}]}]}, {
      LineBox[{{8.81, 2.399285596050862}, {8.81, 0.2083953660301976}}], 
      LineBox[{Offset[{1.5, 0}, {8.81, 2.399285596050862}], 
        Offset[{-1.5, 0}, {8.81, 2.399285596050862}]}], 
      LineBox[{Offset[{1.5, 0}, {8.81, 0.2083953660301976}], 
        Offset[{-1.5, 0}, {8.81, 0.2083953660301976}]}]}, {
      LineBox[{{8.33, 1.0954451150103321`}, {8.33, -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {8.33, 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {8.33, 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {8.33, -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {8.33, -1.0954451150103321`}]}]}, {
      LineBox[{{9.96, 2.23562054010947}, {9.96, 0.0447303100888059}}], 
      LineBox[{Offset[{1.5, 0}, {9.96, 2.23562054010947}], 
        Offset[{-1.5, 0}, {9.96, 2.23562054010947}]}], 
      LineBox[{Offset[{1.5, 0}, {9.96, 0.0447303100888059}], 
        Offset[{-1.5, 0}, {9.96, 0.0447303100888059}]}]}, {
      LineBox[{{7.24, 1.0954451150103321`}, {7.24, -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {7.24, 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7.24, 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {7.24, -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7.24, -1.0954451150103321`}]}]}, {
      LineBox[{{4.26, 1.54265871051029}, {4.26, -0.6482315195103743}}], 
      LineBox[{Offset[{1.5, 0}, {4.26, 1.54265871051029}], 
        Offset[{-1.5, 0}, {4.26, 1.54265871051029}]}], 
      LineBox[{Offset[{1.5, 0}, {4.26, -0.6482315195103743}], 
        Offset[{-1.5, 0}, {4.26, -0.6482315195103743}]}]}, {
      LineBox[{{10.84, 2.4370859015102058`}, {10.84, 0.2461956714895417}}], 
      LineBox[{Offset[{1.5, 0}, {10.84, 2.4370859015102058`}], 
        Offset[{-1.5, 0}, {10.84, 2.4370859015102058`}]}], 
      LineBox[{Offset[{1.5, 0}, {10.84, 0.2461956714895417}], 
        Offset[{-1.5, 0}, {10.84, 0.2461956714895417}]}]}, {
      LineBox[{{4.82, 2.473849990219354}, {4.82, 0.28295976019868996`}}], 
      LineBox[{Offset[{1.5, 0}, {4.82, 2.473849990219354}], 
        Offset[{-1.5, 0}, {4.82, 2.473849990219354}]}], 
      LineBox[{Offset[{1.5, 0}, {4.82, 0.28295976019868996`}], 
        Offset[{-1.5, 0}, {4.82, 0.28295976019868996`}]}]}, {
      LineBox[{{5.68, 1.0954451150103321`}, {5.68, -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {5.68, 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {5.68, 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {5.68, -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {5.68, -1.0954451150103321`}]}]}}}, 
   {Hue[0.9060679774997897, 0.6, 0.6], 
    PointBox[{{6.58, 1.3416407864998738`}, {5.76, 1.1832159566199232`}, {7.71,
      1.0954451150103321`}, {8.84, 0.6324555320336759}, {8.47, 
     0.31622776601683794`}, {7.04, 0.}, {5.25, 0.8366600265340756}, {12.5, 
     0.9486832980505138}, {5.56, 1.224744871391589}, {7.91, 
     1.3416407864998738`}, {6.89, 
     0.}}], {{LineBox[{{6.58, 2.4370859015102058`}, {6.58, 
       0.2461956714895417}}], 
      LineBox[{
       Offset[{1.5, 0}, {6.58, 2.4370859015102058`}], 
        Offset[{-1.5, 0}, {6.58, 2.4370859015102058`}]}], 
      LineBox[{Offset[{1.5, 0}, {6.58, 0.2461956714895417}], 
        Offset[{-1.5, 0}, {6.58, 0.2461956714895417}]}]}, {
      LineBox[{{5.76, 2.278661071630255}, {5.76, 0.08777084160959103}}], 
      LineBox[{Offset[{1.5, 0}, {5.76, 2.278661071630255}], 
        Offset[{-1.5, 0}, {5.76, 2.278661071630255}]}], 
      LineBox[{Offset[{1.5, 0}, {5.76, 0.08777084160959103}], 
        Offset[{-1.5, 0}, {5.76, 0.08777084160959103}]}]}, {
      LineBox[{{7.71, 2.1908902300206643`}, {7.71, 0.}}], 
      LineBox[{Offset[{1.5, 0}, {7.71, 2.1908902300206643`}], 
        Offset[{-1.5, 0}, {7.71, 2.1908902300206643`}]}], 
      LineBox[{Offset[{1.5, 0}, {7.71, 0.}], 
        Offset[{-1.5, 0}, {7.71, 0.}]}]}, {
      LineBox[{{8.84, 1.7279006470440081`}, {8.84, -0.46298958297665627`}}], 
      LineBox[{Offset[{1.5, 0}, {8.84, 1.7279006470440081`}], 
        Offset[{-1.5, 0}, {8.84, 1.7279006470440081`}]}], 
      LineBox[{Offset[{1.5, 0}, {8.84, -0.46298958297665627`}], 
        Offset[{-1.5, 0}, {8.84, -0.46298958297665627`}]}]}, {
      LineBox[{{8.47, 1.4116728810271701`}, {8.47, -0.7792173489934942}}], 
      LineBox[{Offset[{1.5, 0}, {8.47, 1.4116728810271701`}], 
        Offset[{-1.5, 0}, {8.47, 1.4116728810271701`}]}], 
      LineBox[{Offset[{1.5, 0}, {8.47, -0.7792173489934942}], 
        Offset[{-1.5, 0}, {8.47, -0.7792173489934942}]}]}, {
      LineBox[{{7.04, 1.0954451150103321`}, {7.04, -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {7.04, 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7.04, 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {7.04, -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7.04, -1.0954451150103321`}]}]}, {
      LineBox[{{5.25, 1.9321051415444077`}, {5.25, -0.2587850884762566}}], 
      LineBox[{Offset[{1.5, 0}, {5.25, 1.9321051415444077`}], 
        Offset[{-1.5, 0}, {5.25, 1.9321051415444077`}]}], 
      LineBox[{Offset[{1.5, 0}, {5.25, -0.2587850884762566}], 
        Offset[{-1.5, 0}, {5.25, -0.2587850884762566}]}]}, {
      LineBox[{{12.5, 2.0441284130608457`}, {12.5, -0.14676181695981838`}}], 
      LineBox[{Offset[{1.5, 0}, {12.5, 2.0441284130608457`}], 
        Offset[{-1.5, 0}, {12.5, 2.0441284130608457`}]}], 
      LineBox[{Offset[{1.5, 0}, {12.5, -0.14676181695981838`}], 
        Offset[{-1.5, 0}, {12.5, -0.14676181695981838`}]}]}, {
      LineBox[{{5.56, 2.320189986401921}, {5.56, 0.1292997563812568}}], 
      LineBox[{Offset[{1.5, 0}, {5.56, 2.320189986401921}], 
        Offset[{-1.5, 0}, {5.56, 2.320189986401921}]}], 
      LineBox[{Offset[{1.5, 0}, {5.56, 0.1292997563812568}], 
        Offset[{-1.5, 0}, {5.56, 0.1292997563812568}]}]}, {
      LineBox[{{7.91, 2.4370859015102058`}, {7.91, 0.2461956714895417}}], 
      LineBox[{Offset[{1.5, 0}, {7.91, 2.4370859015102058`}], 
        Offset[{-1.5, 0}, {7.91, 2.4370859015102058`}]}], 
      LineBox[{Offset[{1.5, 0}, {7.91, 0.2461956714895417}], 
        Offset[{-1.5, 0}, {7.91, 0.2461956714895417}]}]}, {
      LineBox[{{6.89, 1.0954451150103321`}, {6.89, -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {6.89, 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {6.89, 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {6.89, -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {6.89, -1.0954451150103321`}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{4.5, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.45200576121875*^9, 3.4520076525625*^9, {3.45225568109375*^9, 
   3.45225572471875*^9}, 3.514555360720125*^9, 3.51455618217325*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell[TextData[{
 "However using a \[OpenCurlyDoubleQuote]better",
 "\[CloseCurlyDoubleQuote]",
 " level, the fitted values of ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", makes the differences between the two sets obvious."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  RowBox[{"better1", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "+", 
          RowBox[{"0.5", " ", "#1"}]}], "&"}], ")"}], "/@", 
       RowBox[{"First", "/@", 
        RowBox[{
        "AnscombeData", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}]}]}], ",", 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Last", "/@", 
         RowBox[{"(", 
          RowBox[{"Residuals", "/.", "ansc1"}], ")"}]}], "]"}]]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 RowBox[{
  RowBox[{"better4", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "+", 
          RowBox[{"0.5", " ", "#1"}]}], "&"}], ")"}], "/@", 
       RowBox[{"First", "/@", 
        RowBox[{
        "AnscombeData", "\[LeftDoubleBracket]", "4", 
         "\[RightDoubleBracket]"}]}]}], ",", 
      SqrtBox[
       RowBox[{"Abs", "[", 
        RowBox[{"Last", "/@", 
         RowBox[{"(", 
          RowBox[{"Residuals", "/.", "ansc4"}], ")"}]}], "]"}]]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"better1", ",", "better4", ",", " ", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.452005770640625*^9, 3.452255751328125*^9, {3.514555399892*^9, 
   3.514555405657625*^9}},
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{8., 0.8366600265340756}, {7., 0.4472135954999579}, {9.5, 
     1.0954451150103321`}, {7.5, 1.3038404810405297`}, {8.5, 0.}, {10., 
     1.140175425099138}, {6., 0.}, {5., 0.4472135954999579}, {9., 
     1.3416407864998738`}, {6.5, 1.378404875209022}, {5.5, 
     0.}}], {{LineBox[{{8., 1.9321051415444077`}, {8., -0.2587850884762566}}],
       LineBox[{
       Offset[{1.5, 0}, {8., 1.9321051415444077`}], 
        Offset[{-1.5, 0}, {8., 1.9321051415444077`}]}], 
      LineBox[{Offset[{1.5, 0}, {8., -0.2587850884762566}], 
        Offset[{-1.5, 0}, {8., -0.2587850884762566}]}]}, {
      LineBox[{{7., 1.54265871051029}, {7., -0.6482315195103743}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1.54265871051029}], 
        Offset[{-1.5, 0}, {7., 1.54265871051029}]}], 
      LineBox[{Offset[{1.5, 0}, {7., -0.6482315195103743}], 
        Offset[{-1.5, 0}, {7., -0.6482315195103743}]}]}, {
      LineBox[{{9.5, 2.1908902300206643`}, {9.5, 0.}}], 
      LineBox[{Offset[{1.5, 0}, {9.5, 2.1908902300206643`}], 
        Offset[{-1.5, 0}, {9.5, 2.1908902300206643`}]}], 
      LineBox[{Offset[{1.5, 0}, {9.5, 0.}], Offset[{-1.5, 0}, {9.5, 0.}]}]}, {
      LineBox[{{7.5, 2.399285596050862}, {7.5, 0.2083953660301976}}], 
      LineBox[{Offset[{1.5, 0}, {7.5, 2.399285596050862}], 
        Offset[{-1.5, 0}, {7.5, 2.399285596050862}]}], 
      LineBox[{Offset[{1.5, 0}, {7.5, 0.2083953660301976}], 
        Offset[{-1.5, 0}, {7.5, 0.2083953660301976}]}]}, {
      LineBox[{{8.5, 1.0954451150103321`}, {8.5, -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {8.5, 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {8.5, 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {8.5, -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {8.5, -1.0954451150103321`}]}]}, {
      LineBox[{{10., 2.23562054010947}, {10., 0.0447303100888059}}], 
      LineBox[{Offset[{1.5, 0}, {10., 2.23562054010947}], 
        Offset[{-1.5, 0}, {10., 2.23562054010947}]}], 
      LineBox[{Offset[{1.5, 0}, {10., 0.0447303100888059}], 
        Offset[{-1.5, 0}, {10., 0.0447303100888059}]}]}, {
      LineBox[{{6., 1.0954451150103321`}, {6., -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {6., 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {6., 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {6., -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {6., -1.0954451150103321`}]}]}, {
      LineBox[{{5., 1.54265871051029}, {5., -0.6482315195103743}}], 
      LineBox[{Offset[{1.5, 0}, {5., 1.54265871051029}], 
        Offset[{-1.5, 0}, {5., 1.54265871051029}]}], 
      LineBox[{Offset[{1.5, 0}, {5., -0.6482315195103743}], 
        Offset[{-1.5, 0}, {5., -0.6482315195103743}]}]}, {
      LineBox[{{9., 2.4370859015102058`}, {9., 0.2461956714895417}}], 
      LineBox[{Offset[{1.5, 0}, {9., 2.4370859015102058`}], 
        Offset[{-1.5, 0}, {9., 2.4370859015102058`}]}], 
      LineBox[{Offset[{1.5, 0}, {9., 0.2461956714895417}], 
        Offset[{-1.5, 0}, {9., 0.2461956714895417}]}]}, {
      LineBox[{{6.5, 2.473849990219354}, {6.5, 0.28295976019868996`}}], 
      LineBox[{Offset[{1.5, 0}, {6.5, 2.473849990219354}], 
        Offset[{-1.5, 0}, {6.5, 2.473849990219354}]}], 
      LineBox[{Offset[{1.5, 0}, {6.5, 0.28295976019868996`}], 
        Offset[{-1.5, 0}, {6.5, 0.28295976019868996`}]}]}, {
      LineBox[{{5.5, 1.0954451150103321`}, {5.5, -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {5.5, 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {5.5, 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {5.5, -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {5.5, -1.0954451150103321`}]}]}}}, 
   {Hue[0.9060679774997897, 0.6, 0.6], 
    PointBox[{{7., 1.3416407864998738`}, {7., 1.1832159566199232`}, {7., 
     1.0954451150103321`}, {7., 0.6324555320336759}, {7., 
     0.31622776601683794`}, {7., 0.}, {7., 0.8366600265340756}, {12.5, 
     0.9486832980505138}, {7., 1.224744871391589}, {7., 
     1.3416407864998738`}, {7., 
     0.}}], {{LineBox[{{7., 2.4370859015102058`}, {7., 0.2461956714895417}}], 
      LineBox[{Offset[{1.5, 0}, {7., 2.4370859015102058`}], 
        Offset[{-1.5, 0}, {7., 2.4370859015102058`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 0.2461956714895417}], 
        Offset[{-1.5, 0}, {7., 0.2461956714895417}]}]}, {
      LineBox[{{7., 2.278661071630255}, {7., 0.08777084160959103}}], 
      LineBox[{Offset[{1.5, 0}, {7., 2.278661071630255}], 
        Offset[{-1.5, 0}, {7., 2.278661071630255}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 0.08777084160959103}], 
        Offset[{-1.5, 0}, {7., 0.08777084160959103}]}]}, {
      LineBox[{{7., 2.1908902300206643`}, {7., 0.}}], 
      LineBox[{Offset[{1.5, 0}, {7., 2.1908902300206643`}], 
        Offset[{-1.5, 0}, {7., 2.1908902300206643`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 0.}], Offset[{-1.5, 0}, {7., 0.}]}]}, {
      LineBox[{{7., 1.7279006470440081`}, {7., -0.46298958297665627`}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1.7279006470440081`}], 
        Offset[{-1.5, 0}, {7., 1.7279006470440081`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., -0.46298958297665627`}], 
        Offset[{-1.5, 0}, {7., -0.46298958297665627`}]}]}, {
      LineBox[{{7., 1.4116728810271701`}, {7., -0.7792173489934942}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1.4116728810271701`}], 
        Offset[{-1.5, 0}, {7., 1.4116728810271701`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., -0.7792173489934942}], 
        Offset[{-1.5, 0}, {7., -0.7792173489934942}]}]}, {
      LineBox[{{7., 1.0954451150103321`}, {7., -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7., 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7., -1.0954451150103321`}]}]}, {
      LineBox[{{7., 1.9321051415444077`}, {7., -0.2587850884762566}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1.9321051415444077`}], 
        Offset[{-1.5, 0}, {7., 1.9321051415444077`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., -0.2587850884762566}], 
        Offset[{-1.5, 0}, {7., -0.2587850884762566}]}]}, {
      LineBox[{{12.5, 2.0441284130608457`}, {12.5, -0.14676181695981838`}}], 
      LineBox[{Offset[{1.5, 0}, {12.5, 2.0441284130608457`}], 
        Offset[{-1.5, 0}, {12.5, 2.0441284130608457`}]}], 
      LineBox[{Offset[{1.5, 0}, {12.5, -0.14676181695981838`}], 
        Offset[{-1.5, 0}, {12.5, -0.14676181695981838`}]}]}, {
      LineBox[{{7., 2.320189986401921}, {7., 0.1292997563812568}}], 
      LineBox[{Offset[{1.5, 0}, {7., 2.320189986401921}], 
        Offset[{-1.5, 0}, {7., 2.320189986401921}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 0.1292997563812568}], 
        Offset[{-1.5, 0}, {7., 0.1292997563812568}]}]}, {
      LineBox[{{7., 2.4370859015102058`}, {7., 0.2461956714895417}}], 
      LineBox[{Offset[{1.5, 0}, {7., 2.4370859015102058`}], 
        Offset[{-1.5, 0}, {7., 2.4370859015102058`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., 0.2461956714895417}], 
        Offset[{-1.5, 0}, {7., 0.2461956714895417}]}]}, {
      LineBox[{{7., 1.0954451150103321`}, {7., -1.0954451150103321`}}], 
      LineBox[{Offset[{1.5, 0}, {7., 1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7., 1.0954451150103321`}]}], 
      LineBox[{Offset[{1.5, 0}, {7., -1.0954451150103321`}], 
        Offset[{-1.5, 0}, {7., -1.0954451150103321`}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{5., 0},
  ImageSize->Automatic,
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.452005771453125*^9, 3.452007652984375*^9, 
  3.452255752046875*^9, 3.514555406251375*^9, 3.5145562023295*^9},
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],

Cell["\<\
The reason for using the square root transformation on the residuals is more \
heuristic: absolute residuals are almost always skewed toward large values \
and the square root transformation reduces the asymmetry. In addition, since \
the level is the fitted values, in some sense information about the residuals \
is contained in both axes of the plot. Experience has shown that in terms of \
a first estimate of a data transformation using the ladder of powers, the \
square root of the residuals does a better job of suppressing both the \
asymmetry in the absolute residuals and the fact that we are \
\[OpenCurlyDoubleQuote]double-counting\[CloseCurlyDoubleQuote] the residuals \
in the plot.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.2.2 Transforming to Match a Model", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "Often we have a data set whose variables do not directly correspond to a \
model to which we will try to fit the data. For example, in the next \
subsection we will take some pressure-volume data of the form {",
 StyleBox["p, v",
  FontSlant->"Italic"],
 "} and fit it to a model based on Boyle",
 "\[CloseCurlyQuote]",
 "s law, which states that the pressure times the volume is a constant. Thus, \
we will form a new data set of {",
 StyleBox["p, ",
  FontSlant->"Italic"],
 StyleBox["1", "TR"],
 StyleBox["/v",
  FontSlant->"Italic"],
 "} and fit it to a straight line."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "The powerful list manipulation facilities of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", plus the techniques for combining data which has experimental errors \
already described in Chapter 3, often makes this type of transformation easy \
to do."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
However, one aspect of this type of transformation that can be important is \
that it can introduce biases in the results of the analysis. Those biases \
will be the principle focus of this subsection.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
We will illustrate with some made-up, noisy data that obeys the following \
relation.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "y = a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "bx"}]], TraditionalForm]]]
}], "DisplayFormula",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["We will generate the noise with a Monte-Carlo technique.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noise", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "num"}], "}"}], ",", 
    RowBox[{
     RowBox[{"SeedRandom", "[", "1234", "]"}], ";", 
     RowBox[{"num", "=", "0"}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"num", "<", "100"}], ",", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["x", "2"], "2"]}]]}], ",", 
          RowBox[{
           RowBox[{"noise", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"noise", ",", "x"}], "]"}]}], ";", 
           RowBox[{"num", "++"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], 
   "]"}], ";"}]}], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "The ",
 StyleBox["noise", "MR"],
 " contains 100 numbers, distributed as a Gaussian with mean of zero and \
standard deviation of 1."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "noise", "]"}]], "Input",
 CellChangeTimes->{
  3.452005783234375*^9, {3.452255777921875*^9, 3.452255778546875*^9}, 
   3.452255814109375*^9},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.7]], {}, 
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.7]], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{-3., 0.}, {-2., 2.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{12.5, 69.9734693877551}, {84.7437821938355, 
         97.37795670858861}}],
       StatusArea[#, 2.]& ,
       TagBoxNote->"2."],
      StyleBox["2.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[2., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{-2., 0.}, {-1., 11.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{68.9734693877551, 126.44693877551019`}, {
         32.38999687744645, 97.37795670858861}}],
       StatusArea[#, 11.]& ,
       TagBoxNote->"11."],
      StyleBox["11.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[11., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{-1., 0.}, {0., 33.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{125.44693877551019`, 
         182.92040816326528`}, {-95.58592278483786, 97.37795670858861}}],
       StatusArea[#, 33.]& ,
       TagBoxNote->"33."],
      StyleBox["33.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[33., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{0., 0.}, {1., 30.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{181.92040816326528`, 
         239.39387755102035`}, {-78.1346610127082, 97.37795670858861}}],
       StatusArea[#, 30.]& ,
       TagBoxNote->"30."],
      StyleBox["30.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[30., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{1., 0.}, {2., 20.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{238.39387755102035`, 
         295.8673469387754}, {-19.963788438942586`, 97.37795670858861}}],
       StatusArea[#, 20.]& ,
       TagBoxNote->"20."],
      StyleBox["20.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[20., {
        GrayLevel[0]}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      TagBox[
       DynamicBox[{
         FEPrivate`If[
          CurrentValue["MouseOver"], 
          EdgeForm[{
            GrayLevel[0.5], 
            AbsoluteThickness[1.5], 
            Opacity[0.66]}], {}, {}], 
         RectangleBox[{2., 0.}, {3., 4.}, "RoundingRadius" -> 0]},
        ImageSizeCache->{{294.8673469387754, 352.34081632653056`}, {
         73.10960767908237, 97.37795670858861}}],
       StatusArea[#, 4.]& ,
       TagBoxNote->"4."],
      StyleBox["4.`", {
        GrayLevel[0]}, StripOnInput -> False]],
     Annotation[#, 
      Style[4., {
        GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesOrigin->{-3., 0.},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{{-3., 3.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.45200578371875*^9, 3.452007653046875*^9, {3.4522557790625*^9, 
   3.452255815359375*^9}, 3.500639450319125*^9, 3.5145562158295*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
We will add the noise to the dependent variable for 100 generated data points.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"a", "=", "32750"}], ",", 
      RowBox[{"b", "=", "0.1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"mydata", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "b"}], " ", "x"}], "]"}]}], "+", 
           RowBox[{
           "noise", "\[LeftDoubleBracket]", "x", 
            "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "100"}], "}"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "We can fit this using the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAFindFit", "[", 
  RowBox[{"mydata", ",", 
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "x"}], "]"}]}], ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "32500"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0.09"}], "}"}]}], "}"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlnc4FY4bxY2UUSGrbDcjo2uvr7jH3uNyubeyskVWKDREoUKSlBSSMpIQ
KhSyG1ZWJdEgKivZ8uv313nOc86f73M+r5hboK0nAx0dnTc9Hd3/1dxjvzAD
3QyplTu2ymdmCKdyz/G6npghZfeLrs29G0L5SNn250szJOate0qTG4ew04l1
I2J2llS73XXvSvoQxuxrPs1+/k2KsNPelKMzhBhjodujzYskLI3HClz+gGqZ
0d0NFzdIedmrn8P13iPteAV3/cUteKzXzczcOwBWpxwemc4tcJqJI67VDeCM
biJv2g5mKDddUaQvHkAAq8dOnwxmhLj9Tdc+OwCTm1yCHPks2GL9gnJKdQBr
dSG7XV+wQSNsLZArsx8eWxSV6JbZUemcRtgb0gf+V/1SosrcMB8LrTWzfAv+
3HW7DFtufDl4qElU5y0EIsSjd4Rwo7RyaxWD/FsISoUMbirjxmyZuuIkx1uI
xG47P0HkQXRyVoxRXw/EtQwmy2V4cWvH6Xg51x4Q75cVGxJ2QvLgL+3AU93Q
v5io6McpiPCoGfrhyk4UZy7aGCkIQmgk1DX4Vid4i92CxKwFcVxuNpnvXCe+
v9Z4OJAoiO5N42I3KZ1I3P5NzoBZCAcS3ySene9A72XtPUIbQvg88pGhRb0D
HtenhDt/isCvpYy16NVrvLDdE7frqxgK/UYub5N8CSsLroG+eTH4UPusVTle
4r3hX6lUJgJK+jIsA1faMavR284qRcDtntxXuzrbISoSvW3Nl4ChR/PSxhHt
OPljIG14moB5vq4DC11t0Dgbf+fO6m7E1Jw9gqRWPKwcq9/LJYlDj2QlI9Sa
kSVWJPWaIAkqw6X2KYlmJCYdST6sJAnJunu2wTzN8PGcP5hPloRpaMOvm/NN
IPAwLIqmSEJGZVU+6VET0kOF9nJvk4KmXy7alZtwQpmSsbJ5D7KySxj8tRth
WtYQ3LoiDa+G+ovUow1ITq7OqGCTwaQU6+YMjwb0+j1quC0oA4/iiD9j9g1w
lbzLeUJHBiJPnrIUaDQgPDOhTCFGBjfeq3x59rceueesZzNYZJH8Ot1WPqke
a/s/BvnvlMPWcmdKs2cdShmWAznViOhfyeb8plOLorUrlx8aETGWP90dLlWL
vAXiI0sqET5nVugFOWpxbdJj4fxxIp4wdgfljNbgVE/XCYYaIjLeObRfOlcD
i9yC879J8thr+OzSSlc15kWLuyfFFVB4LtsnLewpLtcf/PGaqIjC/orm23NV
qA/n2ZKkpojkYZWbn0aqMCXXSbDUUYR1SpeCbGcVzDL0DryxVMQ95ne+P+5X
gSFEuv2NvyK0/P1/b/eqQujuxXsdRYqgzKnrvhuqBC0u1a1LUglp7rNWyr0V
ELVof/dWWBknzDvuvh8vx0q1kIOWlDLafPt61gfK0Ssd0pMrr4wDeVutiW3l
SNgi8CoYyrhd78v8uKAc0y/8a9ndlPGu66SJ1+FyPNfkyDa/q4xCpgO+SjNl
OChF9WiUVYFH+FN3NaYypDN8myrXUMVprmPjXndLcLtIIvwiVJFbdGuzZ1IJ
im291t1NVFGWZjIfFlaCxtxxNh6aKgqKTOi6DEswoze559gxVcQp6eu6jz+A
aey0m1aVKp5KsNct732ANcaV/kZlNdh7uVfEtt2HGxN7XS9RHTyc9+T4FArR
WiPaeE5NHS8o0oQ6wULIhSi1qumoo9ageS6MpRCLw/ad1y3V0bflwSL7lwIk
Prn5ydFfHXFuU7bz6QWo8pOh+1aojic3iGdC6QvA1mOo+0dcA1dMtVg3j95D
RdaJRh4BTegEBvPubstD8zbpPQG7NSH7rSKxpyoP/Sf6EltkNZER+Tcw5W4e
lg4QHY7t08TNiBuW6rF50OIb+T7opInZ36O8CqQ8vLikv/1mzj//IOJy49M7
6Ipm3U+Q/A+9mh63xZ7m4qfb9SmiohY0rhudowzngMim6LykoYVjpUEs6t05
CHrU/qYBWlBtZq7f3ZSDP4yrxRQbLdwu7MkTKMrB3zwnv8hALTz/bhd0NjwH
HOOE780PtFDerkFS5syBit+DUUeZfeA3YJjOycxC1NEXvRd2a+NQSS3316ZM
+PT+yVuV1UZte/Ttkw8y4aAqHeavoo17u3TGZNIzobR4icfKUBs392nZ13tn
YjLSyYHTWxt1zkdWe9kyQYtZGrhWpI24d4FS16g3oHaZ+CFPUQfT9ubV7OvX
MVNyY/Q5iYQtCz9tYk6kQ0M4m8hsQkLmNkuW777piE66E0W2IeFHabCEEzUd
HP7FPF9dSUgdkXAIU0qHgvRzU5YYEkRqbNUdJ64i8M5omV0TCbf232Jb3n8V
i+bcuqHiwLz1vcJdRmkIx0HOf2cArYzTRv7GqShPs9MeKwbM+XgSyZqpmP5u
7ttYClRKNT/SlU2Fz+V9DSefAGd1vsbrsafi4Geh4LlWgK4xdX/zwOV/wUjX
hzEgo8LOr+3wZbC2eaaUiOtCRIo4cPF6CrKtg9gpObp4/b5Fr5SQDCW6qh9n
83QRkfMi/zhLMppKV1srC3TRmNIg6TCThO+c8dF8Zbqg01KTs3meBKXeW7Pv
G3RhEKlwWOdgElpor94e+qKLPeYTF+evJ+LXIcnrgZJ6+NFvIkrefRFaoUOi
F4v1IKsR4GIUlAAv3esxoaV6kOak+sk7JSB1O+WrU4Ue7rqmu0qZJeB7wat8
hVo9vJG+MKgvnoC0j9XE/ld6yG5zrt77Lh4/jTL2if3QQ/qjJf0aw3hk7XKg
PZbWh7HiNflA6Tgw1HVe+nJPH1opeSZfd55F7PfB26L39RFOUZf6vOUsNu34
/MjpoT7KLpUfnlqIxWbP+YGBx/rwTyqfVuyLBSvbLtHXbfpoYTDNdk+NBSfV
rbRiUh+l1g/FvNljITo933WOaADnDJrELa4YaIvw79hTZYAE97hdNL1oTHZe
dCNXG0AmJjuhTyUa16PXyyOfG2DC/Yyis1Q05kdH7N60GID/AZXt8tZoFOfl
Xw0ZMECFJueTxZLTEJRR3fVsyQDjI20jNcOnsKZiI2qrZQjnRfdXMlYnUWMW
RzxRbwge2kvrSZ9IMOwM2OTcZIggRp7vQZRImHyzf09qM0Q2favLFkSi/7RE
HGOXIfI+Kda680VipqLp44VPhpATneoZbImApAhjUsZfQxQ/wrfCPRFI+X36
R9U+I/g+u/0zbfEYPG5GFMw+MYIq4aomb30Y6FpKiFLPjJB33LOw40EYbk1/
qXBsMMKtbSzh6Zlh6NezamhtN8Jgp/yc3bEwmEwQ3t96b4QJDwL7OfkwyKq9
ZjNbM4KCxnRrRW4o5jqFA3NJxoh+af/895WjiGZsUrVrMYaqdiWXU3YwKk0D
dXVfGuOYgndtwuVgTF7it5TvMEbYf36kuthgUASDPdj6jcG77lxu4RMMaVXh
K43fjLHXTNTlu2IweryOzygzmaD9F3OsQGsQxF/K3ec2MMED8+zowLlAtKZc
Fe1vMIHawPU2iT/+kHEuPFzabII6+ZNWw8P+SJR9VnGh3QSEqqil/DZ/2LR8
NSF1m8CLj/NswE1/DK4qBxeMmGBcfZC11cAfk149DZEbJnB0TTlz47oftmqz
u4tomyJEovZIiMVhkCcS7vo8McW3gt0y+OwNZq7J7PRaU0iyL50ld3ijfp/5
jaZ6U9SeVo05Wu0NhZRtl0TbTTFSFCg3keoNDvXU44PvTGFIz/Q8w8AbXWcz
zU1WTbF7lPyT8b4XbERLZqV0zLCpwS08O9YTVtS32uONZiD4Sl8lHnJH1q2i
Z29azSCylu7Fa+uO6S9ntCtemeHki8ZlFn13pAQpaJ95a4ZOrgZwS7jj7fmk
fQJfzPBZPM+2YsINtFpjLWsGc9zcMpfPH+YGN7FajccwR21UUape2iGE/8hT
jn9mjtJ6LRHbry4QTG53b2gwx6Lr40Wvdhc0KkxdWW02h6t/dUJqiQs4wtXn
AzvM4cxUFr83wgVFdC8raJ/MERnj8jWI3QUfeaZVZegtYDYmdFcQzjCApsYb
AwvkS2sOxZc5YsfVN/u4XlvALn9Z+kPXfow9P3Bfs8sCymn9aeE1+/H0+/gu
114LHHmy8XT3vf1w3cewWDxkgVcvTi+VR+1HyRe1MqNfFiiXGn5wR2o/zJRy
JCK3W2JMu8q5IYaGmM6Q7aM2lnhwY8T7oiEVsyw7R0r6LME5l/XAb4UCZxuB
3qR3lnhpMmqtMknBy3ThNv+Plsi0kY1ieU9B7m6JUplvlui4KGD07ikFttpK
0ffmLRGUOJe9LZKCiiAL0SwuK3jvmWJvWLND+EC0axLZCgkdXQ2cbHZYzZsY
8XtjBXeVEk8fUzJqjf87l9VtBcqJKP4f/5FxavKCdHefFYI1afMRcmQwKMiF
qA1bIaYtZaqGnQzWmgBG+mkrvDzC/rmz3wb83b8l0jmsUVvuyyLvbYP/1tcP
19tZ4++FGOpWMWsct9/xh/u9Nfw82W6KbrFAD/c7Ybpha8ROxv9RnDXH3t5s
kx+j1lAfv3yc8sEcn2333myYsMZEaU7z64fmsLQx0Q9YtsaioOrm8/vNcVmi
rs19qw2MOG9fEy81g5foH95nsjYo7dBpTvI1BQfvoUeBh22Q0d/dFM5qDMrT
494H/W2wpKvytX3JCNcdUwSMA2yg016XKjNuBJE7dbHCITbIfff8KHeTEYgK
wpQ3ETZQMOYSP3/KCJZmH+ZlztvAwy3X8tcfQ1w4Za82lm+D5c7+/gNTBmAa
N33q+M0GZ9vFXj1i1EeoRoJhyLgNtk8fODTyWw+fz7d0x0/862+/tpv/qx7q
5fQny3/ZwEnJmK6ySQ+RIfsEWBZskM7yZiIuTg8z68STlZvJuNosxZO6VQ9D
3Ny62/eQsb7KcGBNTBcVesNtdYfJaGROvDv6SQeBuQPXyvzJsB6JVhhv1YEM
Q7fXnQAynPf0HNh4qIOchsZN8SFkDKjW2HlH6yARhbCKJIOUHmLATdCBp07o
k6HzZMg2qVT0+WiD9z/WguUCMppi3bOuMu7DcUW1eOVxMtiHzS4R/DThTHIg
Wk+QMZHA31xrrwkDy/C+wz/IIJgr/PWBJjh8q3bnTpOxEH9Fe5FHEwU5avUc
S2QcP9VqPtGggUF29eVfzLbYSC68wyukAfUpdb8CGVv07BF+rDCihoUiTWuh
AFvcOPJz2TFdBXtauTV5gmwx/imtdG+cCg58mSZsC7GFM2ukKFu4CuoE7i2s
hdnieuUG4097FSQk7sgaOmkLg4K3jQa8KhAI+PEzM8kWs29nkk0zlAHFWxf4
H9hCdP8xCacCJZx/TNfC99MWS8uNi0XfFWDLx9HJNGWLu+stGbkfFMB/TGTw
97QtlAIpxnkdCihW05ns/G37b2oF7zVXKKCrMmp7wqot9gRvzzx9RgG8FQsO
S6x26M7XqWkXVEBe6c/xQWk7SFyVuspUScTzwkGWG952WMzarjk/Kovyx9t/
lPnaYY7ZjHb3pSzuNRu8bvezgxsx9LfvI1kkjZYmLwfaYWosynHvOVk47jrP
tf+4Hdbz7qhkSstiJUFTaOd5OxwTr2ZkCpeBqs8NhfQiu38ckWbME5RGsaQj
NfWXHTpojcpdtyTxU88yKm7aDmITR9NkEiUh56KTHTlrh/aTgtWpkZIoviY6
7vbHDjecPKQTqf8887dw5XU72OewHCHskMSDySPpvVspcKjPt3x7XgIlJaf7
eOUoOKl7zuhvjDhK1e7YZR6mQNdGikK+QYAAfY31U38K0gpfbbt2gYC4Vz3m
AwH/+gNHuCYjCf+4xmDAdZQCYv6zvscHCWC+cEjlYhQFI5YCf2eECHD9KMIT
lUhBE98Oza48MbCfvdl/oIQCAR157sUaUQR0X93PP0cBXfGCi62AMII+jYYS
5ynY9OJdL4VBGMG/9qboLVCgtsDD7D8hhFCWlpbD/3a2y6XNY/CxECJ1F5Rr
GOzxMDliZ769EOLKHLY7ctmDpnM0d9tVQWRd5mu8pWKPC7uOjl4kCOANOUNO
7Jg9rBj8cj+G7gR/QM4Fzgh7HOXcof/r0E74XMj/Th9lj2p5w2Q2653Y1FiZ
9/mUPQ76Ti4cld6JfSo9gnlx9giLp/bNDfOhiJdtm1S6PSyagjZlW/Ah4cOJ
X3KV9khYfDzoocQLPU/XEo3f9gjQLHjkLMGNGvnkr7Z/7MHlW1Ibys0NlZUa
/iOL9thoo1++zsgNiUt88bdX7fG1eeID22cuMD/tcGHd5ABHgUMbGdlc6Niq
zTnE7QC5QM8YSyEu7K/YFXpazQEtmUdyGgg7/v19bzVbIhyw5Gu3cNKOA6pD
NeW1UQ6QsuC6W2bEgZWKPNlHJx2gyCLuOK3JgbNe4UI5ZxxA2WhrTBDlwPX2
XfSR5x2QtTy8z3OIHQ2XXNv2Zjigzkvj9GNeduwQnHK4+sQBTMe6am9lbEOF
Ckuox6IDmmSFC0z7WMFBltxKXnZAW49/dFE9K/yO6OdprzpgImxQUaCYFYR7
J3t5NxzQ+x9tWjaWFSl8cyrtm6nQFSXFsCix4sjK+z97eakQ8ZFOKUplgWR9
8bFFFSrm2qv9lVyYkWFuE3UhhIp4a9cPY4TNEOVN+5ETSsVD1ULvEI7NuDcy
cPBxOBXsJg8dtv1lQnmYy76vkVQYvC+RDn7HhNfZAevasVS8WvqtM53CBLr5
xNOzV6i4ujQvXs3ABJ+b7bG0SiqchhNmVGYZofFLL1FyiQrtPM4i+UV6sLXo
knatUFH384+r6gQ9hrMwx7ZGhWX/u0XDD/SItdGhzW5QEcfaeSe+jh4djzTF
a7fQMDS1myUxgR6ekQq1ZD4aDo6FNF0WpEfqFuGfJ9RouH3FUZxmQYefYsvm
b0NpaC2s6dRKXSd1UPP/boTT4MjLIpl8fJ1UmmRfJhdBg65GdtuC8zopdLmM
N+4kDYVC+ndZ5dZJa12HRzXiaDjg5Jb7X+saaVv0UHjWNRqM+qR33KdfIxGH
6277VtPQ/snF0iJuhcTBHUBJr6XBSb57TD9whTRnKril8TkNvoZB0da0FVJV
5XF/wUYa8k06AnJlVkg6SYrqna9o4FoNslftWiZZ7bvzWuUjDcpPKV50Issk
hRDy6UOfaKCUETbkWZZJOwo2FJNHafDMVDwf8nuJ1M/leG38Gw3rm+3lFdqW
SM4/uN1uTNGgXpq7cjFkiQSxRu7WGRr+MG6ikJ2WSARqcOvvORoOH7spKG2y
RBp78UbOcpGGty+P17ALL5HalqI+RSzTcMHzc7AwyxKpiCiTem+VhriTHVTS
/CIp0WPQ4O067R9HQpxCPi2SAm/ELW5s0KBkynn08ctF0v8AOAAhOw==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1yw881Hccx/FDt2hDxZptWudP/seh+T/39rcu/845R8wlsodq5GxsV6xL
hd3RJc0oMhVieuQykgdr5095eFBWthTbUiMrmz/h4VEr2x732e/x+D5+j+f3
9X2bJOzjJ2kyGIxd/57//upvhhO+/F2VeGYUdIFs318aAh3uk7WRXpA3VaG8
S16Noc6x5DfSfiIbYkhPUvBH0h2yEeJWFlq7FP5INoZei84mzZ5bZBbkTbGZ
ou/7yaYIdrdQMDT7yOb4rOpRWXb+DbIFusR1Z4u4PWQrSNKs3Yb9u8g22GBd
spSfqiLboV10Sfubgmtke1TIpeIzsnYyG62H2zgTd66SHbHXUmyaJrpCdkJf
isEa5cZmsjMuNlYPXTNtIm9GcImxQB6mJL+P+x02Q4bCS2QXHLWdaquIbSC7
onePmbN5bR3ZDbsVYl6uay3ZHYzypsQ7L8+TPRBeEXg95uVZsifmz5XXq9hV
ZC9Ydo143WZVkj9AWFYh86B9Odkbup36nsn7y8gcxNTJZ4R6X5OBQytP1mg/
OKm2FEh8NmDDnjxB3Qfa1wIc4vWLqPugJ+qdF+bjx6j7YlnjQV7itJy6Lxbi
7y2lcL+k7geOonSsZzqXuh+exh18qKc8Qt0fHa8qD8xdz6Huj+MtTYLxWSn1
AFgZFDQ+r/+CegAGogcPOfQdoB6Ig5Idfj4sCfVAMNuemJhWZ1LfglRVlW5x
6afUt+DtU99Obq5Op74VBd05fZr30qhvRe/5JX1RRip1Ll6ru7yHc3YvdS5u
7Z8rMnuUTH0buGMTWjvkH1HfBvGogXH557uoByFr56ipkzyBehBuPvvV8GFr
PPVgDFcvOEbaiqgHI5/lp5PAj6UeguDlgRZVSDT1EBi6JHmm2Amph0KyatF1
2ldAPRQX494a66/nUw/Dz+NmletSedTDMDIoKanJCKHOQyBTKbWWBakNHi57
b1/LzNlC73noPWfMGi4OUPsHHlzA1py38ad9OGoUMfuETD/ah2PR/MixLC5o
H47j4683eX/lTftwNB8uc/cReNGej1XsJo8bNu6056OU0+zczXKjPR9TxbOy
mF4n2vPR0Wj0YXuhI+0joCiKE2s+JSMC+8Wrw85r2dE+AnkOHaWbam1pH4H2
BssEm1Qr2gtwd1Kju2adNe0F8JhYeWHBZCPtBbDb2amUsVi0F0ClfyXU+rQp
7SNh1GLuMDJtQvtIDJccy/crMqZ9JIxzW3NkL//fR2L96VeqEY91tBdiMF3m
9kmZLu2FePdC4d3H96hLhbBXTl4vtn2T9kKIjjJ3J9wwoH0U1gtX5M6J1tA+
Cjefz2n99WQt7aMguW1hxH6xgvZReC92lC1t0aB9NGRnTvQr6hc46n00fs/I
nv0t87Ha0mh4D/0dpmOmRfto3D91des8Y1HdGdvhxnL60+RjJv4BFYi6mQ==

      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-8.9, -2962.57096229182},
  DisplayFunction->Identity,
  PlotRange->{{-8.9, 109.90000000000002`}, {-2962.57096229182, 
   32597.079718186476`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJw1kwtMk1cUx+94WchczOIiiZbB4sxgHdRSxwSBgygMEPt+oGM2IqTOgIBM
twSzT9eJbpDNCmOoDOZQFjKWxjFTt2Z8LKidq4gFia7IgCmPLkKxWtpQYNf0
fE2a5tf//Z/XPTdm70F5cRAhZB/9Pv8NfFzphNgf8Kt70vEPIMyNsMbKse4A
8oCQyFr+3DDqq4Cwc/baV1yor6b6roqLR4aRIyl/Ky3NmEFeB6R1V5V1fSgE
OJrGP9tqTnNhvNcoS84b/A+R1wOBL3Li704ibwDSP/+s91QIG+A3qC6OmK3z
oB5H6wk/nZIyivkEz/26e76/UY8HIozNO9TC1Sukur5+g2IIeSOtS9J56/A4
soiypSjnYgv6Eyl3dSxe60cWAxkdTw0+MI3nN9H++CtDK/5B/W0gJv4W49rH
yEnUH60Nn69Efofmdy0dlz1C3gwk+r1ba9+ax3jJQKbcx890LiKnUH1Y/9nB
R8hbgFiTogTn/0V/KpCTnra8MS9yGs13V2STNiCnU39EsDLmOjLQ+nzVQ77Z
ADOURzcWxX5P8H4ygHTpNnksTwL5GMr64gvEw81rK5CPFDGld/B+Gcq24H0J
p7l9yQQStt/otT7F+JRNIlm4wIn6NsrqqqY1eP8MZd6PHxapOP922s/I0nIi
7hNDmfedUWC4jfVnAdF11x8Z+wV1yoy1LzLDi/5sIN4Gu6BtEONTFtYdfVPE
7e+7dP7xmjThWdQpS69/ciLBhv4cIJfyzKG8+6hTTopcfPlrbj9ygZRV3+5r
HMT8lD+I3l233Y7x84AYcrP+5DvQT5nntZ7QXkb/DiBOcUf7oAP9lFnepZq4
AdTzgf3pZ8XVNcuo5wPjiNtvquT2dyet39FTZupBfSfAYqb4aKEb80uA3EvI
NcxMoi4BXWeOPbTejX4pkPL7kkk+7h9QPlx7zGl7gQ2cl4Lur5GB5BJP4DxL
9Sl5r59w+yQDdvekojTIh34ZMNkVLQoz1w/V863iwdmJgM7KILrlir1kDPeB
yIE585KvcQR1kAMxH2iOCsX9Y+TARsxVpdiwXlYO8Oq5qIJn3H4owLXC0/Fl
Ge47KEAoIg9f3IP7xShAZ3A7HGH4/lkFMImH3g+puYz5lVC+wrlaN835lbDq
c3+h14/viVHCV8m/N3068BjzK0HbVThxqvkJ+lUwNbCg7m3n+ldB6zHegwnj
CPpVcLNBX2w1Bwf6YVXADKs/vuG6in41+H8td167if2BGpQFEkP2DN4fo4bW
zppCQRDOi1WDcV2mZfobbn4a6P9hoaD7JL4f0MC25Y6spj8W0K+B1nNtWxM2
X8H6NSDMmsu3lvTh/LRgG0pc2tP+H+bXgn65bv71vU9xflq40AypltJxzK8F
w28hltzYO+gvAJPbuaN2pTv9f3se2Kc=
         "]]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.45200579090625*^9, 3.45200765325*^9, 3.45225582303125*^9,
   3.514556221876375*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"32750.21`", ",", "0.7`"}], "}"}]}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0999991`", ",", "2.9`*^-6"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "107.63175599980713`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "98"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452005790953125*^9, 3.45200765328125*^9, 
  3.4522558230625*^9, 3.514556221892*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["This fit matches the data very nicely.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["We take the logarithm of the model.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["Log[y] = Log[a] - b*x", "DisplayFormula",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "This transformation is sometimes called ",
 StyleBox["linearization",
  FontSlant->"Italic"],
 ". A fit of ",
 StyleBox["Log[", "MR"],
 StyleBox["y", "MO"],
 StyleBox["]", "MR"],
 " versus ",
 StyleBox["x", "MO"],
 " will give a straight line of slope ",
 StyleBox["b", "MO"],
 " and intercept ",
 StyleBox["Log[", "MR"],
 StyleBox["a", "MO"],
 StyleBox["]", "MR"],
 ". We form a transformed data set of ",
 StyleBox["{", "MR"],
 StyleBox["x, ", "MO"],
 StyleBox["Log", "MR"],
 StyleBox["[", "MR"],
 StyleBox["y", "MO"],
 StyleBox["]}", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"transf", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"Log", "[", 
         RowBox[{"#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "]"}]}], "}"}], "&"}], ")"}], "/@", "mydata"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["We fit this transformed data to a straight line.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAFindFit", "[", 
  RowBox[{"transf", ",", 
   RowBox[{
    RowBox[{"Log", "[", "a", "]"}], "+", 
    RowBox[{"b", " ", "x"}]}], ",", "x", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "32700"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"b", ",", "0.09"}], "}"}]}], "}"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVj388E3gYx9d2klzYbIjRNsupY9cipuj7tOqQ8nttagmnrqSRnOYVcVc3
3fwolQpdKU61Kz/yo9I1TOfHIZWSu4btGFeJmWpGtXZ/PK/nj8/n9X7eDzUm
IXQXFoPBbDHM/zsgNsIBi1Gjv+4suWSeT4cjV362ikpTo+fpxqVHT9DhlqLa
TDqjRsPsyXJtLh1sdizUp05NoY9d0oohMR1GOfeGpv6dRkzlDmnlMTr85Gt/
WfmnFp03uTAQJKRDw3KlY3O2Hu3eZkM+uZMOZ4S1xKZsY8B9sCi0YNDBtrPv
K4obEYo0jBf3ZY6wPjuHuQ9PBpbjzcdZkY4gC3UWLR6hQpnpUpz/BxpU1o02
uVo6geBqR1p9Pg38q5sPtM0ug7XpDyXAoEEVVpeA92BA/HwM9ZCMCvlN2193
MZiw1/frJ2U8KlA2d/zd6+AG8bJ6z8l3FDiLVU3cYq2CbrVApRJTIMbIvPEp
wxPcI7J8dU4UqL2Y1kKy84KnmpUdxuIlMB5zfoLBXAOzhVWnf6hzgMMHZU/F
jj7AqJtoJU/ag7qiSClFCBw8RWKyjT2kwHa8yXUAiTP+wcKNZLgUlGgeXrIO
2Hn83Ssz7WBNspySfYMN57bNK7wlsQVsY8+J4fL1MFO02z1+eDH4LLElONdv
ABJ7adQR08Vwb5OIkda0EXp4z+dleNpA7IXUa1N3voWCYf8v7x6whkzcg1Vh
rb5g/Yx0NaDYCtpOFlD6mv2gfPUViXUvCUJeHv9tzx1/eGJOoz8xI0Egt9dn
rGUTNATMuaq8iJDyuswt634AVM6dKWEetARCQbe3ZddmiCQcL+0rJsCUiY2i
4tkW+P28gBzXjoe5speKfd2B8MVp0icPHB6EHMI74j9BYPuWlMh3tQALq+ia
hLhgEJ66WZDSaQZGY/53+apgeG9n5YnfsAhq2YPtjXEhMJ7E1PGLTUHI9Mhy
GwuBT9XdOXbmC+G9xCvIXhAKx6TkddnRC+CX25hW6/FQcK4Zb93/aD5Ir/eb
FH0fBtisUparrxHccOJzT70Jg63Oizp/vYCDKo/SsOK4cGiq1jJ+NMOC4HFB
hK0mHMoWFNSQdmKgO6TQhXqIA5npK/3MEj4i9q6oCtY0B9R3vbv6eLMoEdfr
1Zq6Ffzyb+TPw2hRrbtJcqx2K/SzHGbximlUGBB8WJzEBcXFHavlPWrEesPO
cZrhQgkyEuJnX6Fxqi6gN5kHamVo86rWEfSQe/WTPoUHUcHbyo9KRlBVLqfa
JZUHTdLo7Md5IyhZV20lSudBSXEiZz93BH14FKdkiXgQzMl7WfbfMFqUKU+5
eM6Qt3fgiabDiDHYeHlvAw+gEmI0QUpkQRSEn/2DB1X2fr7grkQaf7Jxi5QH
lJwglzwbJaqvE8aTWww+eyLfL1Mq0NpcpmdPp4FHSxNHJylQoHdpl/sADzAu
CbsuLxtCK5JCMqKHeKBYcOQbH80gIlzTM/OUBl9Vjq6/YRD1WfLPjakM/1yS
5FpsHkSRr4kxRROGnDBalyEYQEBtIbapDfzJtxl2ngOIxj3QNq0x9Ltwm27r
5WhU1u2yRWvwE1EHJ07KUfvM4aFUneH+dyuuiSPkSMJYfqp8zsBDKMmJJkc5
sf0bej8aeORAb9mrFyihSKTV6w08HX9+ZM0L9BkzoC/q
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1yw1M1HUcx/E/T4r5EApyPHuAR85jB5dlInp8eJTjyePueDBhpRwiuGYw
J2ZIxwzSxE0SOBasqYXMESJQyEMMLHkGR3EQImESIE0EUgqvwyPbfX//7bf/
Xr/37+N6+Lg82ZTjONWr8//f+C34hZcJ3Kc0W0EXyN8r7b6pYrbEpUT3AbWY
2QrNVgppsMGdbIOQirLgzb3Mdgg16HaPa5idEFbfENepYuYj+cJ7JufEzG6Y
kTnHyg1u5K1Q6lun+b3MHvAJMox0aJi34VlNWWK7ink72httHE+JmT2xqA2T
KQyuZBFMmz++s6qX2RsllV7JDzXMYqRYHiy+rmJ+E6N/eU6pxcw7MDuts1Ya
+OS3cC7FIdu0l/lt9MeY//2Phnkn0n7pq9SqmN9BTkjhrFrMvAsiQYPt8PIW
sg/+yEwfryhi3g3JvXCL1V7Mvng6ftXSvtuFvAcpietliiTmvXCsDijNfulM
lsB+j1m1TzGzH/JarSbnvJgBrVmVh6jHyWg18KLJtaNDReb8ISwuq/hU70jd
H/wUl9SRIjIXgFOdEbzbItYDkO1Qf7Sxy4F6ICTD76YNqcjqQPwUPxF4UG9P
PQjluTNj8xqyOggWN9L7+0SsB6PxyZnXc7rsqAdDPqA7pkkicyHgnchTHF3m
UQ+B/LFJ6vMCMrcPwu7baVpv1vdhakGgX+ixpR6KCTEvhJ9EVofirkCb8Z1+
M3Upak9/G7S2hKyW4vDFTdL7nqyHYfoql1XaaUP9ldNqdD+ryFw4DMMC70sr
1tTDofumeby6iMxF4FlLh/ANT9Yj0F/VWnStYxP1SKxptw9vjyKrI7F9/qum
4YWN1KPATX80mF1IVkchZ5uF/2Wwvh9Hdv32aLTFivp+1JlWZhkiyZwMPMOh
08uWZMjgPO0n6unfQO9lMLsXuRTlQm6TYc5WI52/vJ720fjggKzPwomMaEiF
g19LxtfSPhpDLXdqNiaS26LhLU04L217jfZy3K24VTfdv4b2cnyW9PuW/Eyy
Wo6sh+UJ5SdX016O2fSokg2zq2ivwLqm4DxXW+pQQGsXkKx1tqC9AqmtdQMw
I7cpUDjVI8myMKe9EsLnR/Kf+pKhREPBxdCzY6a0V0Kpu+D2uJajvRKTE11V
Lb+a0D4GCV9mZDTlkxGDIocdkisnVvyM+xjwJ0dqap2pt8XA3D3zQ990vbFz
sVDeEly/P7doNGJxs/vlkNsEdXUspFPCz4U3/jW6LRa5186crf9CR/s4SIZ+
CNJnL9E+DuIfrzx6f+wF7eNwKNg6snR0jvZxWKrZuXjs+J+0j0fB9/U6Xsog
7eNh7/GJXPxgsNW4j8fwxEnhg5kntI/H+XUNcXKVlvYHsGLFr7XJnff7D3zz
tFI=
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-8.9, -1.3709458097968943`},
  DisplayFunction->Identity,
  PlotRange->{{-8.9, 109.90000000000002`}, {-1.3709458097968943`, 
   11.357362405044134`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJw10w1M1HUcx/EvRGUymSghAj6hJmFDIeKxvC8PyoMGx/FwVxBePNtQHsSF
innA8aQDjKdkwkLEZhhxXBNUUA9FtGQgiuLE6VFabBZckZMNWv3afe42dnvx
/v3u+///7v5rEjNlKeZElCz+/n83vgwSelR637eiXIJ/MKlG2+cPlMELmDwc
d/ofKYUXM6k1qRFJJbANk/TOvV2fFcN2TPMvatJj1LAj05mmMYu+Ing10/kL
PaNHCmEnpuSv5qQHC+B1oi8Y7s1XwW8x6X9bk9B9CHZmmnz6zT0fk12Ybmpn
lyYcgN9hKnPwWzyQB7syeY9H/T69D97MtHlaHR+YC7sxGZKzvS1zYHem25Jq
s4ws+F0mnrat27Ab9mA6tizgkUsa/B5Tlr2FoTIF9mTSmXeYlSbCXuI8r1en
DitgbyZl8Z3yHdGwDxMdU9tkvLxstK/wk0FDUsgVo/3E/Yd/8acmFH5ffN6r
hZkvtsIfiB69PXd5ELxFnF/48+XWSlgizscmfjAsCWZxf3djl3gkGq0S5lmH
X1rj0f3F92cWpjyViy486dr5+sBe9ACxfmXqfG8eurA+YFPy+v3ogUyN/Qst
N2SjCwdtjJMVHEYPYsqd1Jxo3ocu/CDlUGBEAfpWpiE7x/pVhejCs6XjP2xU
oW9jGszb33PV1IW1P/mkPTuKHsyUICn2jTd14RBnpSEOphCmtscebp4l6MJB
m3K+31aOHsrUfylvYkSNLnz1dlLHnir0MCY7/ZbVayvRhXNLauemStG3M7X8
mphy1vT5wguLph63Yj3tYLrYf6PiZTW6sFW2S9VxmD4U3/9cnVNoC7qwVbq5
f1MjejhT2qKiGusadGHO9nyzIRI9Qtz/zP24qSb0CFZ9neheP3MKXcrkfHx9
um2+0SxlpfTa2x8PabBeynz54aXu8jajdWK9Z7u2c2ct9keyalwevq6qzvj7
5UjWaf84vfv8SeyPFOfj8I9F/yfGrhN2O9ini2vA710mnj8fbvPC88ky1v+7
NGqRm8ZolYy5Yu3zZzldmC/W1xsatA3fYX4Uq9rfOLFrD9ZzFHNxZHyM0znM
j2Ky7++464/nVye8xC5ZMmW6/mhubql95bBlD/ZHM42YJ3m5nsT8aNbJB//q
+7IP80X/fMVZd8NFXH8MU3uXh0J9HftjuFnxY3h9eiv2x7B+pX2b8rVRzBfr
nYKtewrKMD+WNQPl3XGZozh/4W6fVou8W9gfyzetvB72ZgxhfyxHXzjTeM13
BPPlrCkcG1tVi85yDtL2fftkxTj2y3nWVzYxTJ24fjk/NVRe0WbhfkjBD/52
MDdM6jFfwbY/l5vltxtwfgq28182/mmbab6Cp7puVM7svYX9H3GV37lgy9MT
kv8At3e+PA==
         "]]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452005799921875*^9, 3.452007653484375*^9, 
  3.452255829640625*^9, 3.514556228813875*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"32300.`", ",", "6500.`"}], "}"}]}], ",", 
   RowBox[{"b", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0995`"}], ",", "0.0035`"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "2.5247506112341167`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "98"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452005799953125*^9, 3.452007653515625*^9, 
  3.45225582965625*^9, 3.5145562288295*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "In the previous subsection, we found that transforming can eliminate \
monotone behavior in the residuals. Since here the original data ",
 StyleBox["mydata", "MR"],
 " by construction has random residuals which are independent of the level \
(that is the value of ",
 StyleBox["y)", "MO"],
 " it is not surprising that transforming the data creates a monotone \
behavior in the residuals: their absolute value increases as the level \
decreases."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],

Cell[TextData[{
 "The nature of these residuals is reflected in the large error for the \
estimate of ",
 StyleBox["a",
  FontSlant->"Italic"],
 ". And the estimate of ",
 StyleBox["a",
  FontSlant->"Italic"],
 ", although falling within 32750+6500 and 32750-6500, has been \
systematically shifted away from the right number. This shift is a parameter \
bias introduced by the transformation. The estimate of ",
 StyleBox["b", "MO"],
 " is not biased by this transformation."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],

Cell["\<\
In general, calculating the amount of bias introduced by transforming the \
data is complicated. Thompson calculates the bias for a logarithmic \
transformation when the noise in the original data is proportional to the \
level, which is not the case here.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],

Cell[TextData[{
 "Section 8.4 discusses a convenience routine, ",
 StyleBox["FitExponent", "MR"],
 ", that automatically fits data to the form ",
 StyleBox["y = A ", "MO"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"B", " ", "x"}]], TraditionalForm]], "MR"],
 " by estimating parameter values by linearization of the model and using ",
 StyleBox["LinearFit", "MR"],
 " and then using those estimates to fit to the exponential with ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 "."
}], "Text",
 CellTags->{"Transforming data", "Monotone bahavior of residuals"}],

Cell[TextData[{
 StyleBox["Reference: William J. Thompson, ",
  FontSlant->"Plain"],
 "Computing for Scientists and Engineers ",
 StyleBox["(Wiley, 1992), Section 6.5.",
  FontSlant->"Plain"]
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 FontWeight->"Plain",
 FontSlant->"Italic",
 FontTracking->"Plain",
 FontVariations->{"Outline"->False,
 "Shadow"->False,
 "Underline"->False},
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],

Cell["\<\
In conclusion, it is important to keep in mind that arbitrary transformations \
of data can have unintended side effects by introducing biases in parameter \
estimates. The material in this subsection underlines the importance of \
transforming data to eliminate monotone behavior in residuals when fitting \
models.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.2.3 Finding Hidden Features of the Data", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
We load and examine some data on pressure and volume of a fixed quantity of \
dry air.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Boyle", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"BoyleData\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> Left, \
ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.45200765353125*^9, 3.51455623661075*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "BoyleData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 StyleBox["\<\"BoyleData is based on data for testing Boyle's law taken by a \
\\n\tfirst-year student at the University of Toronto in the Department of\\n\t\
Physics undergraduate laboratories in 1983. A fixed quantity of dry air\\n\t\
at room temperature had its pressure and volume measured for a\\n\tnumber of \
different values of the pressure. The format of each\\n\tdata point is { {p, \
errp}, {v, errv} }, where p and errp are\\n\tthe value and error in the \
pressure, measured in cm of Hg, and v\\n\tand errv are the value and error in \
the volume, measured in cm^3.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556238767*^9},
 CellTags->{"Info3514541838-2167347", "Transforming data"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "BoyleData", "]"}]], "Input",
 CellChangeTimes->{3.452005812046875*^9},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{85.82, 3.74}, {95.12, 3.36}, {119.12, 2.65}, {137.02, 2.29}, {
     151.62, 2.05}, {106.32, 2.99}, {115.72, 2.72}, {131.52, 2.38}, {147.52, 
     2.1}}], {{LineBox[{{85.83999999999999, 3.74}, {85.8, 3.74}}], 
      LineBox[{Offset[{0, 1.5}, {85.83999999999999, 3.74}], 
        Offset[{0, -1.5}, {85.83999999999999, 3.74}]}], 
      LineBox[{Offset[{0, 1.5}, {85.8, 3.74}], 
        Offset[{0, -1.5}, {85.8, 3.74}]}], 
      LineBox[{{85.82, 3.7600000000000002`}, {85.82, 3.72}}], 
      LineBox[{Offset[{1.5, 0}, {85.82, 3.7600000000000002`}], 
        Offset[{-1.5, 0}, {85.82, 3.7600000000000002`}]}], 
      LineBox[{Offset[{1.5, 0}, {85.82, 3.72}], 
        Offset[{-1.5, 0}, {85.82, 3.72}]}]}, {
      LineBox[{{95.14, 3.36}, {95.10000000000001, 3.36}}], 
      LineBox[{Offset[{0, 1.5}, {95.14, 3.36}], 
        Offset[{0, -1.5}, {95.14, 3.36}]}], 
      LineBox[{Offset[{0, 1.5}, {95.10000000000001, 3.36}], 
        Offset[{0, -1.5}, {95.10000000000001, 3.36}]}], 
      LineBox[{{95.12, 3.38}, {95.12, 3.34}}], 
      LineBox[{Offset[{1.5, 0}, {95.12, 3.38}], 
        Offset[{-1.5, 0}, {95.12, 3.38}]}], 
      LineBox[{Offset[{1.5, 0}, {95.12, 3.34}], 
        Offset[{-1.5, 0}, {95.12, 3.34}]}]}, {
      LineBox[{{119.14, 2.65}, {119.10000000000001`, 2.65}}], 
      LineBox[{Offset[{0, 1.5}, {119.14, 2.65}], 
        Offset[{0, -1.5}, {119.14, 2.65}]}], 
      LineBox[{Offset[{0, 1.5}, {119.10000000000001`, 2.65}], 
        Offset[{0, -1.5}, {119.10000000000001`, 2.65}]}], 
      LineBox[{{119.12, 2.67}, {119.12, 2.63}}], 
      LineBox[{Offset[{1.5, 0}, {119.12, 2.67}], 
        Offset[{-1.5, 0}, {119.12, 2.67}]}], 
      LineBox[{Offset[{1.5, 0}, {119.12, 2.63}], 
        Offset[{-1.5, 0}, {119.12, 2.63}]}]}, {
      LineBox[{{137.04000000000002`, 2.29}, {137., 2.29}}], 
      LineBox[{Offset[{0, 1.5}, {137.04000000000002`, 2.29}], 
        Offset[{0, -1.5}, {137.04000000000002`, 2.29}]}], 
      LineBox[{Offset[{0, 1.5}, {137., 2.29}], 
        Offset[{0, -1.5}, {137., 2.29}]}], 
      LineBox[{{137.02, 2.31}, {137.02, 2.27}}], 
      LineBox[{Offset[{1.5, 0}, {137.02, 2.31}], 
        Offset[{-1.5, 0}, {137.02, 2.31}]}], 
      LineBox[{Offset[{1.5, 0}, {137.02, 2.27}], 
        Offset[{-1.5, 0}, {137.02, 2.27}]}]}, {
      LineBox[{{151.64000000000001`, 2.05}, {151.6, 2.05}}], 
      LineBox[{Offset[{0, 1.5}, {151.64000000000001`, 2.05}], 
        Offset[{0, -1.5}, {151.64000000000001`, 2.05}]}], 
      LineBox[{Offset[{0, 1.5}, {151.6, 2.05}], 
        Offset[{0, -1.5}, {151.6, 2.05}]}], 
      LineBox[{{151.62, 2.07}, {151.62, 2.03}}], 
      LineBox[{Offset[{1.5, 0}, {151.62, 2.07}], 
        Offset[{-1.5, 0}, {151.62, 2.07}]}], 
      LineBox[{Offset[{1.5, 0}, {151.62, 2.03}], 
        Offset[{-1.5, 0}, {151.62, 2.03}]}]}, {
      LineBox[{{106.33999999999999`, 2.99}, {106.3, 2.99}}], 
      LineBox[{Offset[{0, 1.5}, {106.33999999999999`, 2.99}], 
        Offset[{0, -1.5}, {106.33999999999999`, 2.99}]}], 
      LineBox[{Offset[{0, 1.5}, {106.3, 2.99}], 
        Offset[{0, -1.5}, {106.3, 2.99}]}], 
      LineBox[{{106.32, 3.0100000000000002`}, {106.32, 2.97}}], 
      LineBox[{Offset[{1.5, 0}, {106.32, 3.0100000000000002`}], 
        Offset[{-1.5, 0}, {106.32, 3.0100000000000002`}]}], 
      LineBox[{Offset[{1.5, 0}, {106.32, 2.97}], 
        Offset[{-1.5, 0}, {106.32, 2.97}]}]}, {
      LineBox[{{115.74, 2.72}, {115.7, 2.72}}], 
      LineBox[{Offset[{0, 1.5}, {115.74, 2.72}], 
        Offset[{0, -1.5}, {115.74, 2.72}]}], 
      LineBox[{Offset[{0, 1.5}, {115.7, 2.72}], 
        Offset[{0, -1.5}, {115.7, 2.72}]}], 
      LineBox[{{115.72, 2.74}, {115.72, 2.7}}], 
      LineBox[{Offset[{1.5, 0}, {115.72, 2.74}], 
        Offset[{-1.5, 0}, {115.72, 2.74}]}], 
      LineBox[{Offset[{1.5, 0}, {115.72, 2.7}], 
        Offset[{-1.5, 0}, {115.72, 2.7}]}]}, {
      LineBox[{{131.54000000000002`, 2.38}, {131.5, 2.38}}], 
      LineBox[{Offset[{0, 1.5}, {131.54000000000002`, 2.38}], 
        Offset[{0, -1.5}, {131.54000000000002`, 2.38}]}], 
      LineBox[{Offset[{0, 1.5}, {131.5, 2.38}], 
        Offset[{0, -1.5}, {131.5, 2.38}]}], 
      LineBox[{{131.52, 2.4}, {131.52, 2.36}}], 
      LineBox[{Offset[{1.5, 0}, {131.52, 2.4}], 
        Offset[{-1.5, 0}, {131.52, 2.4}]}], 
      LineBox[{Offset[{1.5, 0}, {131.52, 2.36}], 
        Offset[{-1.5, 0}, {131.52, 2.36}]}]}, {
      LineBox[{{147.54000000000002`, 2.1}, {147.5, 2.1}}], 
      LineBox[{Offset[{0, 1.5}, {147.54000000000002`, 2.1}], 
        Offset[{0, -1.5}, {147.54000000000002`, 2.1}]}], 
      LineBox[{Offset[{0, 1.5}, {147.5, 2.1}], 
        Offset[{0, -1.5}, {147.5, 2.1}]}], 
      LineBox[{{147.52, 2.12}, {147.52, 2.08}}], 
      LineBox[{Offset[{1.5, 0}, {147.52, 2.12}], 
        Offset[{-1.5, 0}, {147.52, 2.12}]}], 
      LineBox[{Offset[{1.5, 0}, {147.52, 2.08}], 
        Offset[{-1.5, 0}, {147.52, 2.08}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{86., 0},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{{85.82, 151.62}, {0, 3.74}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452005812578125*^9, 3.45200765378125*^9, 
  3.452255835921875*^9, 3.514556241392*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "Boyle",
 "\[CloseCurlyQuote]",
 "s law states that the pressure times the volume is a constant number. Thus, \
a fit of pressure versus 1/volume should be a straight line. We transform to \
a data set of ",
 StyleBox["{1/", "MR"],
 StyleBox["v", "MO"],
 StyleBox[", ", "MR"],
 StyleBox["p", "MO"],
 StyleBox["}", "MR"],
 " and try the fit. First we extract the pressure and volume data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", "=", 
   RowBox[{"First", "/@", "BoyleData"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v", "=", 
   RowBox[{"Last", "/@", "BoyleData"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "We wish to propagate the errors in the volume when we form the inverse of \
",
 StyleBox["v", "MO"],
 ", so we will use the ",
 StyleBox["Data", "MR"],
 " construct introduced in Section 3.3.1.1."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vinv", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Data", "[", "v", "]"}]], "/.", 
    RowBox[{"Data", "\[Rule]", "Identity"}]}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["Now we form a new data set.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"vinv", ",", "p"}], "}"}], "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["We fit to a straight line.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{"mydata", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjmlQUwcUhREpiFagSArURNkZcUMFbQW9l0W0VlmUSMKShPeqIjASNELY
BVNxi+CQCqQVKkhpkVAVmgKCYGSwIC4hELYkr1o3NEJNLeKAtumPM2e+mTNn
PmciZddeUxMTk53G/N9eIR6P3MyVoLWytRSSTNSXXOFts1BC2UCiR9/XTJQ9
3EglzVNChPRWkNM+JnrnhGmuzVdCl/uR3N8TmLihSahGayXU+w//7XCQicEu
d3pjHZSQlVihaxEykfMhpVHipQSHbq+mGTETz8lbRGZhxr+cIG5eMxOvnmXF
fVShBPuBBz/J7PZgHP/O655nSpBuUTl1Ju7BavdMGt27H+RJgRyXDiMH+qQU
5faDR+bCosufReGqAwpR9+1+2FW9c8KBH4WH3sY8WGKvAmXTOMr6ojCCveay
2V4VjGcaWOc8WXi9azSgQaaCGzH8SnY2C3WlRVYZsyp44rZ9ZNswC8UCh1KL
kAHonVceQF/FRrWbtsH17ABsvRiZAgVsHPaXzfI0A2Dvklx8UsvGfZwIc8J9
EC61T1O/rY1G2TOTEJFgEEQBD10WFkVjUbDezkcxCB8y1i+/Nh6Ns3WXK2vn
q8HnrgnhtzkGXTLSeP5sNbTN8zzzsjwGVeE0raRKDXO4isd5kzG4ubijyMqg
hvILLd5+O2IxqLpGScMh6C1mBIbUxqKqg3v/jxND0Fwxle87G4uMYPe5d4eG
4J1k+a9fseLQoLxhyHYehqmawU9DGuKQWCdJbT0wDOIk/aZiUw6enhV4ODYP
Q7ojlzWHw0G4v6zUb84I0B+FXNzTyMF6yxeb8sJHgFZySttvzcUm+6eHwytG
oHZ6I1WRyMWtq+V7nzwdgSkhzzqsg4slDefE3/mOQt9ffMeShTxM2hCQSssb
hay1yQr+5zzUlqx4TL89Cmn3GKFpBA8tWa7iLbQx+J6Ts9u6mIed7hOv13DG
YGm2PV/aykPvmK4zIBuDPjHXvOU5D5dLD/5p83YMhlY8auxZFI836yN7UkAD
qz0WB5tujkcbz5Ank2INXFlkGnovKR5f1i1oXzekgeKzrilnzsdj3nlNb5mH
FsrfGyx1XfEoY47vPy3QwkS3sDDKEI/7l/R2BrRroZrxBf0WncDRUHmY48c6
OJpQ66XYTuDwiTRpE1MHbRge3niEwNTzhwTaCzoIPvwLq6+SwFsLMkWeeh1M
lbeNCu8S+MMpZrivLwXmoWYC+2kC/aOlx7LWU+D21FwxaOSRZZT85gYKgnIt
bSTvCLTtSWCEbqQgv8Gq3maGQJFF9ot9QMGsleNjyw8EJoiqRGVfUmC4vzJy
di6J3rmTzTNxFOgionweWpPYt9NHH8A17sfZBZU2JB5gZCw9waNgcUHsg7hP
SKxqMz1uR1LAvhafPGpLot0MbffKBAoGbJMvqWgkTqf7v+IcoqBXddSuezGJ
kq35TjWHKXiedIwQ0UlcY9+9+6WAAguz41cCGSQmysNa09Mp2OJzekfHEhI1
b4jC4mwKOiXfipqdSRR21baqc4x+K8r601xIpEn0r+h5FLzvkjr5upIYui4t
8ud8Cvz+qWy76kbiC9PrhZMFRj9x1Xy+O4mF/f+2+oooELrXsFZ5kOhWFTyR
9Q0Fpe21P+qN3Jl60llxnAI5s+5NnSeJ/wHLW0PZ
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVx3lYzAkYwPGkaGTTw4zSFh2qR7ozZRneNzIJXWrUNEcz81OKfTZlnu5j
Ma5Nh5UkS/vU9iBNjm3TliNJtnI0Tc3VTL8WsZiKsWTJ2tk/vs/3+TiJ0rYm
mZqYmIQb+/8eTLfHS2fJIDT19VRwJAv1xy8LNs6WgfOJ/s3VUSyU/rmK3GUh
g48dl2sM0Sz0LYjUXp0jA6ltemhdLAuDmrMVOE8G1D/eVJolsDDEua+XayuD
Ube39HvbWcj/N+3XCg8ZZD99t2dLLguPtfwuMYuUwfnET5Pb6ll4pTSeZ35W
Bu6mWUcumG5D3u6+Nz3PZeC4f5fhPnsb1rnm0ux9B0Ccv7x71SWj161IKysc
gBdO3NXPLOPQO7VT0n1vAJT15t+LRHGYMcXpX2wjh7GhJcn2HXEYzfa7aJYk
h/BC82uO9vHY3qUJbpLKwdd8u/JdejyOnCyzypmWg9/KgFMWj+KxRGx7cjZz
EBrD8jz0rmxULNU1uZQOwj55qZtdHhtVDOm0QDsI2ZQFXQeUbEzmR88SuQ7B
Xw7Wfp1eCSh9bsKUiIcga6QAGMUJWBaip67oHAKRzbVWk+cJON1wsebcHAV0
e6fOqGRw0DknU8BgKyDMUPwq5RQH5VE0XUWtApgV7vVzX3NwbfmtMiuDAkSP
A0wmwrm4vq5eRkMlqM9bdi9q4KL8VuKj0cNK6Avnchaa8NAhxHXmA6UShs86
/BjF46FBdtOQ76SCpIdxVZxmHooCKtLbUlWwOZNHuULhY/G02G1Rqwqie+Vf
hyTzER4tO7l6hhoeTnd+Pnedj42Ul2uKotTw7bDz3jC7RGy2ebYn6qwakvwj
0uiZiRjq05I09kwNqh0GT0NfIh5vOlZymq6B336ZycykCnBXUHA6rUgD7ZJN
umEQoO6451P7exqYcJy6kLxTgJR4l5INtGHwX8ANLa8SYIfrxBs//jBcFRds
qb0jQF9O11GQDsM6zzjnGIMAl1d/98R6ahisYsYT9Q5CvN0Y25MGWrAIfDHQ
sFGI1u7MsckSLcxPO7PQIkuIrxosbwQotcC2seoMrxViUaW2t8pNB5doQWv9
ZUKUsl7sKBbrIKD/7uTqL0Lcsbi3I/iGDt79Y03x9hChJqIlctHcEbibQ317
M16EqsOZ1c2sEZCnDIaslIgwvTJDrDszAlbUj32KJhHescyVuOtHgE1TuVB1
Ivz5B1YUnU7C6IGMJ99YEMhIqN6fF0hCYfn40Y9Gq5eRLbeDSHA4nRLYTiFw
fk+KQ8QqEjiX+UcYlgRKZue/TAYSlJpNPmBFYIqkVlIVRsIDH5e8ECqBvoWT
rZ94JLSr5fMjHQm8H75CH5xIAvtpxPV5TgSmOuQsOSwg4cNET1K/0bXXTQ9S
CRICzTpao10IpH6ixXilkHDFu5Ef60bghyzGOD+DhPP7JQ1sTwIrQvc61u8h
gVn6JcbOi0A/m+6YV2ISxqpyP2uM3tkS2ZaVRYJL0+4org+B2r9Fh8rzSahR
cd/z/QnM7jrXpiggYc0TZc2SAAJpFfpx+yIStONbw0aNjgjIjL2wlwS7mWE/
CekEvjRtPzS5j4TWr7o2OAcSeGjgSxtdQkKcLUw+NnppbchE3gES3ju3VdUF
EdiRfsSp8yAJJ7zo67avJPA/TCY7mg==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVx31QjAkcwPGKLakJzW7hUqIyeaskUZ3fL/byMnohW1vttrvPg4obq5fp
PQ02velNi3TnLbol1YnsdLGLDp2ibC/b2+4+QtLa2ilOhobb++M73/k4EsI9
+02MjIwCDf3/lQEur51MFZDY6Lm4PoWFuvJb/O1mCrCi04y/p7KwbtiHOjRH
AdcTlaOB6Sx0zwpW3Z6rgKF1aXfHM1no3ZiqxHkKYDbIQ9YcZyFzWXsbZ6EC
bOp35NaeYmH0d+Ed8UoFNEl4n2qusLBM+pdodrACvlYWdkjaWdhQzObSLirA
7I+V/zS4hCH3SPvks1EF0Of4Bt/JCMOrzukMO/cu+BIZ8dm80+At64UlR7uA
7JK/PuIajmvjWkRPW7vgxeUznM6scEyYjnppb9sNsvI7P20eCMfdER43Z+/v
hpwU6quxJxvvPR70r6/rhl23M2NkJ9moOVdilTbTDecXCBblD7OxKGnhObOA
HnjfKmXv2hCBSid1/fLiHrAULm7alx+B/X51M3xVD0h9nnCK3kTggejdpoRz
L/C5w8V13pFYN2oUIErqhbJrTFPN6UgsYero61t6oVJ19wKpi8SZmpuXJHOV
UHWoouUVROGytGS+X4QS3BxaVh+ujMLuEIZaXKWE+65cp48TUbi59EGJ1ZQS
XrJBkLeTg1uvVisY2Af3Ut3kCdc42P2A1/kqrw+q9aXX937h4BKm86wXfX1g
W7ipPyCUi1MK+VSmYz/kZoWecb/ORcJTHN8c1w+d/IwE4TcuFs4kuSxq6ocL
sVqxnBWN0Ol6ztd4AA62tjFpNdFYa679OTtkAOQ7pzZxaDxstH2XGHJxAMbk
K4Ln8Hi4zU26f+TdANALOiZv3uZheX1Z0W9eg/DGT6P705SPh7z94xnZg+D7
qkhC8+Cjunz1W7vWQfiewZzKieSjOXt50S+MITCtucgrzuXjQ+eJSY/oITh1
oqH8dAMf3aMen4K6IQjTx2jtKT6uqjz8Zv70EFw27TOTmAvwUe3eZ0JQQZhN
4N0ITwHOXxEwoi9SQVDTgRwxX4Afaixknn0qaKVtsmsvEGD2WVVbhYsaTozU
9+Y3CbCONRZTmKSGG7JVDokjAoyxb3voL1PDbn+BG3segYNB0uBFlhrwDfch
nvgR2J+XXNnI0kD1wudRa2MIjD+bkKS+oIH0rn0jj0oJ/NsiXbRCp4Fy+ytl
ahmBlwtYIV5eFKy2OTv731EC/SIrT2RsoKDNd+n0rfcEDrhS0kfeFMQJasZ+
HSPQ+lnskiAfCiS18o63WgJFZpnaA0CB49bRip5xAmNFVaKKHRTYHtm4pvEj
ge5H9U3fuBQYtw2yEn8Q+Dxwvc6fR8El/b7tbkYkxi1Jc8jjU7CZoff5YHDV
fZOTdJKCTP6spaQJifRvjNA1sRRMf16l3UMj8UuK33h0AgW65VlH11mQKN52
bGl1IgUFO8ziJwz2sH0a+iGJAldhGVljSeJBaXBzSgoFMc3V25dZkaj6ROSW
ZlIwHNJhbb2AxNTHkmZlFgXZyWxah8EMsW7cLpsC+99fT+dbkxjkmbz3xjEK
OKOfVcZ0ErUm93L1xyn4anmsU2ZwbtePZi8RBefXWbSkMUh0qmJOZORQsJF9
ptHLhsSH8fmOLScp6MtykEwa/B/Jxkoa
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{0.2674, 85.82}, {0.2976, 95.12}, {0.3774, 119.12}, {0.4367, 
      137.02}, {0.4878, 151.62}, {0.3344, 106.32}, {0.3676, 115.72}, {0.4202, 
      131.52}, {0.4762, 
      147.52}}], {{LineBox[{{0.26880000000000004`, 85.82}, {0.266, 85.82}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.26880000000000004`, 85.82}], 
         Offset[{0, -1.5}, {0.26880000000000004`, 85.82}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.266, 85.82}], Offset[{0, -1.5}, {0.266, 85.82}]}],
        LineBox[{{0.2674, 85.83999999999999}, {0.2674, 85.8}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2674, 85.83999999999999}], 
         Offset[{-1.5, 0}, {0.2674, 85.83999999999999}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2674, 85.8}], 
         Offset[{-1.5, 0}, {0.2674, 85.8}]}]}, {
       LineBox[{{0.2994, 95.12}, {0.29579999999999995`, 95.12}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.2994, 95.12}], 
         Offset[{0, -1.5}, {0.2994, 95.12}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.29579999999999995`, 95.12}], 
         Offset[{0, -1.5}, {0.29579999999999995`, 95.12}]}], 
       LineBox[{{0.2976, 95.14}, {0.2976, 95.10000000000001}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2976, 95.14}], 
         Offset[{-1.5, 0}, {0.2976, 95.14}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2976, 95.10000000000001}], 
         Offset[{-1.5, 0}, {0.2976, 95.10000000000001}]}]}, {
       LineBox[{{0.38020000000000004`, 119.12}, {0.3746, 119.12}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.38020000000000004`, 119.12}], 
         Offset[{0, -1.5}, {0.38020000000000004`, 119.12}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3746, 119.12}], 
         Offset[{0, -1.5}, {0.3746, 119.12}]}], 
       LineBox[{{0.3774, 119.14}, {0.3774, 119.10000000000001`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3774, 119.14}], 
         Offset[{-1.5, 0}, {0.3774, 119.14}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3774, 119.10000000000001`}], 
         Offset[{-1.5, 0}, {0.3774, 119.10000000000001`}]}]}, {
       LineBox[{{0.4405, 137.02}, {0.43289999999999995`, 137.02}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4405, 137.02}], 
         Offset[{0, -1.5}, {0.4405, 137.02}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.43289999999999995`, 137.02}], 
         Offset[{0, -1.5}, {0.43289999999999995`, 137.02}]}], 
       LineBox[{{0.4367, 137.04000000000002`}, {0.4367, 137.}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4367, 137.04000000000002`}], 
         Offset[{-1.5, 0}, {0.4367, 137.04000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4367, 137.}], 
         Offset[{-1.5, 0}, {0.4367, 137.}]}]}, {
       LineBox[{{0.49260000000000004`, 151.62}, {0.483, 151.62}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.49260000000000004`, 151.62}], 
         Offset[{0, -1.5}, {0.49260000000000004`, 151.62}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.483, 151.62}], 
         Offset[{0, -1.5}, {0.483, 151.62}]}], 
       LineBox[{{0.4878, 151.64000000000001`}, {0.4878, 151.6}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4878, 151.64000000000001`}], 
         Offset[{-1.5, 0}, {0.4878, 151.64000000000001`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4878, 151.6}], 
         Offset[{-1.5, 0}, {0.4878, 151.6}]}]}, {
       LineBox[{{0.33659999999999995`, 106.32}, {0.3322, 106.32}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.33659999999999995`, 106.32}], 
         Offset[{0, -1.5}, {0.33659999999999995`, 106.32}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3322, 106.32}], 
         Offset[{0, -1.5}, {0.3322, 106.32}]}], 
       LineBox[{{0.3344, 106.33999999999999`}, {0.3344, 106.3}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3344, 106.33999999999999`}], 
         Offset[{-1.5, 0}, {0.3344, 106.33999999999999`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3344, 106.3}], 
         Offset[{-1.5, 0}, {0.3344, 106.3}]}]}, {
       LineBox[{{0.37029999999999996`, 115.72}, {0.3649, 115.72}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.37029999999999996`, 115.72}], 
         Offset[{0, -1.5}, {0.37029999999999996`, 115.72}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3649, 115.72}], 
         Offset[{0, -1.5}, {0.3649, 115.72}]}], 
       LineBox[{{0.3676, 115.74}, {0.3676, 115.7}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3676, 115.74}], 
         Offset[{-1.5, 0}, {0.3676, 115.74}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3676, 115.7}], 
         Offset[{-1.5, 0}, {0.3676, 115.7}]}]}, {
       LineBox[{{0.4237, 131.52}, {0.4167, 131.52}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4237, 131.52}], 
         Offset[{0, -1.5}, {0.4237, 131.52}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4167, 131.52}], 
         Offset[{0, -1.5}, {0.4167, 131.52}]}], 
       LineBox[{{0.4202, 131.54000000000002`}, {0.4202, 131.5}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4202, 131.54000000000002`}], 
         Offset[{-1.5, 0}, {0.4202, 131.54000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4202, 131.5}], 
         Offset[{-1.5, 0}, {0.4202, 131.5}]}]}, {
       LineBox[{{0.4807, 147.52}, {0.4717, 147.52}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4807, 147.52}], 
         Offset[{0, -1.5}, {0.4807, 147.52}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4717, 147.52}], 
         Offset[{0, -1.5}, {0.4717, 147.52}]}], 
       LineBox[{{0.4762, 147.54000000000002`}, {0.4762, 147.5}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4762, 147.54000000000002`}], 
         Offset[{-1.5, 0}, {0.4762, 147.54000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4762, 147.5}], 
         Offset[{-1.5, 0}, {0.4762, 147.5}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.24334000000000003`, 79.21600000000001},
  DisplayFunction->Identity,
  PlotRange->{{0.24334000000000003`, 0.5152600000000002}, {79.21600000000001, 
   158.22400000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[{{0.2674, -0.15}, {0.2976, 0.13}, {0.3344, 0.33}, {
          0.3676, -0.18}, {0.3774, 0.29}, {0.4202, -0.1}, {0.4367, 0.5}, {
          0.4762, -0.8}, {0.4878, -0.2}}], {{
           LineBox[{{0.2674, 0.27}, {0.2674, -0.57}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2674, 0.27}], 
             Offset[{-1.5, 0}, {0.2674, 0.27}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2674, -0.57}], 
             Offset[{-1.5, 0}, {0.2674, -0.57}]}]}, {
           LineBox[{{0.2976, 0.67}, {0.2976, -0.41000000000000003`}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2976, 0.67}], 
             Offset[{-1.5, 0}, {0.2976, 0.67}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2976, -0.41000000000000003`}], 
             Offset[{-1.5, 0}, {0.2976, -0.41000000000000003`}]}]}, {
           LineBox[{{0.3344, 0.99}, {0.3344, -0.33}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3344, 0.99}], 
             Offset[{-1.5, 0}, {0.3344, 0.99}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3344, -0.33}], 
             Offset[{-1.5, 0}, {0.3344, -0.33}]}]}, {
           LineBox[{{0.3676, 0.6300000000000001}, {0.3676, -0.99}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3676, 0.6300000000000001}], 
             Offset[{-1.5, 0}, {0.3676, 0.6300000000000001}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3676, -0.99}], 
             Offset[{-1.5, 0}, {0.3676, -0.99}]}]}, {
           LineBox[{{0.3774, 1.13}, {0.3774, -0.55}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3774, 1.13}], 
             Offset[{-1.5, 0}, {0.3774, 1.13}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3774, -0.55}], 
             Offset[{-1.5, 0}, {0.3774, -0.55}]}]}, {
           LineBox[{{0.4202, 0.9}, {0.4202, -1.1}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4202, 0.9}], 
             Offset[{-1.5, 0}, {0.4202, 0.9}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4202, -1.1}], 
             Offset[{-1.5, 0}, {0.4202, -1.1}]}]}, {
           LineBox[{{0.4367, 1.6}, {0.4367, -0.6000000000000001}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4367, 1.6}], 
             Offset[{-1.5, 0}, {0.4367, 1.6}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4367, -0.6000000000000001}], 
             Offset[{-1.5, 0}, {0.4367, -0.6000000000000001}]}]}, {
           LineBox[{{0.4762, 0.5}, {0.4762, -2.1}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4762, 0.5}], 
             Offset[{-1.5, 0}, {0.4762, 0.5}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4762, -2.1}], 
             Offset[{-1.5, 0}, {0.4762, -2.1}]}]}, {
           LineBox[{{0.4878, 1.2}, {0.4878, -1.5999999999999999`}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4878, 1.2}], 
             Offset[{-1.5, 0}, {0.4878, 1.2}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4878, -1.5999999999999999`}], 
             Offset[{-1.5, 0}, {0.4878, -1.5999999999999999`}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0.27, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452005827546875*^9, 3.452007653890625*^9, 
  3.452255849671875*^9, 3.514556257720125*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"6.1`", ",", "1.3`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"298.7`", ",", "3.7`"}], "}"}]}], ",", 
   RowBox[{"ChiSquared", "\[Rule]", "1.191082602485035`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "7"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452005827578125*^9, 3.45200765390625*^9, 
  3.452255849703125*^9, 3.51455625773575*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "Note that everything about this fit looks fine except perhaps a small \
inverse parabolic shape to the residuals. But a little further thought will \
indicate that all is not well with this data. Since the independent variable \
is ",
 StyleBox["1/", "MR"],
 StyleBox["v", "MO"],
 ", the intercept corresponds to the pressure when the volume is infinite, so \
it should be zero. We repeat the fit, forcing the intercept to be zero."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{"mydata", ",", 
   RowBox[{"{", "1", "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVinsw1AkcwKUiutNj7HmM1Mqj0l0KKcn3uyXUeddPy7KvX16ny9GO9TbV
Ksp6ZAenK6U6k7KXx6koIadBd7UW67G7v46LtMpxSp29c+6Pz3zmM/Oh8+OC
InR1dHR8F/nfWzxtR6z1ZKB3Iuf2wc8JnCy6y/XWl4Hxwgi91ojA6t9dqdgV
MqAXuJWarybQId1fWWsog721UyLNWgJd6pP6cZUMBB8IttiUQA+r7q4wUxmM
ZFitkW0kkP1vXJ1kiwya85sSma4EFjY8EC3zX/xr3jKiogisyWOGL78ig0+B
qYRZJ4Hh33VPd47LQLl8akWQdTBet0mhWTj0gPSVwY8t6Yu9zykuP6MHyqz8
Wp6og/GrmDZRx9MeGE1ISvHdfRQT5lgvLE3ksH/Ds5rYS0cxMGT77WURcpB8
6uh5PH8Um9qHGNJqOewbqywqI5ioLsk3StbKQd+hVmZwj4ligWmJvmcv2Isr
flpYE4L91irpxrxecP/CVWgfG4IDbtVarrIXYrR/N2m6QzCSHajHt+mD6ffX
ru6wDcXqcR1PkaAPLvok6Bplh2K+x6SxU1sfWD+f8F3/OhS1VbfLKw37YW2E
1+57DBZaJSdy3UL6wZT527XRChbKA2gqSUU/pLD3VBX/w0L3gsf5RjP98KFV
tk3NCcP912/KaKgAXuCqclZLGMofc56/zFbA5tkdUo55OK7zsFn6q0IBhrOZ
rh9Tw3FG1jyTRh8AL/26SBNFOPIdJfGNMQOQ6ClOO+7Axgtaga3Z/QF4OFKw
KriQjfB8c8meJYPAuZiyr0PDxjsGb/ZmBgyCWbl4psuXg/UmYycDrgzCLwqv
3OVSDnpta4h4NTYI42tm+aNLuVgkLRRfch4C4RjTPc+Ji7EujHha5hA0tN+N
0fK4qCra+ofF0yGY3KXMycrjogFzo/gAbRjusn54PdDMxRabd9Pb2cNAz/Yv
mdJw0YHVngvVw7CeLBG9sOChfdmJ0dVzw9Dt1dMqOMTD1jtHOuNACXFtL/9y
FPJwtZ3nqymxEso1Z449quShpmrlI0eFEjIszW0M+3iYWazsKrVVwcSChzVd
j4/VxETUBYEKfIT7TQ/v5GOUZVcL45EK2B+dwrxJPg75NfibfaYGrV2TWl/C
x4HsxLJ6Qg3ePKea8618jC9OEKguqyHX4VTSpnd8fLIyRWQ3qYZwKT+jwJLE
q+eJAGdnCoadXXqbvibRLbTsTOpOCoJQLsryIXFwM9XQ6kJB16E4Z39fEtd2
Rq/zc6XgAaeyeMSPRJF+2ptIoKA4xyTEIIjEaFGFqPQgBYGqOVUwk0SHjKn7
8+EUPBXdH58+RuIzX6dJBocC9/wjpU0RJMasS16fzaXg5+//9M6KJLHioe5Z
Y5KCG9JNVabRJBrP0w5/GU3B6YHS4xBL4keh21t2AgVuW5Onc+NJlHid2nDz
JAX1O2kVwQkkbjfpOKwRUGDPqAnacJLEbxr8G4VCCsyDJ+rqBCQqZ/nnCtIo
mMsMSRwSkpjUXtnYn07BifPvbW8kkUiTTL61yKRgTFKo+DaZRD/HxCO3TlHQ
d6tz15JUEt/oNp2bOk2BT33ERNdin+tZaHQWUdDevKRMkkaidYXHu9QsCvZ0
Xj7ETiexJT6H3naWglr57nm7DBL/A1ZWTPw=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVyns0lAkcxnGGXKK2rKE6qShKapcVtVb9fhOp9gip1zBjxsy8xy21oink
tuy4VCY55DJd1mqlYmZVTEUXRBfp8rrMGIZ3Y8tJE6XO2o21a/94zvd8znls
RbGB4Qw9Pb1ds/u/a30chlYZUbBSYpQcokegrrBWsMOYgpaPqi+b9QmUv/Sg
Y0woEJJVNWsMCHRO9ddem0tB+dYdg5NzCNxYl6jCLyhYpn+cVWxGoLfdk/bQ
RRQsSZtn0mVFIH8m9nrRWgoWJlqe9l1PYIHylsTQn4KZGLvfgEPg1ZPBvDnn
KXD+/PRGfSOBvINPPjweoaCS+pujtArCC/ZHmUudO8H8NqE/FjvrrRti89M6
4ZkvK6X+RRB+Fd0iefCwEygHeYGxExvjJ7kvlll3gVPVpeQ3eWzcHeJSbRje
BUke3VGMd2xsbO1jKeRdYGr94/tKn2AcLMmfnzTdBe/LGn01VcEoFS8qMfbp
hiURCV4ljBBUrRpQrDzZDe7byM153BDs9ZRPC7TdUN0+aLbwdghG8Hcbiex7
QFTWJ15hxUH5iJ6PRNwDcfMjrt1L4GC+t85yQ0sPHC62/XhazcHpK9U/V81V
wa1I3rM/nblol3RE4BmigiB6TdpIARe7ApgDRRUq+KZc/Eik4+KWU/fy50+o
YJ9xwMgBv1D0ulBJMVENhRlc01pFKHbdC3v+e64aZrxH2lJMeGjjbW/wVK2G
FgWDrYnm4QR1dyLFthceCM9nNrXyUORaFNcQ3QtNq/ddHbTh44lpscPim72w
sKitLi+Nj/DcseQ7fQ1c2PlLYFsvH2tMRzenB2hAWmneJvUIwzrr14cCzmsg
xvKSh1QWhtu/Voa/eq2BEx33v7f+FIaFigLpGbc+yDh9o6R0rQBjNrLimOl9
wI/epR5lC3CgcN0fSx/2QZ1PcmmwRICmwSul25j9sGnyvdfJOgE22Y99cOH3
A6fjouexlwJ05rbmgbwfroh/Xe5rIUQn2Q/DCyb74QxryL8bhNhcs/dxLGjB
cNFN/cT9Qlyw2ufVuFQLsuaec8Nnhfj2itkdV7UWOvNdcyzbhZherG0vdRgA
NxcNZ96UEOXEm8gT4gGw0FrV2jqJMHJZexPrzgCcqi4KnGKLsM9P6b/YfBA8
/Dj02VwR9uYekdURg5DFFNwyUIowrjhePHBuEHa+/scye0iE982OSlbrZv/H
hzkvLEgsP04EuLnR0B5oOkYDiZ4c2U/J7jTYy2rtLiOJGkda2byRhsyXbHY8
i0SLx1E2fh40fHvwYpOhF4kS45TRCKDhktSr0NGHxChJhaR0Jw1Zj1I3HfIl
0Tlt/OYUjwbcMpFpFEJix64NOlYYDWeyym48n3W0TdLyXAENkx2oK+WQWHGb
kW1J0qDg5hNOoSRaTjH3rI+iwSZp3ZqAMBL/SvB8x4+n4fP1iKdl4SQWbc9Y
UXmIhqCpeQwygkQX6wd73oppuLa13n1dJIn7lP4NCQk0RFMG5XejSNR+EuWc
SqFBPVYePxxDYmJrVYMqlQZX9x1VNftJZBbp3i1NpyE/dbz/8AES/VyP7L2c
QcN28y3bTGJJHGU05oxn0lCx51USNeuczn8b3CQ0zMjyFLKDJK6q8B5LzqKB
M+Q6TMaR2BR3zLYlm4Z6x37r9fEk/gcZ+UTA
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVjms0lAkYgGWVUqlkji6uRQpbhJwsvS+JtrMhfBmXGWO+iFga5pDrKOMS
oQ6bWZ0u67IoU5J1pJJkWaPSN8NgzMy32mLdcrJb2bK17Y/nPOf595hx4/0i
NDU0NA5/4X9beW57Yb6MgsnAVcq9mwicKW3kHNSmIFJnblfVZgLFY850zHIK
xu5T2auMCLTN8FE26VCgMCu3pk0IdGo+Jcc1FEimzdKEFgR6bOmThG6g4LrA
aVO/LYHsT/F3yqwoiKnlMo95EXih5a5Qy4eCqXetA8V8Am8XM1lLr1DQWb/9
r3Q5gayTfW96JyhY7/yyZdbuKFZZpDIMbaXgu6b9UGnhl3Z3iC/JlELkQrCW
dOYo7ozuFHb3SOFt+36y1CsQE96HPDc2kEHIj3MTs/WBeCTI7oZWhAxutd51
ydBh4r0uhdtNsQzSfunfU3KMieryEt2URRkYd9cdde5mYhF/Q7m25wC4ND/d
HGUWhHJz1c2txQPgObH2tiQ1CIddxIsc5QBY7jSI7R4Nwkj2kWVci0HI8ot+
4rEnGMUTGp5C/iDcKcj0CxUFY4nHjL5D5yDItJvq6haCcfH6jau1OnKI4dpV
J/uF4JaUJI5LkBwUzxN/pe+EoMyXoSqrlEOnoeY5iW4o7jv/sER3Xg5n0v1P
efNCcX9VDcXAIdhl9thBWxqKsodh/b/nD0FAVeZFdxsWGnlYfPV0aAj89v5r
ZFDMwnmqfT7dbBh+a+g5FDfJQq59Ga8tehhsIhq9PrizsXCRv21j6zActws9
YVLNRujfUf7NkhHYPOq/u+cTGxtWTLkKfEegRqRrujw8DJsNxhN9r4yAyaUJ
VcajMPTa1RLxanwE8l1zTe+t5mDpzQtFlxwV8L3Th5fZ+zgY4+TGYwgUoGuq
v7g6loOqUpuXhj0KMLd2TWsScXAFc2vRAcYobO/wKtray8EOi9dv7Nij8Of+
hTfEOw7ahnSdA/EolB0pmAywDEfrirg/1r4fhY+HO+0ZRDg+agjojQclKGJX
jM+dDse1lp6v5oqUUM3YbV3eFI7T11c+sB9SgpVY4/FnOhwFF5US0TYVXH7W
OOuwjotiYvJ4IV8FuXons4RuXDxuLOlwe6ACmwODET/EcVHh3eKzcZUa2pcY
qhOucnE4P6mimVDDSvHy+nVPuci7mMBXXVZDf6qWUvIPFx+vTBVazqghSzr2
k68VidcKCF9HRxpmNkS0lQeS6BJckZ22hwbB+NvxcCaJIzvolkdONOg15663
CSJRrzfKyNuZhr0+dbEdwSQKtdOnIoEGYc608SSLxChhpVD0LQ1G87xs52Mk
2mbOtX5k0eDdl/md6iSJTw47zLiF0TAmWpNSyyMx2ijFJJ9DQ2LktRpeAomV
9zVz9UkaKpZ0flrKJ1H/I8P/6ygaJpyW3t6ZTOJCssssO4GGzOpCRlYGiWVe
p01rEr/8JRi6H8ok0c6g23+aT0M1iOP0BSSeaPFpS06moU/xrKcui0Tl39y8
8+k0GKzTS6WySTzVVdsmz6ChXl358yUhiYyymVlDAQ2uDfayiBwSve2TAupP
00B6ETYfckmc0ryXN3eGhnf648yuPBLzpJ/bHIU0FLxIyinOJ9G80uN1Wg4N
ho3aTcyzJHbwzpp15tJwK0Ok3lJA4n8HS0d+
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{0.2674, 85.82}, {0.2976, 95.12}, {0.3774, 119.12}, {0.4367, 
      137.02}, {0.4878, 151.62}, {0.3344, 106.32}, {0.3676, 115.72}, {0.4202, 
      131.52}, {0.4762, 
      147.52}}], {{LineBox[{{0.26880000000000004`, 85.82}, {0.266, 85.82}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.26880000000000004`, 85.82}], 
         Offset[{0, -1.5}, {0.26880000000000004`, 85.82}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.266, 85.82}], Offset[{0, -1.5}, {0.266, 85.82}]}],
        LineBox[{{0.2674, 85.83999999999999}, {0.2674, 85.8}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2674, 85.83999999999999}], 
         Offset[{-1.5, 0}, {0.2674, 85.83999999999999}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2674, 85.8}], 
         Offset[{-1.5, 0}, {0.2674, 85.8}]}]}, {
       LineBox[{{0.2994, 95.12}, {0.29579999999999995`, 95.12}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.2994, 95.12}], 
         Offset[{0, -1.5}, {0.2994, 95.12}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.29579999999999995`, 95.12}], 
         Offset[{0, -1.5}, {0.29579999999999995`, 95.12}]}], 
       LineBox[{{0.2976, 95.14}, {0.2976, 95.10000000000001}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2976, 95.14}], 
         Offset[{-1.5, 0}, {0.2976, 95.14}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2976, 95.10000000000001}], 
         Offset[{-1.5, 0}, {0.2976, 95.10000000000001}]}]}, {
       LineBox[{{0.38020000000000004`, 119.12}, {0.3746, 119.12}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.38020000000000004`, 119.12}], 
         Offset[{0, -1.5}, {0.38020000000000004`, 119.12}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3746, 119.12}], 
         Offset[{0, -1.5}, {0.3746, 119.12}]}], 
       LineBox[{{0.3774, 119.14}, {0.3774, 119.10000000000001`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3774, 119.14}], 
         Offset[{-1.5, 0}, {0.3774, 119.14}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3774, 119.10000000000001`}], 
         Offset[{-1.5, 0}, {0.3774, 119.10000000000001`}]}]}, {
       LineBox[{{0.4405, 137.02}, {0.43289999999999995`, 137.02}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4405, 137.02}], 
         Offset[{0, -1.5}, {0.4405, 137.02}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.43289999999999995`, 137.02}], 
         Offset[{0, -1.5}, {0.43289999999999995`, 137.02}]}], 
       LineBox[{{0.4367, 137.04000000000002`}, {0.4367, 137.}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4367, 137.04000000000002`}], 
         Offset[{-1.5, 0}, {0.4367, 137.04000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4367, 137.}], 
         Offset[{-1.5, 0}, {0.4367, 137.}]}]}, {
       LineBox[{{0.49260000000000004`, 151.62}, {0.483, 151.62}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.49260000000000004`, 151.62}], 
         Offset[{0, -1.5}, {0.49260000000000004`, 151.62}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.483, 151.62}], 
         Offset[{0, -1.5}, {0.483, 151.62}]}], 
       LineBox[{{0.4878, 151.64000000000001`}, {0.4878, 151.6}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4878, 151.64000000000001`}], 
         Offset[{-1.5, 0}, {0.4878, 151.64000000000001`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4878, 151.6}], 
         Offset[{-1.5, 0}, {0.4878, 151.6}]}]}, {
       LineBox[{{0.33659999999999995`, 106.32}, {0.3322, 106.32}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.33659999999999995`, 106.32}], 
         Offset[{0, -1.5}, {0.33659999999999995`, 106.32}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3322, 106.32}], 
         Offset[{0, -1.5}, {0.3322, 106.32}]}], 
       LineBox[{{0.3344, 106.33999999999999`}, {0.3344, 106.3}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3344, 106.33999999999999`}], 
         Offset[{-1.5, 0}, {0.3344, 106.33999999999999`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3344, 106.3}], 
         Offset[{-1.5, 0}, {0.3344, 106.3}]}]}, {
       LineBox[{{0.37029999999999996`, 115.72}, {0.3649, 115.72}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.37029999999999996`, 115.72}], 
         Offset[{0, -1.5}, {0.37029999999999996`, 115.72}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3649, 115.72}], 
         Offset[{0, -1.5}, {0.3649, 115.72}]}], 
       LineBox[{{0.3676, 115.74}, {0.3676, 115.7}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3676, 115.74}], 
         Offset[{-1.5, 0}, {0.3676, 115.74}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3676, 115.7}], 
         Offset[{-1.5, 0}, {0.3676, 115.7}]}]}, {
       LineBox[{{0.4237, 131.52}, {0.4167, 131.52}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4237, 131.52}], 
         Offset[{0, -1.5}, {0.4237, 131.52}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4167, 131.52}], 
         Offset[{0, -1.5}, {0.4167, 131.52}]}], 
       LineBox[{{0.4202, 131.54000000000002`}, {0.4202, 131.5}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4202, 131.54000000000002`}], 
         Offset[{-1.5, 0}, {0.4202, 131.54000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4202, 131.5}], 
         Offset[{-1.5, 0}, {0.4202, 131.5}]}]}, {
       LineBox[{{0.4807, 147.52}, {0.4717, 147.52}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4807, 147.52}], 
         Offset[{0, -1.5}, {0.4807, 147.52}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4717, 147.52}], 
         Offset[{0, -1.5}, {0.4717, 147.52}]}], 
       LineBox[{{0.4762, 147.54000000000002`}, {0.4762, 147.5}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4762, 147.54000000000002`}], 
         Offset[{-1.5, 0}, {0.4762, 147.54000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4762, 147.5}], 
         Offset[{-1.5, 0}, {0.4762, 147.5}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.24334000000000003`, 79.21600000000001},
  DisplayFunction->Identity,
  PlotRange->{{0.24334000000000003`, 0.5152600000000002}, {79.21600000000001, 
   158.22400000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[{{0.2674, 1.17}, {0.2976, 0.91}, {0.3344, 0.46}, {
          0.3676, -0.65}, {0.3774, -0.35}, {0.4202, -1.5}, {0.4367, -1.2}, {
          0.4762, -3.2}, {0.4878, -2.8}}], {{
           LineBox[{{0.2674, 1.6099999999999999`}, {0.2674, 0.73}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2674, 1.6099999999999999`}], 
             Offset[{-1.5, 0}, {0.2674, 1.6099999999999999`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2674, 0.73}], 
             Offset[{-1.5, 0}, {0.2674, 0.73}]}]}, {
           LineBox[{{0.2976, 1.48}, {0.2976, 0.3400000000000001}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2976, 1.48}], 
             Offset[{-1.5, 0}, {0.2976, 1.48}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2976, 0.3400000000000001}], 
             Offset[{-1.5, 0}, {0.2976, 0.3400000000000001}]}]}, {
           LineBox[{{0.3344, 1.16}, {0.3344, -0.23999999999999994`}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3344, 1.16}], 
             Offset[{-1.5, 0}, {0.3344, 1.16}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3344, -0.23999999999999994`}], 
             Offset[{-1.5, 0}, {0.3344, -0.23999999999999994`}]}]}, {
           LineBox[{{0.3676, 0.19999999999999996`}, {0.3676, -1.5}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3676, 0.19999999999999996`}], 
             Offset[{-1.5, 0}, {0.3676, 0.19999999999999996`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3676, -1.5}], 
             Offset[{-1.5, 0}, {0.3676, -1.5}]}]}, {
           LineBox[{{0.3774, 0.54}, {0.3774, -1.24}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3774, 0.54}], 
             Offset[{-1.5, 0}, {0.3774, 0.54}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3774, -1.24}], 
             Offset[{-1.5, 0}, {0.3774, -1.24}]}]}, {
           LineBox[{{0.4202, -0.3999999999999999}, {0.4202, -2.6}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4202, -0.3999999999999999}], 
             Offset[{-1.5, 0}, {0.4202, -0.3999999999999999}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4202, -2.6}], 
             Offset[{-1.5, 0}, {0.4202, -2.6}]}]}, {
           LineBox[{{0.4367, 0.}, {0.4367, -2.4}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4367, 0.}], 
             Offset[{-1.5, 0}, {0.4367, 0.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4367, -2.4}], 
             Offset[{-1.5, 0}, {0.4367, -2.4}]}]}, {
           LineBox[{{0.4762, -1.8000000000000003`}, {0.4762, -4.6}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4762, -1.8000000000000003`}], 
             Offset[{-1.5, 0}, {0.4762, -1.8000000000000003`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4762, -4.6}], 
             Offset[{-1.5, 0}, {0.4762, -4.6}]}]}, {
           LineBox[{{0.4878, -1.2999999999999998`}, {0.4878, -4.3}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4878, -1.2999999999999998`}], 
             Offset[{-1.5, 0}, {0.4878, -1.2999999999999998`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4878, -4.3}], 
             Offset[{-1.5, 0}, {0.4878, -4.3}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0.27, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.45200583378125*^9, 3.452007653984375*^9, 
  3.452255853296875*^9, 3.5145562720795*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"316.57`", ",", "0.76`"}], "}"}]}], ",", 
   RowBox[{"ChiSquared", "\[Rule]", "22.07908861757849`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "8"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452005833796875*^9, 3.452007654*^9, 3.4522558533125*^9, 
  3.514556272095125*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["This fit is awful.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["\<\
One of the difficulties here is that the errors in the data are sufficiently \
small that we are having some difficulty seeing exactly what is going on. But \
if Boyle\[CloseCurlyQuote]s law is true, then the value of pressure times \
volume should be exactly the same within errors for each datum. We form the \
product, including errors, and examine the result.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pv", "=", 
   RowBox[{"TimesWithError", "[", 
    RowBox[{"p", ",", "v"}], "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"vinv", ",", "pv"}], "}"}], "]"}], ",", " ", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.45200584778125*^9, {3.51455561223575*^9, 3.51455561917325*^9}},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{0.2674, 321.}, {0.2976, 319.6}, {0.3774, 315.7}, {0.4367, 
     313.8}, {0.4878, 310.8}, {0.3344, 317.9}, {0.3676, 314.8}, {0.4202, 
     313.}, {0.4762, 
     309.8}}], {{LineBox[{{0.26880000000000004`, 321.}, {0.266, 321.}}], 
      LineBox[{Offset[{0, 1.5}, {0.26880000000000004`, 321.}], 
        Offset[{0, -1.5}, {0.26880000000000004`, 321.}]}], 
      LineBox[{Offset[{0, 1.5}, {0.266, 321.}], 
        Offset[{0, -1.5}, {0.266, 321.}]}], 
      LineBox[{{0.2674, 322.7}, {0.2674, 319.3}}], 
      LineBox[{Offset[{1.5, 0}, {0.2674, 322.7}], 
        Offset[{-1.5, 0}, {0.2674, 322.7}]}], 
      LineBox[{Offset[{1.5, 0}, {0.2674, 319.3}], 
        Offset[{-1.5, 0}, {0.2674, 319.3}]}]}, {
      LineBox[{{0.2994, 319.6}, {0.29579999999999995`, 319.6}}], 
      LineBox[{Offset[{0, 1.5}, {0.2994, 319.6}], 
        Offset[{0, -1.5}, {0.2994, 319.6}]}], 
      LineBox[{Offset[{0, 1.5}, {0.29579999999999995`, 319.6}], 
        Offset[{0, -1.5}, {0.29579999999999995`, 319.6}]}], 
      LineBox[{{0.2976, 321.5}, {0.2976, 317.70000000000005`}}], 
      LineBox[{Offset[{1.5, 0}, {0.2976, 321.5}], 
        Offset[{-1.5, 0}, {0.2976, 321.5}]}], 
      LineBox[{Offset[{1.5, 0}, {0.2976, 317.70000000000005`}], 
        Offset[{-1.5, 0}, {0.2976, 317.70000000000005`}]}]}, {
      LineBox[{{0.38020000000000004`, 315.7}, {0.3746, 315.7}}], 
      LineBox[{Offset[{0, 1.5}, {0.38020000000000004`, 315.7}], 
        Offset[{0, -1.5}, {0.38020000000000004`, 315.7}]}], 
      LineBox[{Offset[{0, 1.5}, {0.3746, 315.7}], 
        Offset[{0, -1.5}, {0.3746, 315.7}]}], 
      LineBox[{{0.3774, 318.09999999999997`}, {0.3774, 313.3}}], 
      LineBox[{Offset[{1.5, 0}, {0.3774, 318.09999999999997`}], 
        Offset[{-1.5, 0}, {0.3774, 318.09999999999997`}]}], 
      LineBox[{Offset[{1.5, 0}, {0.3774, 313.3}], 
        Offset[{-1.5, 0}, {0.3774, 313.3}]}]}, {
      LineBox[{{0.4405, 313.8}, {0.43289999999999995`, 313.8}}], 
      LineBox[{Offset[{0, 1.5}, {0.4405, 313.8}], 
        Offset[{0, -1.5}, {0.4405, 313.8}]}], 
      LineBox[{Offset[{0, 1.5}, {0.43289999999999995`, 313.8}], 
        Offset[{0, -1.5}, {0.43289999999999995`, 313.8}]}], 
      LineBox[{{0.4367, 316.5}, {0.4367, 311.1}}], 
      LineBox[{Offset[{1.5, 0}, {0.4367, 316.5}], 
        Offset[{-1.5, 0}, {0.4367, 316.5}]}], 
      LineBox[{Offset[{1.5, 0}, {0.4367, 311.1}], 
        Offset[{-1.5, 0}, {0.4367, 311.1}]}]}, {
      LineBox[{{0.49260000000000004`, 310.8}, {0.483, 310.8}}], 
      LineBox[{Offset[{0, 1.5}, {0.49260000000000004`, 310.8}], 
        Offset[{0, -1.5}, {0.49260000000000004`, 310.8}]}], 
      LineBox[{Offset[{0, 1.5}, {0.483, 310.8}], 
        Offset[{0, -1.5}, {0.483, 310.8}]}], 
      LineBox[{{0.4878, 313.8}, {0.4878, 307.8}}], 
      LineBox[{Offset[{1.5, 0}, {0.4878, 313.8}], 
        Offset[{-1.5, 0}, {0.4878, 313.8}]}], 
      LineBox[{Offset[{1.5, 0}, {0.4878, 307.8}], 
        Offset[{-1.5, 0}, {0.4878, 307.8}]}]}, {
      LineBox[{{0.33659999999999995`, 317.9}, {0.3322, 317.9}}], 
      LineBox[{Offset[{0, 1.5}, {0.33659999999999995`, 317.9}], 
        Offset[{0, -1.5}, {0.33659999999999995`, 317.9}]}], 
      LineBox[{Offset[{0, 1.5}, {0.3322, 317.9}], 
        Offset[{0, -1.5}, {0.3322, 317.9}]}], 
      LineBox[{{0.3344, 320.}, {0.3344, 315.79999999999995`}}], 
      LineBox[{Offset[{1.5, 0}, {0.3344, 320.}], 
        Offset[{-1.5, 0}, {0.3344, 320.}]}], 
      LineBox[{Offset[{1.5, 0}, {0.3344, 315.79999999999995`}], 
        Offset[{-1.5, 0}, {0.3344, 315.79999999999995`}]}]}, {
      LineBox[{{0.37029999999999996`, 314.8}, {0.3649, 314.8}}], 
      LineBox[{Offset[{0, 1.5}, {0.37029999999999996`, 314.8}], 
        Offset[{0, -1.5}, {0.37029999999999996`, 314.8}]}], 
      LineBox[{Offset[{0, 1.5}, {0.3649, 314.8}], 
        Offset[{0, -1.5}, {0.3649, 314.8}]}], 
      LineBox[{{0.3676, 317.1}, {0.3676, 312.5}}], 
      LineBox[{Offset[{1.5, 0}, {0.3676, 317.1}], 
        Offset[{-1.5, 0}, {0.3676, 317.1}]}], 
      LineBox[{Offset[{1.5, 0}, {0.3676, 312.5}], 
        Offset[{-1.5, 0}, {0.3676, 312.5}]}]}, {
      LineBox[{{0.4237, 313.}, {0.4167, 313.}}], 
      LineBox[{Offset[{0, 1.5}, {0.4237, 313.}], 
        Offset[{0, -1.5}, {0.4237, 313.}]}], 
      LineBox[{Offset[{0, 1.5}, {0.4167, 313.}], 
        Offset[{0, -1.5}, {0.4167, 313.}]}], 
      LineBox[{{0.4202, 315.6}, {0.4202, 310.4}}], 
      LineBox[{Offset[{1.5, 0}, {0.4202, 315.6}], 
        Offset[{-1.5, 0}, {0.4202, 315.6}]}], 
      LineBox[{Offset[{1.5, 0}, {0.4202, 310.4}], 
        Offset[{-1.5, 0}, {0.4202, 310.4}]}]}, {
      LineBox[{{0.4807, 309.8}, {0.4717, 309.8}}], 
      LineBox[{Offset[{0, 1.5}, {0.4807, 309.8}], 
        Offset[{0, -1.5}, {0.4807, 309.8}]}], 
      LineBox[{Offset[{0, 1.5}, {0.4717, 309.8}], 
        Offset[{0, -1.5}, {0.4717, 309.8}]}], 
      LineBox[{{0.4762, 312.8}, {0.4762, 306.8}}], 
      LineBox[{Offset[{1.5, 0}, {0.4762, 312.8}], 
        Offset[{-1.5, 0}, {0.4762, 312.8}]}], 
      LineBox[{Offset[{1.5, 0}, {0.4762, 306.8}], 
        Offset[{-1.5, 0}, {0.4762, 306.8}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.27, 310.},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.452005848296875*^9, 3.452007654046875*^9, 
  3.4522558600625*^9, 3.51455561986075*^9, 3.51455628011075*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
The air sample for which this data is taken is inside a vertical glass tube. \
The top of the tube has been closed, and mercury fills the bottom part of the \
tube. The volume of air is deduced from the length of the tube containing the \
sample . However, the top of the tube has been closed in a sloppy fashion so \
the experimenter must guess the position of the top. If the guess is poor, a \
systematic error in the volume will be generated that can lead to data such \
as seen in the above plot. (The sloppiness in the closing of the top of the \
tube is by design for this experiment in a teaching laboratory.)\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["We fit this data to a line.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"vinv", ",", "pv"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV0Xs0lHkcBnArUYpuZtNZkkRb7UYH2SP1/SppK2MobLowTUtkS/zeqJBL
b2isoVK6HLbVRRum+2zpQnYiTDEuM4aZeVOprQbbbHuycbK//eM5z/mc8/z3
OIri10WZmpiY8Gn+7/n+Ls/nmCvhgV9DqPUUBg3Hrgq/t1BCtsu/IhPqql5v
Lm6cEvjjFuw2TmbQLU2gvW6pBG2zRKyi9rq5V4WTlPBpXVhNKbXf7OamzbZK
WLy172tX6ojP8TeK5itBmjZmRDCJwSOyO6yZQAmlMig7YsXgNcmGLWNLlVBv
91zdOJ7BLbub3ze+VsL+kgbX5eYMnnPez7NzawN+5lFfhSn1co/4ggNtsCM8
x2fCKMGFsXVsfUMbTA2oCRcPE0z8uKl15vR2GOPuKHzwkWBw+KIKs6h2sEmL
mWX2geBdebevtKodrvYaTcV/EdQXF1jvG2mHE97lT+UGgvmMbbGFfweYS0vv
wRuCqjk6qZOkA4rZlB8VfQS7fKpGhNoOSBBk/WP1nGB0RLC5yLkTVB6KSwV6
glWvTfxZphNYa1xZ302wwM9g41HXCevWnjpjrSY4crnil3JLFVSUedoUtxOc
vS9J6BOugsCB4T0dLQTbg3i6ojIVpIaM/RSsILissKbA2qiCv6XfbWcfE1xx
7oKSh2oQ/xQseSyn+5rIlme5aqj0q1IHPCRo7+c85olaDbZT3C2z7xM0Kh8Y
Ux27wHpoOGL0DkGRe1FCdWwXOC+/vFMsI5g3wrjMuN0FbEZWVNN1gtAyr3jJ
FxqI15Skr7lCsHL826XpQRo47/IiK72C4M3pr0hQqQaGVFZYX05wlassqu+V
BtS/pjjwzxM8Jj2Sf8azG0aF0/7MPUswzss3gZfeDTe8B9rMSgjqjn3z0q6h
G3KSpclHTxEcv8EpfyWvB85fOjm28zjBWueB94sieiDgw6NbPxwl6LZJ/jNU
9cBSD3tBgYTggtO7Xkz+2AN3JL9bWuQRfFgZ0hgPWggL8MoozCE4ea5/32C+
Fnw+P9M/PUjw3eUJ993VWqhsehLJzyCYfkLbdNJFB9F5LxszUulfoW+25zE6
wCvP+h/tJbh9ZlOt730dXOx38Fi7h2B3oEwwY6IeQmYd3nYogf6fm3T6Zqge
JDs9b43uJJhwIpHRlejhtX1Dbd4Ogn9M2M/ONehBXJd1SxFN8Kw4NMjTk4Pb
mZkK/jaCPhtPH0xZzEFjUr7bMmrNPE720IsDTdypooXUUxtj7AO9ORgOvbZ5
EjVrkfo2GjhYNr/X0CoiGMOWsSdXcyBvQ6sQarcDg7eHt3DQ6mQSuHErQQXf
w+AbyUGv7cTra6hj7fc55Ao5MFrZfrmEuuyeabbNNg6mDbnqv6K2Geat/zaG
gzBF5C6dkOBQsk9/RCIHWqZGIqQuWpU56wLhoD+22RhEvWh6/fp3DAefI9Rh
vtQ7ZILq5GQOHFYPzpxNrf0gyilM5UBk73DlRSTBvfLyalUaB2Tqgmkd1Lwi
Q79dOgeshVeynDrQPSnkt0wOLr4PhAvUb03v5gxmcSB7tfHcceqcttFqT5aD
hp5oi2zqOWV+AymHOOhqTYxLoq5NOOxYl83Bm0cHWqKp/wMKGFQc
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwV0Xs01GkcBvAJm1RHlzVLHWoJXbYtGtKW7fsqTbWnxv2UJTQlVNvEO5Fb
liamCypEtS6xbUcaJ7IStaNpNocSP8MMc3u1aVqaWLO13dj23T+e85zPOc9/
jyNfEBhtxmKxttP838u4rn84T2Vg1e7YQ3PNhchYcDNqiyUD/rC61JJa8nQt
OTCNgR8cLB5PmAmRW7qftn46A9cGype+oPZqOKpEsxhwCFQNtVD7Oj3qCLdj
wHIjNyyaOuJfwa3CZQzonJ23NE0RonONd0QWfgzk/EkcI1hCVJe3c9dnZQxk
mSsvCiYx2nX40Xj7CwacWoOe1H/AqMolhW3v1gOxcpbM/B31Bg9B/rEeCA5f
njL/DUYr4mSih209YCgio3wTRglvw7oX2Cpg4Z45S+LHMAoIda+xiFbAZFLC
l7lGjFrkap9aiQJ+XBHWpx7GSF+cb508oYCaozLeqAGjXKFdsSW3F1L21ok4
QxgpnXW1i/J64a/iruTspxj1e0smorS9MDPyIKdcj9G+iICpfJc+6Gw7Wz2s
wUjygsUVCfvAQ84Zet+PUb6v0cZD1gcbpk3V2yoxmrheU35tuhJev4osjFFg
5JScGOUdqgRezJpZ6d0YKfzZusJKJWzPKuHKOzFaf1aab21Swt9uSRuYDow2
Vl1l2EgF6xefmHzZRvfSyK5BsQpWSucfWfM7Rg6+LuadKhW0jayo+06GkYn5
zZTm2A/mTR3VeVKM+JzC+Oa4fjA8Lto9eBej0xNC13lN/XDoCNG9vYMRdC0t
XjdlAH6S3vzC5zZGN6xGvs3wH4CEUpaNfwNGDbYG7F82AEZZRvfBOow2r2yM
fm4YgJmnsre21GJUUHsu97KnGnqGZuR01WB0wMsnnp2hBnhql8muxkhXsHzI
vk0NAS4ha+N+wchq56LcTWwNWE3OasqqwqjVZXTcPUIDMYmBps4KjNzC5GdA
ooEDxz8f15di9NWlQ89mv9WAzarwG46XMbp/I7hdAFrYu6TXNaEEo9mLuc/H
crUQVt8RLS7C6OX1Gfc4Ki280W3Z3X0eo4wL2o4SVx14lW5y1OfTv0KGY04L
dbDw5/iK92cwilnQ0epzTweSbS5a7imM1LxGv3kz9TAo3qENzaH/ixMvNYTo
oXnfnItlIoziLyQIdaV6WHPmg814JkYPZqSIFhv1ELGJH2KVgVHFqRB/T08C
SyoCAoPSMPL+/tLx1NUEhOf3e22mHlhKGu97EZCKjtuvo57bHuvAW0tgR9yv
BidqkWXayD4gkL1qXqopFaNYUaWoZCuBZ/LBqnPUbsfGmj7uIlA2LHjTlYLR
4+0eRp9IAiMasfoBdZxD8kJxFIHVT65Ib1NX3jXLttlDoLNecbKc2uYjO+jr
WAITqV4LBNTvkrxfRSQQCLX+xLWmLtyc+eVVTOAqy265GbW77cOgl0IC4ya3
Of8kY7S/0a85KYmAWMXX6Ki1r/k5Z9MI3K54KJBQH5Vfa1amEzArIMFXqNmF
xlf2GQR4J959U0TN4yQGV2cSMMQts0inHjFryRnLIuAevnH4MHVOz6dmTxGB
dF74k73UzpW+o6knCLSjI7d2UrfGn3SUZRNgc/JKtlH/BwTyV6o=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwV0XtUjHkcBvC2TVHup0FOF90mkd2i0VL6fmuTsJpIq7ZtjEnRslvN71Wm
i9mYJbprkFjZnLRkuthMDEUkW9axb1PTbaYfVrKVHGVlt47dd/94znM+5zz/
PfaS+C0xxkZGRpu4/N9LAvnPnExZ2LCYv8bcjsHhwmpxkBkLt2bcWvy3LYOq
p6vpnqksLBvbbPmSs3u6UH/VnIU5DelD9zl71e7X4SwWOkM7TmdwDnB42Pr1
AhZi5Ip3720YFH2I/0W5hAW57lnVgDWDBeobChMhC9cUJQ73FzJYkxseNeUc
C+YrR3hO8xiMSnj4pmWAhbYU7wJ2DoMXnFN41u5tsNzXqVE5g7O/Z3zegTb4
/stnHyamMvhJ3F1F84M28DUuaaoxYVA6Hvm77XwtDBh7FFkYMbg5wqPCJEYL
Sw+KFqVOELzZ1ONXqdLCE+Ux91XjBPtO5c2UTWohYzIr+MwowRxmwSmzwHY4
Pp71duMIQZ2TodIxtx18E12EcwcJdvmoJsX6dtBBUV1aP8FY0WZTiXMH0J/M
fhY8JagaMApUMB3QHv7FxeN6gnkBw5aedztAkusWMaWL4OTlipJycx1Itlko
m7UEHWRJYp8IHQTvu61f+pigNoRnUJbqoIIvVdFWgr75t/NmjupgzO2fLK9m
gp9fKGN52Am6Ghu7skZuf3v74yeZneDaCqt31BO0CXD++FFnJ8R5eUU3Xic4
yjaMptl3gdVnyywTaglKVigTNXFdsLOuQeZZTTBrkuFbXe+C4iznV2crCMJj
11PeH3WD/9ixl6HlBK9MG1wjD+kGXdX9N5WlBGvnvyAh57rBZOhMld05gus+
Vcf0v+iG0hsJf/WdJlhYWZBzRtADboaF6/1PENzj5ZfIk/eAi/Ke09t8goZC
t+fWD3qgvsXs2s1sgtPCHXPW8noBttqHumQSvOM88sZD1Ase0lWyp4cIukc2
ZYOqF2b181UgJ7i0+Ls/Zo/3gmhobtxwCsHGK1tb4kEPQQnF3ZVJBGe7BPa/
ztGDzYbxbTwpwaHLFvUrOvUQXbdF1PotQflJfWsR3wAnZIekjnHcX2F/7spi
DLBDI/Q+vpPgLtvWO371BijJXZgtFBPsCVYLrab3wa91msHqSO7/zKTi2rA+
kDARrHgbwcSTUsbwYx+crCrcyw8leM8iReEy3AdquMDLDyZ4/lhYiEBAISi6
JjBoA0Gfr4oPpa6kYBtZ7Srg3O1K1Y1eFMa2VE134Dy3ZbdN8GoKJf6qton1
BBVmaYOxQOGd/SVRFefdilJF0XoKZU/OJ83j7H7g9fWJKArGovyLz9cR/G2T
57DfdgpdYXlHWc5xNjK7TDGFyk25exs4l94yPmwZTSFiTfbyIs6WE7zQZbsp
VFtnNmzk/D7Z55VISmF7r1x3NZCgcl3GojJCQaA9cKOEs8f85tAhhoLFw/Sz
2Zy/UQs1yckU1JpUSSxn/VvJkfw0CjOKk0esOO9vKtfo0ik8L0hiTTnzlMOv
rOUUNEf31Y6tJRi8ImnrpQwKsTKS8ojzoPHNI68PUvBOlEZpOB9p+1cjUFCY
E5eI5ZydSgNGUn+gMCBOcFRyvpN41P7uYQr14fGmGZz/A9QfS5M=
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{0.2674, 321.}, {0.2976, 319.6}, {0.3774, 315.7}, {0.4367, 
      313.8}, {0.4878, 310.8}, {0.3344, 317.9}, {0.3676, 314.8}, {0.4202, 
      313.}, {0.4762, 
      309.8}}], {{LineBox[{{0.26880000000000004`, 321.}, {0.266, 321.}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.26880000000000004`, 321.}], 
         Offset[{0, -1.5}, {0.26880000000000004`, 321.}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.266, 321.}], Offset[{0, -1.5}, {0.266, 321.}]}], 
       LineBox[{{0.2674, 322.7}, {0.2674, 319.3}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2674, 322.7}], 
         Offset[{-1.5, 0}, {0.2674, 322.7}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2674, 319.3}], 
         Offset[{-1.5, 0}, {0.2674, 319.3}]}]}, {
       LineBox[{{0.2994, 319.6}, {0.29579999999999995`, 319.6}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.2994, 319.6}], 
         Offset[{0, -1.5}, {0.2994, 319.6}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.29579999999999995`, 319.6}], 
         Offset[{0, -1.5}, {0.29579999999999995`, 319.6}]}], 
       LineBox[{{0.2976, 321.5}, {0.2976, 317.70000000000005`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2976, 321.5}], 
         Offset[{-1.5, 0}, {0.2976, 321.5}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2976, 317.70000000000005`}], 
         Offset[{-1.5, 0}, {0.2976, 317.70000000000005`}]}]}, {
       LineBox[{{0.38020000000000004`, 315.7}, {0.3746, 315.7}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.38020000000000004`, 315.7}], 
         Offset[{0, -1.5}, {0.38020000000000004`, 315.7}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3746, 315.7}], 
         Offset[{0, -1.5}, {0.3746, 315.7}]}], 
       LineBox[{{0.3774, 318.09999999999997`}, {0.3774, 313.3}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3774, 318.09999999999997`}], 
         Offset[{-1.5, 0}, {0.3774, 318.09999999999997`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3774, 313.3}], 
         Offset[{-1.5, 0}, {0.3774, 313.3}]}]}, {
       LineBox[{{0.4405, 313.8}, {0.43289999999999995`, 313.8}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4405, 313.8}], 
         Offset[{0, -1.5}, {0.4405, 313.8}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.43289999999999995`, 313.8}], 
         Offset[{0, -1.5}, {0.43289999999999995`, 313.8}]}], 
       LineBox[{{0.4367, 316.5}, {0.4367, 311.1}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4367, 316.5}], 
         Offset[{-1.5, 0}, {0.4367, 316.5}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4367, 311.1}], 
         Offset[{-1.5, 0}, {0.4367, 311.1}]}]}, {
       LineBox[{{0.49260000000000004`, 310.8}, {0.483, 310.8}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.49260000000000004`, 310.8}], 
         Offset[{0, -1.5}, {0.49260000000000004`, 310.8}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.483, 310.8}], Offset[{0, -1.5}, {0.483, 310.8}]}],
        LineBox[{{0.4878, 313.8}, {0.4878, 307.8}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4878, 313.8}], 
         Offset[{-1.5, 0}, {0.4878, 313.8}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4878, 307.8}], 
         Offset[{-1.5, 0}, {0.4878, 307.8}]}]}, {
       LineBox[{{0.33659999999999995`, 317.9}, {0.3322, 317.9}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.33659999999999995`, 317.9}], 
         Offset[{0, -1.5}, {0.33659999999999995`, 317.9}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3322, 317.9}], 
         Offset[{0, -1.5}, {0.3322, 317.9}]}], 
       LineBox[{{0.3344, 320.}, {0.3344, 315.79999999999995`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3344, 320.}], Offset[{-1.5, 0}, {0.3344, 320.}]}],
        LineBox[{
        Offset[{1.5, 0}, {0.3344, 315.79999999999995`}], 
         Offset[{-1.5, 0}, {0.3344, 315.79999999999995`}]}]}, {
       LineBox[{{0.37029999999999996`, 314.8}, {0.3649, 314.8}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.37029999999999996`, 314.8}], 
         Offset[{0, -1.5}, {0.37029999999999996`, 314.8}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3649, 314.8}], 
         Offset[{0, -1.5}, {0.3649, 314.8}]}], 
       LineBox[{{0.3676, 317.1}, {0.3676, 312.5}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3676, 317.1}], 
         Offset[{-1.5, 0}, {0.3676, 317.1}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3676, 312.5}], 
         Offset[{-1.5, 0}, {0.3676, 312.5}]}]}, {
       LineBox[{{0.4237, 313.}, {0.4167, 313.}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4237, 313.}], Offset[{0, -1.5}, {0.4237, 313.}]}],
        LineBox[{
        Offset[{0, 1.5}, {0.4167, 313.}], Offset[{0, -1.5}, {0.4167, 313.}]}],
        LineBox[{{0.4202, 315.6}, {0.4202, 310.4}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4202, 315.6}], 
         Offset[{-1.5, 0}, {0.4202, 315.6}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4202, 310.4}], 
         Offset[{-1.5, 0}, {0.4202, 310.4}]}]}, {
       LineBox[{{0.4807, 309.8}, {0.4717, 309.8}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4807, 309.8}], 
         Offset[{0, -1.5}, {0.4807, 309.8}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4717, 309.8}], 
         Offset[{0, -1.5}, {0.4717, 309.8}]}], 
       LineBox[{{0.4762, 312.8}, {0.4762, 306.8}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4762, 312.8}], 
         Offset[{-1.5, 0}, {0.4762, 312.8}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4762, 306.8}], 
         Offset[{-1.5, 0}, {0.4762, 306.8}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.24334000000000003`, 305.21000000000004`},
  DisplayFunction->Identity,
  PlotRange->{{0.24334000000000003`, 0.5152600000000002}, {
   305.21000000000004`, 324.29}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[{{0.2674, 0.}, {0.2976, 0.1}, {0.3344, 0.2}, {
          0.3676, -1.3}, {0.3774, 0.1}, {0.4202, -0.5}, {0.4367, 1.1}, {
          0.4762, -1.}, {0.4878, 0.6}}], {{
           LineBox[{{0.2674, 1.7}, {0.2674, -1.7}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2674, 1.7}], 
             Offset[{-1.5, 0}, {0.2674, 1.7}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2674, -1.7}], 
             Offset[{-1.5, 0}, {0.2674, -1.7}]}]}, {
           LineBox[{{0.2976, 2.}, {0.2976, -1.7999999999999998`}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2976, 2.}], 
             Offset[{-1.5, 0}, {0.2976, 2.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2976, -1.7999999999999998`}], 
             Offset[{-1.5, 0}, {0.2976, -1.7999999999999998`}]}]}, {
           
           LineBox[{{0.3344, 2.3000000000000003`}, {
            0.3344, -1.9000000000000001`}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3344, 2.3000000000000003`}], 
             Offset[{-1.5, 0}, {0.3344, 2.3000000000000003`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3344, -1.9000000000000001`}], 
             Offset[{-1.5, 0}, {0.3344, -1.9000000000000001`}]}]}, {
           
           LineBox[{{0.3676, 0.9999999999999998}, {
            0.3676, -3.5999999999999996`}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3676, 0.9999999999999998}], 
             Offset[{-1.5, 0}, {0.3676, 0.9999999999999998}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3676, -3.5999999999999996`}], 
             Offset[{-1.5, 0}, {0.3676, -3.5999999999999996`}]}]}, {
           LineBox[{{0.3774, 2.5}, {0.3774, -2.3}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3774, 2.5}], 
             Offset[{-1.5, 0}, {0.3774, 2.5}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3774, -2.3}], 
             Offset[{-1.5, 0}, {0.3774, -2.3}]}]}, {
           LineBox[{{0.4202, 2.1}, {0.4202, -3.1}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4202, 2.1}], 
             Offset[{-1.5, 0}, {0.4202, 2.1}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4202, -3.1}], 
             Offset[{-1.5, 0}, {0.4202, -3.1}]}]}, {
           LineBox[{{0.4367, 3.8000000000000003`}, {0.4367, -1.6}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4367, 3.8000000000000003`}], 
             Offset[{-1.5, 0}, {0.4367, 3.8000000000000003`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4367, -1.6}], 
             Offset[{-1.5, 0}, {0.4367, -1.6}]}]}, {
           LineBox[{{0.4762, 2.}, {0.4762, -4.}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4762, 2.}], 
             Offset[{-1.5, 0}, {0.4762, 2.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4762, -4.}], 
             Offset[{-1.5, 0}, {0.4762, -4.}]}]}, {
           LineBox[{{0.4878, 3.6}, {0.4878, -2.4}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4878, 3.6}], 
             Offset[{-1.5, 0}, {0.4878, 3.6}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4878, -2.4}], 
             Offset[{-1.5, 0}, {0.4878, -2.4}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0.27, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452005852515625*^9, 3.452007654140625*^9, 
  3.45225586340625*^9, 3.51455628423575*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"334.1`", ",", "3.8`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "49.`"}], ",", "11.`"}], "}"}]}], ",", 
   RowBox[{"ChiSquared", "\[Rule]", "0.6602242705685203`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "7"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452005852546875*^9, 3.45200765415625*^9, 
  3.452255863421875*^9, 3.514556284251375*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell["\<\
The intercept corresponds to the value of pressure times volume when the \
inverse of the volume is zero. This is the value for infinite volume, when \
this systematic effect should become zero.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "We can find the correction needed for the volume data by realizing that \
there is some value for ",
 StyleBox["c",
  FontSlant->"Italic"],
 " for which the following is true."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"p", " ", "*", " ", 
   RowBox[{
    StyleBox["(",
     FontSlant->"Plain"], 
    RowBox[{"v", " ", "+", " ", "c"}], 
    StyleBox[")",
     FontSlant->"Plain"]}]}], 
  StyleBox[" ",
   FontSlant->"Plain"], "=", " ", "334"}]], "DisplayMath",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["We rearrange the equation.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{
   FractionBox["334", "p"], "-", "v"}]}]], "DisplayFormula",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["The mean over all the data points is given by the following.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"First", "/@", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["334", "p"], "-", "v"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.452004567*^9, 3.4520045703125*^9}},
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData["0.1554407144344921`"], "Output",
 CellChangeTimes->{3.45200585696875*^9, 3.452007654171875*^9, 
  3.514556294251375*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "Thus, the volumes are systematically too low by .155 ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cm", "3"], TraditionalForm]]],
 ". We add this figure to the volume data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newv", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#1", "]"}], "+", ".155"}], ",", 
        RowBox[{"Last", "[", "#1", "]"}]}], "}"}], "&"}], ")"}], "/@", 
    "v"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell["Next we recalculate the inverse of the volume.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newvinv", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"Data", "[", "newv", "]"}]], "/.", 
    RowBox[{"Data", "\[Rule]", "Identity"}]}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[TextData[{
 "Finally, we repeat the fit of ",
 StyleBox["p", "MR"],
 " versus the inverse of",
 StyleBox[" ",
  FontSlant->"Italic"],
 StyleBox["v", "MR"],
 " to a line with zero intercept."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"newvinv", ",", "p"}], "}"}], "]"}], ",", 
   RowBox[{"{", "1", "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVkHs0lAkchiddUEojRLqwmVw6WSVF4vdzi3LZpDFjZsztO6umLLrsRsYl
p6ay7FQq6bItm1sXStjKRBPZjlQz0zAzzJfKJo7VmlKqRTv7x3ve8/zznvO8
TsKULd+bUCiUKGP+b7f2sKB0pgLkVemrk2PpuPtHaUJmvAL8llOPybfSUeao
STvAUkD91coh6zg6Ru9LrDnKUUBljaa0kUnHvc6HFp7lK0Ba700159KxKev+
xzvbFcCRG4Z/307HrV7+V8bTFPBJK6rQZdIx+/wq65xiBXiYsRaEVtIxqP3K
0q+9CnjllPciYFocRlQnocpJCYmPZm92ZMVhjPurpyyhEtbM883YUh2HrVP6
z7MrlRBtWyepMGegWLpy3/VBJayuyvX7i8vAkrRZ0kxPFQjHflMENzKw5XOx
PeUnFej7Ep1GbZjovjL1RleDCmj8HIf8HUycbFFLaBMqqC8a/LChjYl2sw+I
HgY8AxteefqgQzx++/Zlk2P2M5C3zrytT4nHm+7KGEPrM2h43aR91x6P4kVm
72xmqCHtdFvJyBIW1u58/LQ2Ug25JosjqGIWvo4Jc5x+Qg06i0XXc7tYmPDW
LOuKSg0T5SlNPe5sDOpn2rfbdcKOceo1hoSNSSdH5OtZnVD20jS0sYeNU3+1
rXQp6QTX3Ki7gT4cLAID5WF/J4zdW2ewK+TgrqJ522QuXXBKmvFE84aDtza1
znRL7gKxvUX+7eAEDKmTNQ7WdMFKr5F3ucUJ+Lhe1MsbMfJQhs2F4QRssSrD
6DUa2M9l2HWHc3GS5lpzbJ8GjgskrZMXuFh+0pcd0aQBw5LpMRu+cDHi3Nf0
xqlaOC9eXvx8Kw/XMGeXZ4dowVZUlset4uEvqVWWsjwt/HBkbXWOCR+XQ4Ek
skML3s5tQ6Er+PigjJZ6wkIHzlLXw14MPnZsiyzavEUHDZraE7UH+Wj34s4j
YaEOPAf6d9Nq+Ki8+Yf/sE4HUV1BLW4kHxX+47JHDt0Qmx8+4GQmwA7eh2oe
pxuyqN/sDFolQG9S/HxnaTdE713KHeUJsG9upENHXzdMu/iEdjZPgJMXq05d
cu8BXkVJgvKWAG3/bMxdldoDvVnh7z37Bbjnkk2m9Y0eCFtcnHBwrhD9yYm6
5LEeiD1H9REFCDGqY8WXhb562PDC602gSIisWKvanHQ98EfdRoMKhaj2PlTB
adbDov6wXZ33hFj4BC7nU0i4f9GyhT0kxP0y6d2aKSSMtlResv9biPzLvQqV
CQm0gUCJxsgekuwxu+kkHPHcuzH2rRDb/ZtDysxJ+E6ufbrJIETKtYDeu1Yk
9Lwq0fuOCTHpZ3/rf5xJeE9b/XH+VAJj0wtcrJYZ9zY91nQaed02cp23CwmM
5MTbhdMINA3OFGS4kXCn4YzYcgaBpV9k1aYeJOSETZiYmhOoFa3f6LiWBAtR
m+XHOQQ2M/I5wT4kBBTwDDctCSwP1ack+pKQcuOTatdcAvc4iU9f9SNB9dn9
9DCVwDm6xj4fJOFMnnTha2sCP7TNGmMHktBe7TpZakOgvo49MzuIhHGVvJdv
S+DlY/96PgghgecwWqqfT+DxrIiQgVASjkPBwbN2BKYlnWPMCjP+RyxLZNoT
yGUN7fAIN/oebg6zXUBgaLhfVsxGo+9VppvayP8BHVNHQg==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVy30w1Akcx/Hd8iwSkk7drOlho8mhI0Tfr02H7LpbWdY+72/nKnG1rvKQ
h1UNpytH6jjV1FF6RkVlsvRA6jzuYtnFL6stx5TQjVOKzv3xmfe8/vg4E/si
flxAoVBY8/u/Ls3BjBSuCvy3B1MXBHPw54N5wvQYFWQnuhdFhnBQSetNPsxT
QUfp8g1XQjkYnrSz8phABcSnN1wmk4MHVmetOCNRQc7N/FuFbA7WZzz598Fu
FXRZ94nXCzgYuTHgxudkFcR1xddHJnBQcc7TPrNYBX8IClKvnOUgo/nGqi+D
KngpnSuPm+ZgWEU8djqroaHkmoMTKwrZri87eIQaqJXfeq8oicJG6vA5/lU1
uFXqrfw/R2FankfSrVE1TIy2OAWzo7Ek2TIv3b0T/lymHZKXR2PDx+LllMRO
qLBtFL015aKrh/x2z71OiAgZX7JDwMW5hu7sNbOdYJBvTtfe56Kj1eHY51u6
wLK76etQqxj85t1QPU3RBSeNPJMspTFY5apmTzZ2gcm6+l/e1sZg2kqz90tN
usEm+1h7jQ0P78S1ddxhdoNp78G2i/E8fM0OphkXdINwKvCovomHwndmGTc6
uyEknLXPzImPjGHu8mZHDTifSbH7PpGP8acnHvvzNJBPez2W2cLHhecdrtJL
NDBWnJCppguwCCYpz4c1cFVP/rX/iAATiux2Kek98FF6LJTaK8Ca7Y0WLnt7
wLeHc7jcU4hB1cra0coesM6SjgflCLHtbuygeKIHkMqydxsQYoNtGYZ79wIh
j5n02iTCuTXrKvOTesHxqzIjlxMivHzalx9W3wt195ao/EZEGHb2S0rtQi08
ookizjPE6M21uqwI0gL36ajFWKEYf5NfW6z8VQtDgsJU3nsxrofcbGarFjKW
BZ7UrZLg07I18oJFOvD/e+2jCpYEW3cxi36I0IHcfWWYXaoEHfUPWohTOhh3
2JjwU5kE1VX3A8Z0OnidGPNPVJcEVQGflS1OfUA/cMHGe27+L56qEAv6YBmX
Y75lnRS9yLQXcaV9oLjrJNJwpGiwYTq1GvrA4xY1nMiU4tyFa79fcu0H/uoP
xRkVUnR4VnvEU94PngrR44Z+Ke6/tDTd/nY/cJJeHZ0zJjCAnK3eO90PEyOH
Sp9vJJDVumFmhe8AaKbdBTkiAnk7bO9kpgxA7FjUpDyHwG6vrCuChwNwQJD7
cuQugafa4foJCgktuw17o/QEHlLm1VVSSdhTqx+yGyJQcn1Q1bmABDPrF5Hq
ebtlK6YdjUn4rkrrxzQQ2BzwMKjMnIQns20mjGECKeVbButsSagpqDm/4S2B
8ccD7MdXk3BJmdtu9IHAHSm5dNu1JAQtPh74ZN5+u0g/LzoJBmlOteIjgaZb
06WpLiQ4mx49MzNDYOmMssLUjYRz7OSdE7MEamP9Q2mbSCgYJub6F8rwYfQJ
wVYfEjx8JQnFRjK8vG1g305fEjqOC19FGctwv3Na4c3NJFh5cJvVJjK01tUa
fJCEnFRW4TNzGU41WU7zA0mgt283z7KQ4UA130LBIOEZLSSNYSnD6/mf3J8G
kWDUxCDqFsnwZEZY0Mg2Ei46ouaQlQyT489GWwaTwIgLCPGxlqGI92aPWwgJ
+jq/2ql5bwvZnMEOJUFh4+NWtViG/wEZ+UD5
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVz39cywkcx/HJg9MvMUkkGtulOVEelWQ+n8tUbuVxybS2tbZ9T1OSEtei
NjwqIkKujjx4iJKhTj/8qNnoh+sqbFm/Vl+pTo9zXFd3j37o5+3++Dw+j+cf
7z9eNOnBXXvNKBRKkOn+/y4N/r5JPB34md+XGSO4eOhIVnhKmA4Gu4dOu0q4
qHZqk5/g6yDvkZfqpJSLOxMjSzKEOhggaj4z93LxMD1t+VWxDnI0xvhj0VzU
KKpHKvfp4EOCefLyI1zcvZF1b1Kug7R3kRdEZ7iovOZue/yKDmrLaE97y7no
23Bv9Uy3Dnp7Fi+iLtyDnOIYbKbpwXw4PoMh24PBzN43fKke9ieynp+u2oO1
s/qvCYr0EJtyaoa6JBSTs9wSf/moB/k+b8GJmFC8KbfMStnQDPS2KK3db6FY
8+XKUsqPzWBRYf77xGoeMt3iHrY+aoaxxIWMOjkPp2sM6YypZjilyY2tMPDQ
3vpEVP3Wt7DyzzRDBjMM1w/0aJyUb2EotW/8gSIMy5j64KHatxB5S+vypSMM
kx3n/bN4rgHeF84+smY9H0v3v3pTGmiAqXUv6xVn+fgh2N9pziUDcOljXfR+
PoYPzFPcazZA6cxF65LNAvTt5y1tsG+BMpHKT5wjwJjLgy+28FugMp95bfiT
AGdftytyvtkCRLTL+MMAIebCEKW+vwX8bubaa24JMT53kUzt3Apuzw6EFI8J
8cl3tRYusa2gFVbn1O0OR3a5uupjSSvs7lGMPFeF46uKqO6IwVZY1aKys5oJ
xxpqAe70bINLgVxQ8EU4zVhTciGxDSzuylINJSIsvOwt4GjagJExpg+2ikBO
3kxS1ex2kLePda+QRaAnz7pQyW4Hg5XEQlcVgefj7tqoz7RDdO+tFQZLMa6F
c+mBTe3weQPHr9RTjHUFjLhLVh1g5cXc+UQsxiZZYO73uzpgUhFgDD4vRvv3
lY3S7A6If3r1MPlEjPqyx6y/OjqgwuOb7Ml+MepYk+pGByMobw9prakSbIoY
Lo4QGuFDw0CT3xYJepDJ7/bnG8Fx41rRomgJ9i0IdGjqM0Lbubwp/WUJTt+4
+9NtZicQTA6NXiNBu1+rTrrHdUKmwp1xfVCCCbcXp9g+7ATvuiAvCwcpssip
8tjRTngUVPTKfIcUg5rWjS/37oLH9Z6HJhKkyA+hlh5P6oLQickR2+tSNHik
3RFqu+DlQTNKdaMUs1+DKpNCwtNWnyWSESkeVWc9K5lFgqIpTrZyVIpiVbeu
2YwE3+qCx6TJrunKUfs5JDQ8sOHxv0ixgaVlF5iT0JXa93PIpBQpD7Z2P6OS
MO1+dpmfGYExZ1m2f9NN+yyj49r5BIYknXOmfk3C3DSb2I8mb5aRmz2cSWg8
ytbcsSHwq20pkmMuJIREFovoCwnMH1cXf+VKwg+skzccbQlsj9qyw8mLhPRP
LrQFywjUhmYKt20igdMjin9tcuH2roOR3iTYtGW/yHQgMIGWnHPfh4Tc6imJ
uSOB8zuq+jYhCUVX9PlmTgQOv7QcFXxLwoGsuf8+N7mrXGCh9CXBLc1nm5JG
oOrCxIY6NgmVcQV9E6sIvKjgsP/YToIy0rixcjWB8pi8UEt/U5/QJlVOJ1DE
/xTtGmDq28U2eDII3B7gowjeYerzT6IPm/wfVPFIXw==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{0.2567, 85.82}, {0.2845, 95.12}, {0.3565, 119.12}, {0.409, 
      137.02}, {0.4535, 151.62}, {0.318, 106.32}, {0.3478, 115.72}, {0.3945, 
      131.52}, {0.4435, 
      147.52}}], {{LineBox[{{0.258, 85.82}, {0.25539999999999996`, 85.82}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.258, 85.82}], Offset[{0, -1.5}, {0.258, 85.82}]}],
        LineBox[{
        Offset[{0, 1.5}, {0.25539999999999996`, 85.82}], 
         Offset[{0, -1.5}, {0.25539999999999996`, 85.82}]}], 
       LineBox[{{0.2567, 85.83999999999999}, {0.2567, 85.8}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2567, 85.83999999999999}], 
         Offset[{-1.5, 0}, {0.2567, 85.83999999999999}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2567, 85.8}], 
         Offset[{-1.5, 0}, {0.2567, 85.8}]}]}, {
       LineBox[{{0.28609999999999997`, 95.12}, {0.2829, 95.12}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.28609999999999997`, 95.12}], 
         Offset[{0, -1.5}, {0.28609999999999997`, 95.12}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.2829, 95.12}], 
         Offset[{0, -1.5}, {0.2829, 95.12}]}], 
       LineBox[{{0.2845, 95.14}, {0.2845, 95.10000000000001}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2845, 95.14}], 
         Offset[{-1.5, 0}, {0.2845, 95.14}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2845, 95.10000000000001}], 
         Offset[{-1.5, 0}, {0.2845, 95.10000000000001}]}]}, {
       LineBox[{{0.359, 119.12}, {0.354, 119.12}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.359, 119.12}], 
         Offset[{0, -1.5}, {0.359, 119.12}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.354, 119.12}], 
         Offset[{0, -1.5}, {0.354, 119.12}]}], 
       LineBox[{{0.3565, 119.14}, {0.3565, 119.10000000000001`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3565, 119.14}], 
         Offset[{-1.5, 0}, {0.3565, 119.14}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3565, 119.10000000000001`}], 
         Offset[{-1.5, 0}, {0.3565, 119.10000000000001`}]}]}, {
       LineBox[{{0.4123, 137.02}, {0.40569999999999995`, 137.02}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4123, 137.02}], 
         Offset[{0, -1.5}, {0.4123, 137.02}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.40569999999999995`, 137.02}], 
         Offset[{0, -1.5}, {0.40569999999999995`, 137.02}]}], 
       LineBox[{{0.409, 137.04000000000002`}, {0.409, 137.}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.409, 137.04000000000002`}], 
         Offset[{-1.5, 0}, {0.409, 137.04000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.409, 137.}], 
         Offset[{-1.5, 0}, {0.409, 137.}]}]}, {
       LineBox[{{0.4576, 151.62}, {0.4494, 151.62}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4576, 151.62}], 
         Offset[{0, -1.5}, {0.4576, 151.62}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4494, 151.62}], 
         Offset[{0, -1.5}, {0.4494, 151.62}]}], 
       LineBox[{{0.4535, 151.64000000000001`}, {0.4535, 151.6}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4535, 151.64000000000001`}], 
         Offset[{-1.5, 0}, {0.4535, 151.64000000000001`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4535, 151.6}], 
         Offset[{-1.5, 0}, {0.4535, 151.6}]}]}, {
       LineBox[{{0.32, 106.32}, {0.316, 106.32}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.32, 106.32}], Offset[{0, -1.5}, {0.32, 106.32}]}],
        LineBox[{
        Offset[{0, 1.5}, {0.316, 106.32}], 
         Offset[{0, -1.5}, {0.316, 106.32}]}], 
       LineBox[{{0.318, 106.33999999999999`}, {0.318, 106.3}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.318, 106.33999999999999`}], 
         Offset[{-1.5, 0}, {0.318, 106.33999999999999`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.318, 106.3}], 
         Offset[{-1.5, 0}, {0.318, 106.3}]}]}, {
       LineBox[{{0.3502, 115.72}, {0.3454, 115.72}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3502, 115.72}], 
         Offset[{0, -1.5}, {0.3502, 115.72}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3454, 115.72}], 
         Offset[{0, -1.5}, {0.3454, 115.72}]}], 
       LineBox[{{0.3478, 115.74}, {0.3478, 115.7}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3478, 115.74}], 
         Offset[{-1.5, 0}, {0.3478, 115.74}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3478, 115.7}], 
         Offset[{-1.5, 0}, {0.3478, 115.7}]}]}, {
       LineBox[{{0.3976, 131.52}, {0.3914, 131.52}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3976, 131.52}], 
         Offset[{0, -1.5}, {0.3976, 131.52}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.3914, 131.52}], 
         Offset[{0, -1.5}, {0.3914, 131.52}]}], 
       LineBox[{{0.3945, 131.54000000000002`}, {0.3945, 131.5}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3945, 131.54000000000002`}], 
         Offset[{-1.5, 0}, {0.3945, 131.54000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.3945, 131.5}], 
         Offset[{-1.5, 0}, {0.3945, 131.5}]}]}, {
       LineBox[{{0.4474, 147.52}, {0.4396, 147.52}}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4474, 147.52}], 
         Offset[{0, -1.5}, {0.4474, 147.52}]}], 
       LineBox[{
        Offset[{0, 1.5}, {0.4396, 147.52}], 
         Offset[{0, -1.5}, {0.4396, 147.52}]}], 
       LineBox[{{0.4435, 147.54000000000002`}, {0.4435, 147.5}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4435, 147.54000000000002`}], 
         Offset[{-1.5, 0}, {0.4435, 147.54000000000002`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.4435, 147.5}], 
         Offset[{-1.5, 0}, {0.4435, 147.5}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0.23517999999999997`, 79.21600000000001},
  DisplayFunction->Identity,
  PlotRange->{{0.23517999999999997`, 0.47782}, {79.21600000000001, 
   158.22400000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[{{0.2567, 0.08}, {0.2845, 0.1}, {0.318, 0.11}, {
          0.3478, -0.45}, {0.3565, 0.05}, {0.3945, -0.2}, {0.409, 0.4}, {
          0.4435, -0.6}, {0.4535, 0.2}}], {{
           LineBox[{{0.2567, 0.51}, {0.2567, -0.35}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2567, 0.51}], 
             Offset[{-1.5, 0}, {0.2567, 0.51}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2567, -0.35}], 
             Offset[{-1.5, 0}, {0.2567, -0.35}]}]}, {
           LineBox[{{0.2845, 0.63}, {0.2845, -0.43000000000000005`}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2845, 0.63}], 
             Offset[{-1.5, 0}, {0.2845, 0.63}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.2845, -0.43000000000000005`}], 
             Offset[{-1.5, 0}, {0.2845, -0.43000000000000005`}]}]}, {
           LineBox[{{0.318, 0.78}, {0.318, -0.56}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.318, 0.78}], 
             Offset[{-1.5, 0}, {0.318, 0.78}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.318, -0.56}], 
             Offset[{-1.5, 0}, {0.318, -0.56}]}]}, {
           LineBox[{{0.3478, 0.35000000000000003`}, {0.3478, -1.25}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3478, 0.35000000000000003`}], 
             Offset[{-1.5, 0}, {0.3478, 0.35000000000000003`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3478, -1.25}], 
             Offset[{-1.5, 0}, {0.3478, -1.25}]}]}, {
           LineBox[{{0.3565, 0.89}, {0.3565, -0.7899999999999999}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3565, 0.89}], 
             Offset[{-1.5, 0}, {0.3565, 0.89}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3565, -0.7899999999999999}], 
             Offset[{-1.5, 0}, {0.3565, -0.7899999999999999}]}]}, {
           LineBox[{{0.3945, 0.8}, {0.3945, -1.2}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3945, 0.8}], 
             Offset[{-1.5, 0}, {0.3945, 0.8}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.3945, -1.2}], 
             Offset[{-1.5, 0}, {0.3945, -1.2}]}]}, {
           LineBox[{{0.409, 1.5}, {0.409, -0.7000000000000001}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.409, 1.5}], 
             Offset[{-1.5, 0}, {0.409, 1.5}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.409, -0.7000000000000001}], 
             Offset[{-1.5, 0}, {0.409, -0.7000000000000001}]}]}, {
           LineBox[{{0.4435, 0.7000000000000001}, {0.4435, -1.9}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4435, 0.7000000000000001}], 
             Offset[{-1.5, 0}, {0.4435, 0.7000000000000001}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4435, -1.9}], 
             Offset[{-1.5, 0}, {0.4435, -1.9}]}]}, {
           LineBox[{{0.4535, 1.5999999999999999`}, {0.4535, -1.2}}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4535, 1.5999999999999999`}], 
             Offset[{-1.5, 0}, {0.4535, 1.5999999999999999`}]}], 
           LineBox[{
             Offset[{1.5, 0}, {0.4535, -1.2}], 
             Offset[{-1.5, 0}, {0.4535, -1.2}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0.26, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452005865390625*^9, 3.45200765425*^9, 3.45225587625*^9, 
  3.51455630261075*^9},
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"334.`", ",", "0.76`"}], "}"}]}], ",", 
   RowBox[{"ChiSquared", "\[Rule]", "0.8332740866492407`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "8"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452005865421875*^9, 3.452007654265625*^9, 
  3.452255876265625*^9, 3.514556302626375*^9},
 CellTags->"Transforming data"]
}, Open  ]],

Cell[TextData[{
 "Thus, after transforming the data based on graphical exploration and with \
an understanding of the actual apparatus used to take the data, we have \
confirmed that Boyle",
 "\[CloseCurlyQuote]",
 "s law is consistent with this experiment. We also note that the student has \
apparently overestimated the experimental errors since the ",
 StyleBox["ChiSquared", "MR"],
 " per ",
 StyleBox["DegreesOfFreedom", "MR"],
 " is small."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"Transforming data"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.3 Estimating Parameters for Peaks", "Section",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[TextData[{
 "As mentioned in Section 5.1.2, there is no known software that can find \
peaks in a spectrum and estimate parameters for them as well as a human \
expert. As also discussed there, the most promising software for doing this \
task may be based on neural networks; the computational requirements of these \
networks and the fact that this is still an active area of research means \
that ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " does not attempt to supply such technology at this time."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[TextData[{
 "However, in the case of fairly simple spectra ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " does supply a function (",
 StyleBox["FindPeaks", "MR"],
 ") which can often find and estimate peaks well enough for the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 " to successfully find a fit to the data. This section discusses that ",
 StyleBox["FindPeaks", "MR"],
 " function. The following section discusses a convenience function that \
bundles ",
 StyleBox["FindPeaks", "MR"],
 " and ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 " together into a ",
 StyleBox["FitPeaks", "MR"],
 " function that automatically fits to reasonably simple spectra."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"FindPeaks--algorithm", "FindPeaks"}],

Cell[TextData[{
 "One basic idea used by ",
 StyleBox["FindPeaks", "MR"],
 " is that the peak position corresponds to a minimum in the second \
derivative of the spectrum provided that the second derivative is negative, \
and the width of the peak is measured by where the second derivatives are \
equal to zero."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"FindPeaks--algorithm", "FindPeaks"}],

Cell[TextData[{
 "The other basic idea of ",
 StyleBox["FindPeaks", "MR"],
 " involves the question of the function of which we should be taking the \
second derivatives. As discussed in some detail in Section 6.1.5, a \
reasonable choice is to form an ",
 StyleBox["InterpolationFunction", "MO"],
 ", take its derivative and smooth the result using the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["SmoothData", "MR"],
 ". We then interpolate the smoothed first derivatives, take its derivative, \
and smooth the result to get the second derivatives."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"FindPeaks--algorithm", "FindPeaks"}],

Cell["\<\
We will first load and examine some data we looked at in Chapter 5.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Cobalt60", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"Cobalt60Data\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> Left, \
ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.45200765428125*^9, 3.514556634751375*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Cobalt60Data"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 StyleBox["\<\"Cobalt60Data is part of a cobalt-60 nuclear spectrum. The\\n\t\
format is: {channel, counts}. The data was collected in the second-year\\n\t\
Lab of the Department of Physics, University of Toronto with a NaI \\n\t\
scintillator and a PC-based multichannel analyzer running PC-MCA software \\n\
\tby David Harrison (1990, unpublished).\"\>", "MSG"]], "Print", "PrintUsage",
 
 CellChangeTimes->{3.5145566377045*^9},
 CellTags->{"FindPeaks", "Info3514542237-2167347"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "Cobalt60Data", "]"}]], "Input",
 CellChangeTimes->{3.452006959953125*^9},
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxdliFsa3UUxi9kYmJiYmJiISNZSPPSkAIDFlKgjAEFBoxHgQHjUR57j4Us
YWJiYqJiYmKiYqKB8qiomKioqKiYqJiYqJioqKioqKiomJiYmCC88/3Evpkv
v3znfOf8713vvS8//vPhkxeTJHnphST5X5//lf/KPdfSx6Gn8CehFXHyUWgV
fy20hv9+aB1eDT2jXv0N4yb1mt+C86Ftyzu3fTrGF+R/GHqJnw3tmn9l+T3L
69v5BsZDWHkjyx9b3sSu97XxDbweegt/EXoHf6Dcv6W6H1Pikq7fNL7yZvBX
Q2etfg7+PHQeVv6C1S/C+n9Zgj8LTTFf50/DX4ZmbL9l+r8KXYE/Dc2an6Nf
/prtk4c1b93Ov0G/rm8B3gjdtP226Fd9EV/7bOOrf0fc+Tp0F1+8J86J980/
oF95h8Yl6z+iX/seU/8w9MS4zP6F0FPbtwLLr8LfhtaYp7y65Z1ZfYN95Tep
l9+ifjO0Tf73oefUb6kO/in0gnr1XzLvh9Au/nehV5bfg1XfZ58fQweWP2S+
/BH12m/MfPGEfvE1/b+E3lD/a+ituCi+o7+ovur9fafEQ9VPV+/nzYiL6p81
nhN3fgudJ1/7LYgT+Yv0Pw5dYr78lOWl2Uf1GfLFy7b/Ciw/K66Jc8x/Erpm
/Xnbd535qt+gX36BfcSbzFP9lnhRXCRfvM38p6E7+Nuhu/iq37N99pmv/gPq
d0IPuZ46X8nOf4Sv+mPm/x56wjztU4Y179T2qZAvv2r1Nfw/Qut2f87wNb/B
PupvUq/+ll3PNr7qz+36d7g+yr/g/Kq/tHldfJ3/ijz19+z69O36DqhX3tDO
O7L5Y1j5E/p1/66538q/sfPf0i++Y57+P5N/pNp3Sszvb1pc4vdv9bNifp9z
9Kt+3niBfn7/xkuwnicp8tWftvkZcU7Pl2WY37/lZ/EfSeGfQ9eoV16e+Xo+
r+Pr+bsBK69g/qbN2yJP75uimOfnNv3aZ8d4F9bzeo988T75er8c4Ov9dMj9
1PuyRJ7eZ0f0K++Yfr1vT2xemTy9v0/p/ya0Qr3yq7D8GvP1/VMnT99bZ7C+
JxrW36RffgvW902bfcTn5GleB1/7X9Cv79dL4y6s78Ur8vS91MPX920fX9+T
A3ydb2h5I+r1vTuG5U+s/hpf3/M3+O+F3uLr+/sOX/nJs/s8Bat/+tn9/WfM
n8XPhc7hr4bOm7+A/3boIr72W8JXfQpf50vjvxOaMV6GXw9dgZdDs1afg9Oh
a7Zf3njd8jbgN0IL8Fuhm/CboVvwK6FFeCV023gHzoTuwq+F7tn++3b+A+s/
tPqS5R3BD0KPzT+x85ftfKfwq6EV668a1+BUaN3mnxk3bH7T/Jbltc0/N+5Y
3oX9f1za+bp2vivL69n5+nb9B3Z/hjZ/ZP9PYzvPxO7fNfxu6I313xrf2fzk
3/s8BWdy/wGYEnwT
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1700., 0},
  PlotRange->{{1700., 1985.}, {0., 213.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452006960625*^9, 3.452007654375*^9, 3.514556641376375*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[TextData[{
 "We use ",
 StyleBox["FindPeaks", "MR"],
 " on this data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindPeaks", "[", "Cobalt60Data", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Bkgd", "[", "0", "]"}], "\[Rule]", "175.33114035087718`"}], ",", 
   
   RowBox[{
    RowBox[{"Bkgd", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"-", "0.0793859649122807`"}]}], ",", 
   RowBox[{
    RowBox[{"Amplitude", "[", "1", "]"}], "\[Rule]", "145.61184210526315`"}], 
   ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "1", "]"}], "\[Rule]", "1830.`"}], ",", 
   RowBox[{
    RowBox[{"PeakWidth", "[", "1", "]"}], "\[Rule]", "96.`"}], ",", 
   RowBox[{"PeaksFound", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452006964953125*^9, 3.452007654421875*^9, 
  3.45225588375*^9, 3.5145566474545*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 StyleBox["FindPeaks", "MR"],
 " has returned the intercept ",
 StyleBox["Bkgd", "MO"],
 StyleBox["[0]", "MR"],
 " and slope ",
 StyleBox["Bkgd", "MO"],
 StyleBox["[1]", "MR"],
 " of a linear background term. It has also estimated the peak to have an \
amplitude",
 StyleBox[" ",
  FontSlant->"Italic"],
 StyleBox["Amplitude", "MO"],
 StyleBox["[1]", "MR"],
 " of 146.924 and center value ",
 StyleBox["CenterValue", "MO"],
 StyleBox["[1]", "MR"],
 " of 1830. ",
 StyleBox["PeakWidth", "MO"],
 StyleBox["[1]", "MR"],
 " is the estimated full width of the peak. It is estimated from the values \
where the second derivatives of the peak are equal to zero. Also returned is ",
 StyleBox["PeaksFound", "MO"],
 ", which is the number of peaks found in the data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[TextData[{
 StyleBox["FindPeaks", "MR"],
 " can accept a second argument specifying a peak shape."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"FindPeaks", "[", 
   RowBox[{"Cobalt60Data", ",", "Gaussian"}], "]"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Model", "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"IndependentVariable", "-", 
            RowBox[{"CenterValue", "[", "1", "]"}]}], ")"}], "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"EDASigma", "[", "1", "]"}], "2"]}]]}]], " ", 
      RowBox[{"Amplitude", "[", "1", "]"}]}], "+", 
     RowBox[{"Bkgd", "[", "0", "]"}], "+", 
     RowBox[{"IndependentVariable", " ", 
      RowBox[{"Bkgd", "[", "1", "]"}]}]}]}], ",", 
   RowBox[{"EDAParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Bkgd", "[", "0", "]"}], ",", "175.33114035087718`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Bkgd", "[", "1", "]"}], ",", 
        RowBox[{"-", "0.0793859649122807`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Amplitude", "[", "1", "]"}], ",", "145.61184210526315`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CenterValue", "[", "1", "]"}], ",", "1830.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EDASigma", "[", "1", "]"}], ",", "48.`"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"PeaksFound", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4520069753125*^9, 3.45200765446875*^9, 
  3.452255887046875*^9, 3.514556656392*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[TextData[{
 "Now ",
 StyleBox["FindPeaks", "MR"],
 " has returned a ",
 StyleBox["Model", "MO"],
 ", which in this case is a function of parameters ",
 StyleBox["Bkgd", "MO"],
 StyleBox["[0]", "MR"],
 ", ",
 StyleBox["Bkgd", "MO"],
 StyleBox["[1]", "MR"],
 ", and a Gaussian with amplitude ",
 StyleBox["Amplitude", "MO"],
 StyleBox["[1]", "MR"],
 ", center value ",
 StyleBox["CenterValue", "MO"],
 StyleBox["[1]", "MR"],
 ", standard deviation ",
 StyleBox["Sigma", "MO"],
 StyleBox["[1]", "MR"],
 ", and independent variable ",
 StyleBox["IndependentVariable", "MO"],
 ". Also, ",
 StyleBox["FindPeaks", "MR"],
 " has returned a rule for ",
 StyleBox["EDAP",
  FontSlant->"Italic"],
 StyleBox["arameters", "MO"],
 " specifying the names and initial guesses of the parameters. Thus, the \
result from ",
 StyleBox["FindPeaks", "MR"],
 " is in a form suitable for giving to the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAFindFit", "[", 
  RowBox[{"Cobalt60Data", ",", 
   RowBox[{"Model", "/.", "result"}], ",", "IndependentVariable", ",", 
   RowBox[{"EDAParameters", "/.", "result"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
MebwlQ2ZmLOeg0Pbx5/wp5hjibbvy9vETyC49CzbHEE7bSstFTmQej0ltKbO
HEolUo4uShy0C0rztU6YI0+vhh2owQFvyKPcA8EWOPRBxfw+MduZ5+apYxYw
zyydVNLk4INKmldtjAUmPhTYDxOLeyhvXpFtAcus9Hn+WuT5k9IS7K5a4Men
wEO+OhzsbJ7KdfllAbszCpbeBhzs96l9/DvBEnPG86bdLDkYjv9SENVihZX1
wzqXietuPZhU7rTC5hNbjwhZcdDE91/CYK8VAkSe/bhBfODkP6F7P1rhyQaJ
iXU2HBipNd66vcgapd5Jo8N2HHA2ngla4WkNx77DQyecOfgjHa2zQsAGRXV2
9y94crAEconv99uiqmwma/5eDlKDC+xrj9riOrfC3Y+48GhFcEqCLXpjhD5u
9OJA/UFvv0ehLfi23+Wt9ObAXcnDLfSJLZifDHSuUBzknpS4Wwg7yEqpnG8J
4CBmi0ixv4g9/j0qHNZ/hKz/76Xrjv+yx5Bdeu7BNA64j6If/vrigJZo+tfp
Ig6aIzgOTsud8aumRpNzg4NPuUPyt6+7ImgyY5C/l4OFAgqZe/a5w0zzqI/D
MAe6sidaZEN3of7RsLIyHw0Rc+EbqUaeCIiU2xcgRSMm9uWd1Rf2ImzDvmOn
NGjcPisgO77YG37OiZkfiGc1Vdf8XuaNnScuXtimSaNpuO7unFXeMHjyqXeS
2CCKtUBQwRu8UX7Ku7VoiF/3/zm11Rspz/xfqejQWBvTZuXl7Y1zCfvxSJ/c
b75QvlmVN+6+D+JbbEGja9Lnduo2Jkr1JwqCiSeVXpsamzKRcjrY8AnxwJtV
fBOWTDgYhYTnWtKI/TsibenExIu8w2OrrWk0/xF0u0cx8c0p7IWSHY0Hyxbo
zE9mYsWtiFpTZxp17+dfj3zExMzy2e0XiKeW34yt6WVi4GDk1/kuNIYy2+cN
PWWieNWJDfeJz0pvXK01yIRa+Mlzjm40OiffbS36xoSJekyKpwcN3WW1bdVi
LBzIT2SG76XhnxXTsdeWhUdLhbf2E9duyNw8sZ0FjfRUMV0vGns/xotEObMw
cSKraZr45v7PE2k7WTjilbcsjEmjWizWMNiPhRNy1V2hPjQaLSKmPGJZyCx7
uikkkMZuqbGFmddY+C7jIdRH/ItJPUxuYMGJfjm4aT8NxSuVuSdusLDk1JvU
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
bGaWmPfp88P3XRXwPyCKWyw=
          "]]}}, {{}, 
        {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxdliFsa3UUxi9kYmJiYmJiISNZSPPSkAIDFlKgjAEFBoxHgQHjUR57j4Us
YWJiYqJiYmKiYqKB8qiomKioqKiYqJiYqJioqKioqKiomJiYmCC88/3Evpkv
v3znfOf8713vvS8//vPhkxeTJHnphST5X5//lf/KPdfSx6Gn8CehFXHyUWgV
fy20hv9+aB1eDT2jXv0N4yb1mt+C86Ftyzu3fTrGF+R/GHqJnw3tmn9l+T3L
69v5BsZDWHkjyx9b3sSu97XxDbweegt/EXoHf6Dcv6W6H1Pikq7fNL7yZvBX
Q2etfg7+PHQeVv6C1S/C+n9Zgj8LTTFf50/DX4ZmbL9l+r8KXYE/Dc2an6Nf
/prtk4c1b93Ov0G/rm8B3gjdtP226Fd9EV/7bOOrf0fc+Tp0F1+8J86J980/
oF95h8Yl6z+iX/seU/8w9MS4zP6F0FPbtwLLr8LfhtaYp7y65Z1ZfYN95Tep
l9+ifjO0Tf73oefUb6kO/in0gnr1XzLvh9Au/nehV5bfg1XfZ58fQweWP2S+
/BH12m/MfPGEfvE1/b+E3lD/a+ituCi+o7+ovur9fafEQ9VPV+/nzYiL6p81
nhN3fgudJ1/7LYgT+Yv0Pw5dYr78lOWl2Uf1GfLFy7b/Ciw/K66Jc8x/Erpm
/Xnbd535qt+gX36BfcSbzFP9lnhRXCRfvM38p6E7+Nuhu/iq37N99pmv/gPq
d0IPuZ46X8nOf4Sv+mPm/x56wjztU4Y179T2qZAvv2r1Nfw/Qut2f87wNb/B
PupvUq/+ll3PNr7qz+36d7g+yr/g/Kq/tHldfJ3/ijz19+z69O36DqhX3tDO
O7L5Y1j5E/p1/66538q/sfPf0i++Y57+P5N/pNp3Sszvb1pc4vdv9bNifp9z
9Kt+3niBfn7/xkuwnicp8tWftvkZcU7Pl2WY37/lZ/EfSeGfQ9eoV16e+Xo+
r+Pr+bsBK69g/qbN2yJP75uimOfnNv3aZ8d4F9bzeo988T75er8c4Ov9dMj9
1PuyRJ7eZ0f0K++Yfr1vT2xemTy9v0/p/ya0Qr3yq7D8GvP1/VMnT99bZ7C+
JxrW36RffgvW902bfcTn5GleB1/7X9Cv79dL4y6s78Ur8vS91MPX920fX9+T
A3ydb2h5I+r1vTuG5U+s/hpf3/M3+O+F3uLr+/sOX/nJs/s8Bat/+tn9/WfM
n8XPhc7hr4bOm7+A/3boIr72W8JXfQpf50vjvxOaMV6GXw9dgZdDs1afg9Oh
a7Zf3njd8jbgN0IL8Fuhm/CboVvwK6FFeCV023gHzoTuwq+F7tn++3b+A+s/
tPqS5R3BD0KPzT+x85ftfKfwq6EV668a1+BUaN3mnxk3bH7T/Jbltc0/N+5Y
3oX9f1za+bp2vivL69n5+nb9B3Z/hjZ/ZP9PYzvPxO7fNfxu6I313xrf2fzk
3/s8BWdy/wGYEnwT
          "]]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->True,
      AxesOrigin->{1671.5000000000002`, -9.2},
      DisplayFunction->Identity,
      PlotRange->{{1671.5000000000002`, 2013.5}, {-9.2, 233.20000000000002`}},
      
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {189., -118.66252583997979`},
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}], InsetBox[
     GraphicsBox[{{}, {}, 
       {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
sg==
         "]]}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, False},
      AxesOrigin->{1680., 0},
      DisplayFunction:>Identity,
      Frame->True,
      FrameTicks->{None, Automatic},
      PlotLabel->FormBox["\"Residuals\"", TraditionalForm],
      PlotRange->{{1671.5000000000002`, 2013.5}, All},
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {189., -355.98757751993935`},
      ImageScaled[{0.5, 0.5}], {360., 222.4922359499621}]}, {}},
  ContentSelectable->True,
  DisplayFunction->Identity,
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.452006986109375*^9, 3.452007654671875*^9, 
  3.45225589059375*^9, 3.514556662688875*^9},
 CellTags->"FindPeaks"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Bkgd", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"201.5`", ",", "1.6`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"Bkgd", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.09556`"}], ",", "0.00087`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"Amplitude", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"154.03`", ",", "0.17`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1833.512`", ",", "0.054`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"EDASigma", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"43.499`", ",", "0.069`"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "23500.715497314617`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "281"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452006986125*^9, 3.4520076546875*^9, 3.452255890625*^9, 
  3.5145566627045*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[TextData[{
 StyleBox["FindPeaks", "MR"],
 " can also try to estimate parameters and form a model assuming that the \
shape is a Lorentzian or Breit-Wigner."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindPeaks", "[", 
  RowBox[{"Cobalt60Data", ",", "Lorentzian"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Model", "\[Rule]", 
    RowBox[{
     RowBox[{"Bkgd", "[", "0", "]"}], "+", 
     RowBox[{"IndependentVariable", " ", 
      RowBox[{"Bkgd", "[", "1", "]"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"FWHM", "[", "1", "]"}], " ", 
       RowBox[{"PeakArea", "[", "1", "]"}]}], 
      RowBox[{"2", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"IndependentVariable", "-", 
            RowBox[{"CenterValue", "[", "1", "]"}]}], ")"}], "2"], "+", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"FWHM", "[", "1", "]"}], "2"], "4"]}], ")"}]}]]}]}], ",", 
   RowBox[{"EDAParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Bkgd", "[", "0", "]"}], ",", "175.33114035087718`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Bkgd", "[", "1", "]"}], ",", 
        RowBox[{"-", "0.0793859649122807`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PeakArea", "[", "1", "]"}], ",", "38031.93599551194`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CenterValue", "[", "1", "]"}], ",", "1830.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FWHM", "[", "1", "]"}], ",", "166.27687752661222`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PeaksFound", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4520070000625*^9, 3.452007654734375*^9, 
  3.45225589384375*^9, 3.514556666907625*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[TextData[{
 "Now the ",
 StyleBox["Model", "MO"],
 " is a background plus a Lorentzian."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[TextData[{
 StyleBox["FindPeaks", "MR"],
 " can find more than one peak in a data set. We will illustrate with some \
data we have already examined."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "MassSpec", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"MassSpecData\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> Left, \
ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.452007004046875*^9, 3.452007654796875*^9, 
  3.51455667117325*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "MassSpecData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 StyleBox["\<\"MassSpecData is mass spectrometer data for two isotopes,\\n\t\
taken by Dr. Alex Young, Dept. of Chemistry, Univ. of Toronto\\n\t(1995, \
unpublished). The format is {amu,ions}, where amu\\n\tis the mass, in atomic \
mass units, and ions is the number of\\n\tions.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.514556674142*^9},
 CellTags->{"FindPeaks", "Info3514542274-2167347"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"MassSpecData", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.4520070171875*^9},
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxN2ndcT/3/x/HMihBaKjIyMq4oIcTrrcJFmkbDiOLKppIZupDIykVIZGVE
ycxsUCqfhrb21CZJsv2er98/39Mf3O63Pp3POe/zfr8fp8+tAcvW2y5vLycn
9xz/8P9XNph0yVviSb8aQ/uK7m+pr6PrpFK44cyGbs1mZRRo6r+mBp7plbAi
uHcldR9191wTXDTwvKnq9Srar5af1gZ/GJdoYTn+HfEx5Zw9Kf7vbiMmfqmi
7XVDxijANz5N3i/rU0UtmXOWKcMlSQO7tOZW0Jpnnv9pwJEu/gtvLCund6Fn
4/vDifd9LR9WltLioy9ah8E+fn8N+e5eTHlbcED42PvE8qZLhWS9TNneGPZL
vfQpLCifkmaPPyDgoGWLEuKHVpIwWvzkb/iS48txvQ0b6Vm/fQ02cLZBquGS
O41kpHBL2xGOijH0c/RspIhmnCBspuY85q3Oexpc+G3nKrgh8mtxwalGConv
H+kOrxpxq67iaS1pRMwo3wZr/mhseDnoHQWcWtdrDzz70HrP71vqqIvPSVN/
eHW/ZRZX8j7Sv6twwbDyIL/0OUWt9MOuMvQs/HDDsxUbXn4nL9yOy7CW/OLv
iiHf6T2G7xaPX/9J26b0/EpuuNz78NkAz4EdjVqpDKf3DHbrUDvqRcQnWoDD
xcOLv5o1KJs0U2YKvvj9o/yzds1uptkPW35lw1MfD6mxD2uh+BBN/WIe75iq
jEKPNjLB6L3j+5OeoRzt9oMeuLsFvIfXDH56Yvj03zR6IW4IHDZ0QZbHmD90
wxwHhEdk2h3TmvKH+usX63ZeivEWVcdm+rYXQRod53eHFRObrK4pdha92o/Y
rwZ77P/yS01TQRxqsHnUD5ZfpaBndVZRdMrBDYadlo32WSfrInZG4wThHy5b
H/5X21W0XXs1ezwcHBM44YhGN7E+4P2OqbDMKtrmSUJ3Ub9NJWIGbFFpUuJ7
SVm4YDpbwXe61NdUa/cWBZh+9vDlLcotZX3VhB1PFz5e5oY+7Xb0Eam4vW6w
evRrz6xufcV03I4NcKrv8MKV+/qLGAzfFvhEvd/Gb9UDxARcrg+sO7hlnSxx
gLiD0zsAN6vtfj374CAxHIcL4OP5v60yKRksLp3BF/xk8eanbXGDRd89sa8v
wv6zQ8en/hgiAtfU/LjB52s/7Nv1puGi23ysODjR26vH+6bRwncqJjR847hV
P8fOhkJODzeEj++sqZK810hs7YUDwlpjLHRO7ZgoPv240ZwJZ0yc0P/A4yli
9bs3AwvhHCW33VoLSFSltdlVwmtOtA6rn0pi8SMsEHjJw6ObhgVMEzkXcYPh
Tme9oxZOmC6ssR38gIvU+1bczv9bJGL5dlzmSTb3vdePllkIwnJTgi96vQm3
/WUpnmB5qMCpvb/mFE6yFoaYztrwwQPt7l4ttRa3MP104Wfjpg8K97MRgzFd
RsHTXutrL75sK87j9hrBgzt29n08Y57QwO0wga2GTUg7E7dAHMXwmcOZeg7K
tuYOQiGMF7An6Y89mu68zkHswenNh6cGPpJXarMX33G4xXDcmHS/PpvthecK
fME3a2aUkI+9eG91+NQ6eIXthrAyV0exwvh+khcfX/7BBUfrhaJ0IDYEeHvL
hx6GR52EvRImNNxWkDZt7Q9HkdE6bOFROGPMsqM9lZzE7FIcEFZ3stfdmeIo
XiR5RYfA8QmqF+LMHcUkbKfXYG+9dUrVyxzEfWx/kbDhwoCvQcr2Qh/b1SO4
55Buj8105otr2F5iYdVbsae9DswV/bEdJPH4VqzS73p4rjiD5fsG7l6gkPWp
3VzRC8stH25qvRX0cLet8MfyKIe/PHip2muetej4O3tLHd+PgQ0921xmiR2Y
fs3w/e3zj8+rNhetmC7f4AbD6O8GhuZiHW5vexdPmmNReb5n6jRRh9vRBe4w
/s+i4t5TxVIMXy9Yf11U10nDJ4oCXK4m3HxK03SW+Thhh9MbCDuuORFx9LSh
SMHhRsAPlnlGLq8aI8wN8QWPoxMKzjajRbQ2ggSfc2nK+nR7hBjXGRsq/Eyt
YV2Ks6643YQNAV75KM6+20kdMQw5soMT25qPBO3TFJeRj4Wwz+6tvjZ6GkIb
270rXOl1bvWD/eriBLbnNXB7pfaexnC3Xdig4e3vx1W/O6Yu9mL72wEfWCtC
whtVxR9sV/vg8X1e5gWb9xZbsL0chn9WzX/XobCHaMZ2cNKFx7P/NrPlCmIl
BxPep5Uvp1DfXlRguYXCesdfX5h64g8twvKI4OMPiMsZc/s75WI6P4TV8rqP
jPjzhSwx/aLhuCsj9Xc4f6ZETJdX8P4d/61yufWJ/j/AsKX1s5UjopvpMfcc
1tQz0Y/UaCYD7jmPz6AlBm6l7+km9xzerXLPK6pdPQ3insPVsS//9TteTcHc
c76elyXhqocqSZ177upJwx/bWJ2pLaNj3HM4bHP2jrNmxaSYhQ0VTkpruFKw
Ip98uOfw9oi9Ca4jc+k79xwOmDPxcMSBLPLgnsNZFdfCRnpkUCP3HO43K+P0
tSfptJx7DmsG6k8bszWVSrjn8DT1ixGlXVJoPvccTju7RGOfw2vK4J7DatV/
fO2UX9Ms7jkc7d6jUClQRi95O4AHHQlP0JmfQRO55/DaTJXGvWty6T73HP7P
Ls+8bn0RjeKew9+atF+UbCunq9xzuPUSjXycXEU63HO4Qe+b8eSmGjrNPYfl
G2tN+z+sJ+W5CDAsp5j7w352I/lzz+EWf60tWdGN1H4oNkBYZnewOCq1kby5
57Crw4Ibdbsb6Qv3HM6uiHlgV99Aa7nn8O1LKumqaQ1Uwz2Hf66PNOt6vYGc
uefwlss5wcu2NFA+9xzOO/lq0aypDWTLPYfTQxK6Nf+sJxn3HNbRVDXcd6ee
zLnn8NZFbXZGi+opmnsOn3oR8UVfrp6MuOfLPcngkvfFy0F1FMk9h9vPu1oQ
PbKOhnLP4WeGq4dFPqyli9xzuO+p7j2vTqglTe45/DYvUzP9bg39xz2Hwyy/
yxwG15DSdQQTnjE3MczzWDXt457DbmKHieXnd/SLew4nrXPqomrzjrZwz2F1
o2un2q5WURP3HO7z/uJq3S+V5MY9h7c3HVZ6PaWSKrnn8O8T4XLqPhXkxD2H
544zTTN+Xk7Z3HPYaGTAD+eWMprDPYcXp+d3fzqojF5xz2H55mjt98ElNJV7
DkfJJcvtrSmiR9xzOPTk5tNWlwpoNPecv/+ti2FIZh7d5J7Dl981eeZNz6GB
3HP4aI9JPaYqZtFZ7jl8dVS7e9q6GaTKPYeHNoYPXGeaTke45/Avk0sPb2ik
kvxP9Jy9YduSPxky2s09h/VW1P59aIyMvnHP4aWHvM1DP6eRB/cc/jgj0zFO
LpvquedwhVOQbo1rAblwz2Hzd29znDTKqYh7vgLrocfC54cGv6N53HO4NMrG
7GpoNb3hnsOTrW8NnXW9hmZyz+HcyR5ZvXG/47jn7PLwe+eX1NJE7jm84rLL
WF+9WrrHPYfvvjsbt/xCDY3insNlSosT36ZV0xXuOTzA+86dbTHvqC/3HA4K
OtdYvaOKArnn8KZkvapHPSuphzcGEK5Yu6jjIb9yOsg9h3u+3eXelldK7a0R
JHig9Z3i6YeLaDv3HA4L8dHfllFAn7nn8LTglGz1zfm0lnsO33q6YZyFzluq
5p7DgW53NZam5JIz9xy+3y136oXdOZTHPYdvq/bfYDclm6y55/DUhuy18fJZ
lMw9h5W/Tfg1uTSDzLjncNaNYxWdE9/QM+45vPoNxef9m05G3HM4x8Rh9+qL
qRTBPefjbWzxWfhBRkO55/CSmfNaHxxJpgvcc/iv8uQt8SsTqQ/3HF4409lz
+4kECuCe8/lNDBvk2DeeumTggnm8PY1flPZ6SXu45//g+edeiL//nhf0m3sO
Z99b97TI+wVt5p7D2gYTDtsqv6Qm7jk8peHw5DV/x5Mb9xz+drZdpxvjX1E5
9xxWaDd4oF9dEjlyz+HdvTTOeOinUhb3HJ636nvytjlZZME9h1X2GcR8/ZlH
8dxzePytqPoV3kVkwj1nn/E1/2lbRo+45/z+Rk7rPw6poDG83cP77bSO612t
pBvcc3j9OYU54lkVDeSew74ZxqG95lXSGe45bLVyd45/ZRmp2GKBwAWbF9Ro
Xyyiw9xzuOxW5PTYa3nUeTBOEE70N1c+PCuLdnLP4aWLzqv1/ZRObdxz2H1J
t98h5inkzj2Hndac7ah7/w01cM/hv25ay104kk/LuOdwwp5XG87cxnrjnsMR
X37ffCyrpnncc1i4Xlfckd1AadxzeEJcysd54iPN4J7z9TmZn989uJliuedw
O/E1RqvTRzLmnsMLezp5zC5qpDvcc3j5eaMpw5XraDj33A37zbIG+bjPVRTK
PYcvnapp+/m2jPpxz+G774evDlQvoJPcc/i6R+ybMY+yqMdVTGj4b7eUEguX
NPLjnsMhgwbtb14no3ZbcUDY20Dd75lcCm3jnvPr7boNbLNPoxbuObytw19e
vZUyaDX3HC7rOqbhq1cWVXPP4Z9DY2p+m+XSIu453PJsv8vXOfn0lnsOd+oW
cbxUo4isuOfwntrtG/b1LKYk7jm8zGqn1tLnxTSNew4PtPI67axbQk+55/DM
Vt3GjZYlNJZ7Dv9jNVtrj2kJhXPP4V+rwob/27WEhnDP4YB5HXQWRRTTBe45
HKGt/qvd2GJS557D+alXkxdfKaJj3HM4yMvjwFL5Iur6HT2HDzWGBBi3FNK/
3HN4ye9kJV25IvrJPYdHPDG/P06piDZxz+HwB65HU9WK6AP3HD7nuyXUTKeI
/uGew49eZP5q0y2iMu45HPUnPsR0aBE5cs9hm6wLx/cMLqIs7jk8IyuquDd+
fhb3fCWeF086+Vn3LqKX3HN40O3iMyfbFdFk7jns/fBon6l1hfSQew4nfNtn
q7igkPS553Bi0Ok3pfcK6Dr3HL6rM2HZwo4FNIB7DisFWIS4z8qnIO45bNv2
XEfN7y313o4NC+7m5Ll9YkweHeaew0/jF8zKas6ljpaYMHD5ZGvd7AG55M09
h3/LzC+OtsmhL3x74eBt/R2KfLJpA/ccHm+TVPn6QRbVcc/hefaD85s+ZNIy
7jm86bROxhT9TCrknq/k558Ql5tbMmgu9xzOfOc/TC/1DaVyz+FeHdOibv71
hsy553z934Ns50xJp1juObz3fpWelkij8dxz2Gv634Ovr0ylSO45HBB32rPw
aQqN4J7DJeMuzwielEKXueewW9SEtIxGGWlzz9l3Datfl8roJPccNslSVmiu
kFH3dGwwEvtxzyWWu4QbLPEW7rnEzdzzVf/zKu65xO+45xIv4p5LnMs9l9iK
ey5xEvdcYsE9l/gJ91xiA+65xDe55xLrcs/hW+VlKgPjZBTCOYfrja+pzrie
RBrccziudGVoRHoCHeOew33VziTkWb8kxUG8IeD1OqGbhXkc/cs9h9V3/9ya
cyiGfnDP4Xx3vb9CC5+TJ/cc/njuTvePN57Te+45PHr/pn73h8fQcu45bFQw
PHLzzDgq4Z7DT+adaUiXjycH7jncbeuXF+WNiZTJPYcnL9kxz2d4Gs3insNj
o2JaC6Oz6QX3HD517NSOj5cLaDL3HE7MqT421aaMHnDP4e8/PruYWVTSX9xz
OMHgyTB5g2q6xj2HVdy3Wfs115IO9xxOurPVImlrA53mnq9Gr2ltrlVQA/Xm
D3jhlkdtHyKe19Mh7jkcaqTf/fSGOuq0GQsYthjqulk3uYa8uedwxz/Va9cW
v6PP3HP4wygFo0MvK2k993w1f96loRwUUE613HP48M20vc5PS2gp9xyuWHqo
35vtBVTAPYf/teri+eBYLtlyz+Hw+XVdTYdkUSr3HD7m8HrNTbc3NJ17Dtd6
Bk+cppBKMdxz+IhLn4fGyTIazz1f/b/5cpt7LrEe91ziS9xzibW45xKf4J5L
rPQVPZd4P/dcYjkZei7xZu65xJ+45xKv4p5LXMk9l3gh91ziHO65xJbcc4lf
cc8lnso9XyNZb9xziQ255xKHcc8l1uWeS3yOey6xGvdc4qPcc4kVLLBBS+zD
PZf4B/dcYnfuucTvuecSu/LylbiYey7xAu65xG+45xL/zT2X+AX3XOJJ3HOJ
H3DPJR7JPZc4lHsucX/uucSnuOcS90xFzyU+yD2XuMMFbKgS7+CeS9zKPZd4
Hfdc4lruucRLuOdr/+e33HOJbbjnEsu45xKbcc8lfs49l3gc91zi29xziYdx
zyW+wD2XuA/3XOLj3HOJuw5AgCX25Z5L/Jt7LvFm7rnEH7nnEq/knktcwT2X
2Il7LnEW91xiC+65xAncc4mJey7xI+45PH59wveD5TIawz2HNSZ8eBVVhfXG
PYfDn9wwS+yRQgO45/ADvYCxWxxS6Dz3HB5zof52SUwKqXLPYT3jn+ndRSod
5p7DYT2UIrQLU6nzJgRzHZ73pji7aB9Ko13cc3hp+RTFgbbp9J17Ds9X3Fx0
QfUNeXDP4ZQv+QmJB/H7CPccDp6+OvWofAa5cs/hmZ3T/rT3z6Bi7jk8zzR0
5QiVTJrPPefvdz2h3vtSJqVzz+Erq03U4g2zaCb3HG7YaOY+MymLYrnncOgI
iwlhi7PJmHsOz73a5tnSmk33uefwzqa6sX8dzqFR3HN+vcqrva6DcimUew5b
DtLfeCEql/pxz+Hfw5I6N87Mo1Pcc3iC4Vhbm9w8Uv6CnsO7rdScCxa/pQPc
c9jRv6dJQPlbap+MnsNzPie17lqUT9u453DRqdLAyIx8auGew357vo4cZVJA
67jncEH8w/g/5wuohnvO57/y+SqDLwXkzD2HN++8PSJdFFIe95zHt+dolbLd
hWTDPYdzR1eMXn+3kF5zz2H1OrcjvjmFZMo9h2teFm5KrS2kZ9xzuGVSWdx7
PG8bcc/h8QPGj7QtL8S8QYDX4/eNVvXsabJCGsY9h190PhuRf6OQQrjn8E0T
uxO3vAtJk3sOX9yTtchmRiEd557DBXERlYvkC6nLLAwg/F/55t//RBfQXu45
/FMW59tpbQH94p7Ddqt05qX0LiAv7jksCx00zfZePjVxz+HL/ywdMsoin/7h
nsPdzqwu+FTyliq457DZoJxxxmvekhP3fD1/HjdaJfBzHmXy9gw3VfecHbIl
j+Zwz+HcT13u13/NpXjuObzyZ8TQ7l65NIV7Dpc1HtsZ8jGHorjn8MZw04Cx
K3NoNPccnjvUcYJLWTbd4J7D8ab/WMTNz6aB3HP4c8Ov0KqULArmnsMDFO/0
dTHNIlXuObxzb+9DmU8y6RD3HJ4541FykmEmdTqPC4bvTTS4XRiRQbu45/CX
GSqqF0dm0FfuOWxh35wVEf6GNnLP4Q9zF8YHGbyheu45v5/lG+/Wzenkwj2H
3663mpB8Io2KuOewe7nTyqJnqTSXe77Bk1w2ab1wbE6hVO453Pv3vZb1hik0
k3sOr836Hr4iTUYx3HPY1rWtf4cIGU3gnsMlvSKmX/5PRne553DcacPoLztl
NIJ7Dj+7HTwkfL2MrnDP4a09f/fzWi6jvtxz+O7mNdPbOcsokHsO6wT/nPR7
sYyUdbBAYPcJL89rL8PzEfccdu2c001pJZ6PPqHn8K2Y6cN2eMhoK/cc/tZ3
1GFtHzwfcc/hzoXBhcEBMlrDPYePRIbdvXUFv49wz+HJ9qvv/Hgso8Xcc/i1
f4uXcYaM8rjnfH7zzz1x0ZeRNfccVjXq7hp5Lolec8/hcYnmdqotCSS45/DB
Y5p/vMa/pCfcczhQxaXksXssGXLP4ZDwhvS9Dk/pFvccdntgO7i+4AEN5Z7D
u2dcD1uzNZJCuOfwxRyDs2EHrpIG9xwecMai6Z7hGQrgnsNyPYaNfq2+jbp4
YEKzPzltDVy7L3YP9xy+IIbeX2oaFPuLew4rF+cGzP94OdaTe77Rk8Tl6fXx
127EvueewxffKSisGhYRu4J7DmvIyuUdb0TGlnPP4a123f/z23Mn1oF7Dit2
Ko5qO34nNpN7Dr95e8GvJDEydjb3HI486qBfqxsRG889h5cEXvtQknA91oR7
Dt+JyvDoYXcx9iH3HDY71XY45N6R2L+453C7B1FeV0f70DXuOeyc3rXhYdQl
6s89h41rvjddL7hDZ/l2wPSzYsT0u09J5TN6DucHbuo6ZetLOsQ9hycL5/QD
OcnUKRE9h38cGbhR3iSLdnLP4Y/P9NpNUSigNu45HHrc+wWlldIG7jm/v8ou
5YXjKqiOew63yszNrpZV0lLuOezy81+DrOwqKuCewxv7xfVyPlJB87jn8I73
xl5bF5VSGvcc1vFVuyDD/jmdew4bNkYP3ikKKIZ7Dmf/OhLndLeMxnHP4W7W
q5VCi2rpDvccTvLJG2PzvomGc8/h5C0qN8eeaabL3HPY6FbouPXbmkmLe+6O
65tUlr/Rq5lOcM/h0QqRdwymNlOPmdiw4CNyG99O9P9IftxzeHbO4t5j7Zvo
D/ccHuuT3cX20nvayj2HB30jdR+7RvrEPYcXjrn0yP11A63mnsOFn/oGj974
nqq457DN3Qet8ic/0iLuOfzuqUKdQ/UnyuGew0+7rR+tdb6VLLnncFCH1v22
d79SMvccPrzK4YuL8U+axj2He/XX0ByS8Yeecs9hU6cX26KD2wkD7jmsZb70
UXx+e3GLew5vMdsXWPejgxjMPefrKVp0+GCfTuI89xw2Oqqp2unvzkKdew5/
aNVoHFIiL45xz2HN6Ov+R5IVhUIwbzD4fXJIqUlDc1exh3sOd4hb82K1Q3fx
k3vO59vDZ42Oj7LYxD2Hp9Zdu/B3W0/RyD2HN7iU2B6I6C2Wc8/hy14B00q3
qIpS7jk8adTN0seT1IU99xxuKS1uoxwNkcE9h68pPi4YbaspZnHP4cVN6WF7
HmuJF9xzD6wviy97rDtoCxPuObx6urz3mY7a4j73HLavd32YPEtb6HPP4VXX
wgt2GfcV17nnHvx54q4TjmN1hA73HHZSMZmxw2qAOMM9h799zVKp66UrevEf
dMG5S+0mDzk6VPhzz2GPy8PO7gsfITp+RM/hjq5dN62J1hfe3HN4RUP/Wbv3
jRFt3HP4ydGaGR9eGYgN3HN464y6hQ2WhqKGew439w2sHfvbUCzjnsPtLy2Y
sN3fSORzz2G3aW32MakThB33HC43PnwisnaySOGewwFDdk3W2knCnHsOi0kq
cxY7CBHNPYdHK1W383smxHjuObwusO/XOtVp4jb3HL7WYffCrrJpYjj3HJ6i
53M7K9BUXOSew71vrZhZ88BcaHLP4cvtcq/kOc4SJ7nn8JJvO/pNSbYQ3TYi
IPDj8FGV53znCF/uOfxSLd1/zhRL8Yd7zuP55YRvnouV2MI9h7Wj5tic0bMW
zdxz+O4/TntGDrUWq7jnnpj/AYW1zgmWooJ7Dou+e4zlulqJRdxzuNTtd7jV
FBuRzT335L9/WNvzYoy1mMM9hzdEzd/5n5mVSOSew1e851a9drUUxD3nny+x
mRg31VI85p7DKUevLIj3thQG3HNYLqd5XuF9S3GTew7Pe38lXKu7pRjMPYer
zo/VGTRgtgjmnsNqO/+8Wqw8Q6hyz2G31hbv8R7m4sj/f7zmSbezwlzXtJoJ
+QRebp7kUNYrany8mfiXe87nV3pbp+ygmfjOPYcfjZz6w/O+qfDgnsM95o8Z
mWQ6TTRyz+G4lKiSm+4klnPP4XMhfo+chIko4Z7DvjFZrz98MRYLuOf8ernE
j9bN40Q69xxOGnBodlz7sWIm9xy+u6TjmY3yBiKOew4HO/eYnipnICZzz+Gh
tx10DC3GiPvcc3h8fPy+wtt/iVHcc3ifc2TG6Dt64ir3HHY/rR9T8WaQ0OGe
83i6y1usva4jTnPP4ZsW1f22P9ERPafjgPCvmTMS7LA+D3DPN+H5+px3oVK1
tmjfBxs0/NyocbVHR02xnXsO63aOfbTQVEN84Z7DdGJttlOFmljPPYc9fGl9
j+GqooZ7Dk+z36cWHdtLOHPPYdfoILfaJd1EPvccTjkddvWebkdhyz2Hh27t
evrD13ZCxj3n92/poHiqsr0w457DDVoBK3ufbyeecc/hqavcFszO/UNG3HN4
nMOmp090flIk9xyeUFqpdeLSV9LjnsPRuZYnv9S20kXuOdx1iZ2pU9Nn0uSe
w7sW/S5/3PyZ/uOew5ZRS+na2hZSCkLP4b2V28PE54+0j3sO99RtNq650kC/
uefwhV/uxzQvVJEX9xw2P+Xjvj2rgJq453w+RtOS4oNltIp7Djc9HNAY+TiZ
Krnn8MZJdw5v75tCC7nnsPKKiiOqihmUzT2HBxqf7ly5IYdmc8/hIC3XFXoN
BfSKe86vV7Rv2XSkjKZyz+FI5ZbSwJxKesQ95/EeYVTscKqSxnDPvTzp1LR/
Cr8altMN7jk85J7ji/3di0mXew4/mzl+5ofteXSOew6PDz9075xiJqloYcLA
x452LtUe+JqOcM/hf/74pm3MiyP5D+g5nPAxV31+ShTt5p7DHwMUC93b36X/
Ax3NovU=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{326., 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.452007017625*^9, 3.4520074383125*^9, 3.452007655*^9, 
  3.4522558986875*^9, 3.514556677267*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[TextData[{
 StyleBox["FindPeaks", "MR"],
 " has a EDAS",
 StyleBox["howProgress", "MR"],
 " option which, if set to ",
 StyleBox["True", "MR"],
 ", displays graphs illustrating its progress."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindPeaks", "[", 
  RowBox[{"MassSpecData", ",", 
   RowBox[{"EDAShowProgress", "\[Rule]", "True"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
NZYTatxzFw8qrm0pjz7UXhzmnsPObidCa3TaCXkJDlTY3j9dxm3EP9rFPYev
zauTZIlm+sM9h63CLm1+pPCbNnHP4V5LXZQWj2+iKu45nDS+03SfYw20gnsO
Vx+s2Wv7t54KuOewn+nAW6rL68iBew6/6Gho/SPhB6Vzz2HNLLV8+VPfaTr3
HHYr9N2srlBFb/k4gCcrn9h+418FGXPP4TdnXudq7i2nh9xzOC1wwojArWU0
jHsON5p06eV/5Std4Z7Dd01mv54u+5W0ueewxppvTad8v9BJ7jlc9meTRkSP
L6RsjwDDqzdM66n0qJQCuedw4JX9634vKiVZAxyA8Lvz3b+6dSwlb+45vLd9
t1Dv1yXUyD2H5+QfOJ1woITWcs9huYxFTR2WlVAZ9xy+PLOz4qvJJeTEPYdd
zRr2XB9UQrncc/hBk2vXMz1LaDb3HL7ybpPShY4llMg9h9X/1kS1/iomS+45
fCJrl8yommJ6yT3n+z9yIqyirJiMuOcr8H6iNLS4XUkx3eWew2Mrf3rqfy4m
A+45PG5BmkMy/v0C9xzur9qw5cfPYurNPYff3PiQ69WrhI5yz+H8sNlWN6aV
kOI1BBM2Do5cYLuvhPZwz+F99l0ePHxTQi3cc3hE9J1XPWtLaCv3HD4WXhJW
oVJKNdxzuHtxe/UKvVJy5Z7DMht8bncdUEol3HP4vnnGwZBepbSIew475r32
69RcQpncc9hCsePVMmkJ2XDPYd8v3pmDbpdQPPccjsix35PiU0Jm3HO4fkPe
rnvTSyiKew5feWixoEu3EhrBPYcHan81KEosphvcc3i0zY55M/YUky73HFY7
cfXtepNiOsM9hysf7F26u7aIenLP4R4Lc+peXCqiQ9xzeIpZs8ZShyLq9Bc9
h/erf7eMlCuindxzeOjpmdFljz7Tb+45nOa55ISLy2faxD2Hl7n8jtuo8pkq
ueew0JuklrGzkJZzz+HhKz7JWOUX0Cfu+Ur0t3q6ruzEAprLPYfj9i38FX4y
n9K453DAgLy7zY2faCr3HFa0Pj9Rb94nesM9hz2NKtSsn30kY+457FfoYB+r
85EecM/581t+HJILzqNh3HN+/T+9hsj2eXSJew6Xdok3X7srl7S453C9fNeE
IQq5dJx7Dq89cXJhWXgOdfPGA4Tvdl27+q1FDh3gnsN5Xc+FV/2VkuwsBAk+
du58pHaOlLZzz2GXR7WTfsI/uefw9m8kBrVIaS33HL7oEj7GW+TQV+45bJLq
a3z7Qg45cc9hK5fHKtvUc0nKPYfnlm3VPBeeS7O453DLth0anzXz6D33HM43
aW0ZuiuPLLjn8Lm9Ng0j3uZRNPcc/vR+vOXerDwy4p7Dc2av/lhwL49uc8/h
X+0791nrkEcG3HNYb7F0bq/3uXSeew7Lz27odHRCLmlwz+Hgi2u7LE7KoRDu
OewYOeZW3IEcUkjHgGHxqm/p9205tJt7vgrv/0Z8nvUGz/Mf9xxeb9l1Uu2v
HPLknsPTvPy0J7nhXTP3HL571zzjsCSXXLnn8K+5fsnnDPKoiHsOF1aeX5W4
PI8Wcs/hoM6jsw325pGEew6fXNoybBPmfwb3HO4Q1bCs9+48vI9Bz+Edisrz
ti7NI1PuOXzfemZIxZA8iuKew9/sH4653ZRLI/m4h80eOfzbk5hL17nnsEPM
er83N3JJl3sOq340H/f4TC6d4p7DQ2d+W1N6NpdUZ2ODwAZLF09tepBLB7nn
8HKTlcmxBbkkp48bhDtdV2of1SePfLjncDfR+6y5Sx41cc9hhWmB7zc8yKON
3HP4UVhp19MKH+kb9xwe0OQzoWnVR1rGPYf3+vraP3n/kT5xz+ERl7wyugz/
RHO55/Ct3uuODDr6iVK45/CbwtSCqU2faAr3HHYct23t5fn59Jp7Dl+5+Wyp
z6N8msA9h1ef/T77s1IB3eOew5JefyIjlxfQYO65K7+fjRzy/V4BXeaew8Pr
T9vcaiigvtxz+H5Fb/86nUIK5Z7DmlrDHFPHFlK3K1jQsMG+uX/7GhXSPu45
vOH2qd57+xZSOy9cEHYL2ym3Cdfbxj2HHctULmm9KKB67jm8+laeW4BXAa3h
nsMViW71QeYF9JV7Dter9F5k0r+AHLnn8Cn5RO/DGgWUwz2Hq7VNVqzRL6CZ
3HM4+Or5f/vw+e+45/BVycXevu4FNJl7DpdGLV/74lwBPeee89ffvXNY95cF
NIZ7Dsd37tzu880CusU9h5cmDl89Z2UBDeCew7/OzwtaXZ5P57nn8KP7PcY2
jM4nNe45rOOtKz074xMd5p7Dyifk5cJnfqQuf9Bz2NnLyCxyRR75cc/hPi71
D8xP5tJf7jm8Kmltx6LqHNrMPefxLL5pUbE6h75zz+HW+qN1DxVzaBX3HDa7
+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
/qy/neNpJfccPnc0tCFmYwIVcc9hx4kOLav/e08LuOdw98HFZdciEimDew5b
hR61r5UmkzX3HE41kBy53zGNYrnn8OqK2PYNvdPJlHsOr+3Y8/APfD/7mHsO
P3scPcZETULDueewf3qvJQOaJXSVew7bvy0se5ieSf245/BS4wO3vS5l0Rme
DrgpV8fA8lA2qf5Ez+G+/u++aV+SUhD3HL74VnPf0poc6piAnsNfr1mf6b81
j3y45/De060P7lh+oibuOZxY09q/wamA1nPPYfnO78yCV3ymCu45fN3VK1Lr
dRE5c8/hNdEnfK6OLaE87jnc/2arfFF8Kc3lnsOfZPzfGK3/Sincczgtopre
jS4nK+45nDldqdhco5Jecc/hP7uLzXsaVNFY7jls2rJactH5O93jnsNjtm3z
eLbyBw3mnsMBmiqlp5/UUgT3HJ4S8jM1R7+eNLnnGz2o07TTG6Y//knHuOfw
qRP6fvr/NVK3qTiwYA0ni9l76Bft457DDY1uD3KM/lAr9xw2TrWYsH/KX/Li
nsPHIrxPB2z6R3Xcc3i/z/WFe+1kxBruOXyjx+brMq7tRCn3HJ7V2X7pXV9Z
4cg9h3PjC2J+nWsvsrjncMXNo8910zoIW+45/OPxwcQL2nLiPfccfj9qzJEF
FzuJydxz2Dro5FO3VfLiOfccHrqrteeMHV3EKO45fHujy5Coz13FTe45vCrG
WKJmriz0uefw5wfJki13u4tz3HO4foZ2js3gHkKNew530zRePfSBqjjMPefn
dfnJtz2LeonOYXzAYP2FOfxQNlcXu7nn8DSVgFsVnr3FX+45bHLHrWDInz5i
M/ccps5b7seFaYsq7jn7eT/NAwY6YgX3HL60JyHgcYCuKOSewzaVE9YZN/YX
87nncB/tc6WDN+uLdO45Pz+l49vMtA3EdO45rBOe5qllMEjEcM83edAD2Ud2
Rk5DhCn3HD7Q+H7n7GvDxEPuORwfbzRyzj9DYcg9hyWeA5aqGY0U17jnsPfB
v/W3No0S2txz2PKHY8iEe6PFKe453O7w10SXgjFChf9DFzz2aPx1w65jRSD3
HF7WKyTWzXGc6PADPYfLuj0/d+3ieOHNPYf1vm9cGJ02QTRxz+HmARvd5jQY
i/XcczjkwYCNb9VMRBn3HJ44/9DpkommYhn3HC62On1uuPMkkcs9h0e9q7d6
7mMm5nDP4TfDVPonTCKRxD2HsxLWW3e6TsKSew67mzW0zFMQ4iX3HG45u3KH
lasQ47jn8MksBefBsULc4Z7D68afykvRmiwGc8/hD3fC9fQ2ThYXuOdw5pMz
BaYvJ4ve3HP4m8fmsmky5iKUew6H7qlzthtvLrpuQEDgvuEeE8tXmYu93HP4
yWTrK+XB5qKVew5fqOxh4XzXXGzlnsNHPF7lTk80F7Xcc/gjGb34Umou/uOe
e3jQvELfI8f/mIti7jmsfLprj/JOFsKRew5veetnE6pgITK553BjsNWlJzIW
woZ7Dp9MmFL+sspcJHDP4WHPTCJuZZoL4p7Dea+iPHWemoun3HP2ul3hyafN
xSjuObzpwbvO9VvNxQ3uOfvtxFCN2eZCn3sOOy3cmjhG11yEcc/hKS31qt+/
ThY9uedwi5b3v/LwyeLQ//54De+XPhSQwuzJolMcbze8fzveY5F9qxB+3HNY
y67A3TBSiD/cc3ib/+uqeDshNnHP4dCeect+/yRRxT2HA3qMXNISRGIF9xyO
k+1g0qcriQLuOazYfdLxBhkzMY97zh7nf+u/QlORyj2Ha39MX+H42ERM5Z7D
zbp3fibvmijecM/hLk1bMpzNjYUJ9xwuHR0SubTDBPGQew6n9pHpnigZJ4Zx
z/n+uu287hw+VlzhnsNpi59LzacYCW3uOewwa8Vw5V+jxUnuOfwlqil+8KtR
orsVLgiTco8//YNHiv3c8814vyhskpKcRghZDRzQ8JU3NxVeOQ0X27nncFJ5
1Fz3v0NEI/ccnumhuXbwlUFiHfccrg+cU3Mj0ECUcc/hpaPTip/F6Asn7jns
T4t3bdDQE7ncc1h5MCkaeumK2dxz/noRle/KP/YTidxzWKaxePoh/77CgnsO
6yq1G7hkg6aI5p7DdePDih8dVxdG3HPYOq69o2qHXuIu9xw+nXxmpdqzHmIQ
9xzO9vW649BFRVzgnsOpjlpdBx5QFr255/BhC8NDte5K4ij3HE44ESPRaK8o
FE+j53CR68K7W7zlxR7uOTz/cJS8abOc+Mc9h03nmAQnPO4gtnDP4dEz7t62
SJEVNdxzuCl/kOxbx3biP+45PGLVVdePk2RECfcctqxTvOWq848Wc89h7X/u
OwofNFMm9xxOuetiH7P8N1lzz/nzD64e6GzeRPHcc7iw6l381bENZMY9h/94
vLeZPqaeorjnPJ6eR3M9p9TSSO75Fg+KuJ+2w6hbDV3nnsNrPkdo3l9URXrc
c9ikpTrC92YlneWew8vmLF9wbXAFqWpiwcA7O6/Tkq4to0Pcc/hmc+DJ16++
UKfv6Dm8MHCWq+moUtrJPYfP5TSrW6YW0/8AouyYLw==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{326., 0},
  PlotLabel->FormBox["\"Data: smoothed, bkgd subtracted\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007440734375*^9, 3.452007655046875*^9, 
  3.452255902453125*^9, 3.514556681267*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
3+DJqqjn8JWWVzYzkj2ZPfWcxvd+p0qfUV6sgHoOs4M5v4wDvZgF9RzWjT79
5sgHL5ZOPYe9YoxXlyl5M2PqOWwQ3iPPzcibPaeee+DzTT+V9MHu3mwu9RxW
t1+jNincmyVQz2Hl+I2WOrHeTIt6DvuqFd48ft+bXaGew3Lnwp9YiN5MjXoO
R4enLzj+0pudpJ7DF9qG1W7HdSX6B13wreoehxOuebMD1HNY4sTlBwd7M4Ua
9NyD/j1E94mPmDfbQT2HR6RM9lFq8GKN1HNY9c0IK50oL7aVeg43j8qQWeh5
se/Uc3jsstCB0795MhvqOZzg4T3otZcny6Wew6sqzHptwXivoJ7DfrEZTRc2
ebC31HP4eKWKn/ljd2ZIPYez3xk/u9Hqxp5Qz+GNcwwmfJroxrSp5/COqwdb
7li5spvUc7jEPOtyv55b2TjqOfzdZX3nvsZb2EXqOewu3Rxy0H4zG0w9h1td
Fu1tmOLEjlLPYesXmv00IuxZTzcEhMZjSfFB37QNbA/1nF6vvyDxxN/1rJ16
Dnfu+XX6xAmWzJd6Dt8vunYvb4QZq6Wew6YOh+w6yy9lm6jnnvi83s2/c/Qw
A1ZMPYdbA7hcb83JzJJ6DiuvDK1UO6HKP1HPYU2jvUldbwt8MfUcrjbke763
mfIU6jmc38NzoYawkgvUc7isYND+T5Wr+UPqOTxzjKnzz9PWfAr1HG7XEk03
xdvyOOo5HLtdUrBtvx0fST2HQ79duFs605GfpZ7DIfrV39NCN/H+1HP45nsf
he37nfnh///rNTxf0qMAFXcX3uUlbTf07/qWtQ7jXHkw9Rwe/le64GV/N95C
PYc3rfjmf/mPG/egnsOBfQdXbvnkzn9Sz+EY86LrsmMe3I56Dmf2sAzK0/Pk
+dRzWOWaQ6pChic3p57DC04X/5qu78XTqOew08GBXOmKF19IPYddl2REGrV5
8WfUc/iekt7dv8befA71HF5YmR889ZQ3v0s9p9cb7+qq/s2ba1LP6XrImomX
+/rwGOo5vJ3dCGiY6MOHUc/hIc8jG5ZM8+EnqOewr9INnT1aPrzPfNwQVk2Z
On/laB++n3ruhe+7m0Mf6Kn48A6DcEDDYfMn9Gjq4sO3U8+9qI8eMrVab95A
PYft2xv0L6V5cxfqOWwzZlynDxe9eTn1HP5U0KagvtGbr6eewy+vPVvec6A3
z6Gew3MrzvvPfurFl1PP6f5OwbHx1l48lXoOl3XxzVH748kNqOewtotrDD/m
yR9Tz+HR2mnV+8d48hnUc1hr6i6LRdEe/Ab1HE4JOFqdIfHgY6nnsIem294/
N9z5Beo53DPi+/gdZu5chXoO/1ja3Om3zI1HUM/h8gitSMOdbrzHKfQc7rPt
mmRXNze+m3oO/5JplE4Jc+V/qefwmyFVd/uouHIf6jkc9OFmtuXwrbyGeg7L
hk5SOpm7hTtRz2m8byifi4p25kXUc3hmLydtt+2b+VrqOZz7PWBlhekm/pF6
Dh/b0OYi6e7EF1HPYb2nx62H3nbgydRzuLPD4ZKj8+25LvUcrjU+1H92+Ub+
gHoORyjVO6ff38AnU8+98X163Ngjv+7Z8mvUc3h+Z8OTzgk2fAT1HM6J1h4W
FrOen6Gew5pnV8kX9bLm/ajnsOvw2+/6J1nyQ9RzeONhxy/ztq7hnavRc7jn
j0XuKYYWPIh6Dv952bWMzTTj/wf4Kipg
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{326., 0},
  PlotLabel->FormBox["\"First derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007440734375*^9, 3.452007655046875*^9, 
  3.452255902453125*^9, 3.514556681313875*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJwd2ndYj+0bx/GQkRIZKSJNFam09/fMzMjMCEloWWmJ7AYqI7KJSouiXRS6
lJRIZUZklC1CMvL4fc5ffzzP8Tri7r7muzqoua+ZubyzlJTUZfyH/3/G17bn
w8UBktBVO7LvzkqnIS7LrBvhXXKBPteHnadDY6JWvoH7Zm988CnjAvXWzz75
Gfb1jr1mFZlJOxXrq9vh3IQC85smWdQJz5RyC5Dsl7nlX/Umiza80zbqAev1
vuOUn5hN3+qmuveBI9eoaGrOzqGVxQEHlOC580+4FL7Poeak42XD4I0T8lyT
g3PJde+1Nh24uH17nWdHLj0MxgPhc2PkIzz982i6e595lnCKrINWr8d5VDnZ
fBfBPYMWhFSPyCcHU9dLjvDCZ2Re4ZFPRUPDP8zg91m016Rkbz6Z9EhXcYE9
W0zijuXkU0YrXhBe8NExyK02n7Sf/NrsA0+XzZ9h9SKfTpUNy/SDN+lfePi4
IZ+Uzk94sYG9ZHG0ytV8ijm8um8oLPd0WVpuVD713HZwTBT8NTq7R/30fAr1
wYBhL/tX7bMU8qlj1quk4/BARdvuVmV5FIjlSIRvDo39o7wyj1owfenwqJEy
U+e55ZEnhpsLrxxwruL1tDx6jtcrhn2/ec/rbZlH8/G4MviAk1dBkHIe1d3C
B9zap6dB7fdcmpz/7e89uCbm8TqNilwqOzXI4Cm86k7U95uRuWSL2WuGHTuP
8rhpnkv5fl4xn+DwvJX379XlkMFCLAi85teSCW1Lcih1HB4Idw+/aFv+IJvU
DJ5qdlsSIFFrMsk5Z5BNx5Sk58jDUhP1U+dszqJ+nUfsUIQbZeVMet3OpOgP
MwqHwu5bLh4y7JlJXe9jgWGbCNno2RbnafMVvCC84On7ytgu6dSeUj7ZHG6r
Gjtz6O408o35tNEe1r4bkjH2QzK929D//AT46uEqi2/6Z8gd23kaPDJYx69x
QTw9wfabB39UeW7Z9OkEzebtAne0HH+QcecQ3cbyesF3d/nmP766l8ZjOXxh
b2nt1r9TttJVTF8wXL27qLpsnJGwwHC3wY8qJz2ICt8usvB6u+DDvlf8rf+L
EXp4XAycfP5oVdbuYyLxKD7g8Evde1cfihcqoSU34+H4L1NPC/1kcXDlmz9p
cLqMa7qW0jkhP0dePxte+fPL6OTfF8QOe2xouLxL2Ct952whpYsFgcv8lf5r
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
bhiJW9xzeHysztlNxaPFOO45rGoR++LoJWNxhXvO71dl9XbKRRNhzj2HFxd5
H5t23lRkcs/hzKENM9z3mAld7jkc/ePkV9Wp5iKBew7HOvjdkntiLgZzz+ED
XbbO01axELHcc7jcK67j63Nz0esneg4Xvb5SXCRrLiK453BZ3rf6f8mm4h/3
nOdj/CMjg2xjEcw9h+eN6JRjb2gkWrnnsE23uwZfnUYKH+45/NR5/zzT+Vri
FfccdrLqnlmroCIWcs/hrs+vjR5tISfuc895fjsNqf2bUl3ixD2H5YbI6ea4
daMb3HO4w3LCzYnDFEnCPV+J89FR1JJVqEoXuefw6z0fll79rkGjuedwTPLn
FabzhtM57jksbDS/a8vqkSb3HI4eba/iOHgkneSew8fUfr8ZdUqfFLnnsH7w
1XqRPYr2cs/hcX6yYd9DDKjHFFzQ8MXoic8cBxjSNu457HNgvraLnyH95p7D
DmtCO6vfNyR/7jn8Y2aHwjZLI/rIPYcLp+w0Kz1lRMv5+MJ7ntlGhHQfTc+4
53DwsNjNNr6jaS73HPZtW7Vsd/1oquGew84226+0OhiTI/cctty4dmuXdGO6
xj2H73x6mhfc34Ssueew8skc25YQE8rlnsOd21WyFV+akD73HJabFNQlabwp
JXPPYZU+krjpaaakyj2HZaWtLO+jB0e45/CX15+mfsf39wq30XP4xL/0qe+u
mVEk9xw+9053X95gc+pyGhcq/LU1QWIeYk4buedw/FPzJS+bzKmNew4X3d1R
OHG2Ba3mnsP9TU4HfLphQW+457DXw6PDE20tyY17vipA0vOSlOO6bEuq557D
MQPdPziqW9FM7jm8rv3XsN47raiKew47rZ6i0P7MisZyz2Hr1c9GPFSzpsvc
czisfuyy9EnWZMY9h+V3jjT+Ns2aLnDP4R103/UR/rwO9xy+t7zANjbPiuK5
5/BaT4ux/eStaBD3HO467a1JqZ4lHeCewxOaeldqyFmQnBoCDPfva1Akl2tG
4dxzuNJ5yzYHXVP6j3sOr5L/+Gv9dmNaxz2HbWhKa1uDEX3hnsNyckkBmdaG
5M095/GEe2RUjdOnl9xzOD6o1+sVo/RoAfecx++hvr3JYjjd457z8631Rizx
0aSp3HP46hjVw/JlalTOPYfD35wqHbZrKNlzz+FbwbfeS9coUyH3HB5fc7Lw
vNMAMuKew02u3494fe9DZ7nnPB/jdynOnyVDGtxzuHfLoM1D46XoBPccLvN8
27xzT4tkAPcclvKVRI39Xlmyh3sO5x2PO++t86OkeyCCuRrvtyly1a8cabGV
ew73Vo29uT9AXvzinsPPXrp9L9bqL/y45/DRDmONy4rK4gP3HB5bsvxLocJQ
sYx7Doe5nVLTOqwmnnLP4Us+LRp7zDTFHO45/CP6stvxJm1xh3sO+9cvkLpy
SldM5J7DC3wOvTb0GCkE9xzebqv7TN7MQFhxz+HyxOR/ad2MRA73HDacW96/
NWC0GMk9h/N+/WnKaTIWSdxzWP/puDvFs03FUO45XB15svh2qZk4zD2H702d
rxtlaCH6/EDP4ckPdDp2H7UUu7jn8N7TQzqW/7USnSvRczjxzJmKPS42IoR7
Dm/Qy7DWumArvnPP+X26Gqpb/rQTq7jn8NJ9yn91lCXiNfccPrA5WMM6QyIW
c895vgceHFllRuIR9xxesaBaZm4uiRncczjy4IQWV00HcZN7DqtefrHWK9xB
jOGewzmD35T9uu8girnnsEibf/p4/zHClHsOL7dfO77efow4zz1fEyCpmajz
UDJnjBjOPYdNt9yxbodPc8/hPwW3s7Xw55W553BkpJ/xIukxYj/3HD6fH7Cy
PdFByE7CBMIrvG12Kao7iDDuOXz4+IxZZ0JJ/OWewwOC/to035aIIO45nN3y
8F2GjER85p7DjetPLHkaYye8uOfwYsVli66Y2ooX3HO43lxv3tpP1sKFew57
1h/e1CPOStzl6xmO6b9vQf8+lmIK9xwOdmnSmfbHTFznnsO6JxqW91ltIuy4
57D1ghOB3olGooB7zs+P/jYj6qS+MOSew19+pW1f20lHpHHP4emlyWPfuqkL
de45z0db00WDAmVxnHsOx/9YnTJgiLzoX4We8/hfKozIHfqtZDf3HH6p0P/M
ttTvkm5xGDBsrmZZdcxcnrZwz2Hlkb/DVR8p00/uOVw1JGF8VKs6reWe85+/
ZxI84Jouveeew3Eaj88G5hvSUu45HFI7I/dOF1Nq4J7zetb6be5715Kcuee+
+P59aOyKjTr2VM09h+ee8xr/ZqMDTeCew9P7xVusPzKOSrjncJns4TeuDRPJ
knsOZ1k3R910nELZ3HO48r9NtxReTqMR3HOYzqcZD3kwg85wz+H2UM8z+fWz
aAj3HF6V2xB84j9nOsQ9h/Xj3U2UJsyj3qo4ILB8ZV/FxjwX2sk9h/O15Lf+
mrqIOn1Fz2HbE2Wpcj3daAP3HN5W9CO5MXwJfeOewx4nVtRuU1pKK7nn/Per
dv38eWUZNXPP4e7ru6nNWudBrtxzuNqiT4exnRc95J7Djw5MrsuQ9qHp3HNY
Jz4421esoEruOY//wei/x4NXkQP3HJadlPu63ngNFXHPYatY1a6KW33JhHsO
H1y4e7JP0FrK4J7Ds8ymPXCN8iNt7jnP30Yps6dV/nSKew536N+/bO0QSErc
c/itdEPh/NYgiuGew9JL1J7vqQ2mnv7Y0LBSUXrJlMcbKJR7zu+7b1mpa6dN
1ME9h3csXTfYzn4LBXLP12J/+evm5d7fSi3cc7j6/swv1SbbyZN7DvcLrrbo
VxlKz7nnsMLaytcfo8NpPvccvnXTzfH0mh1Uxz2Hl/W5fqR23i6azD2HHwn1
LMspUVTGPYeHLPq6onz2brLlnsPehX2mpYbspXzuOaxU5vbQ58s+MuCew2Mc
P1Y8cN1PqdxzOPL7G7ubnWNJjXsOF33Lk1O5cJCO8XLAP7L7T6ledpj6fUfP
4W8ZiafatI9SNPcclh8T4Vz39Rh1vYGew3++T3z0uPAEbeae8/ijljQ/Wx5H
7dxz+GpSW6Bfj9Pkyz2HK6UitYM+nqZ33HO4+/Pwy6oP4smdew5vr+n3USk1
gZ5wz+GSJ0GSuFWJNJt7Dq9bK/PvqNEZus09hxvM/sr8aztD47nn8LG0Nz9M
LiXRVe45XDbFxWVyYDJZcM/huLJlq64rp1AW9xzuNue/DZ5xKaTHPYfL337w
+iWbSoncc7j/WX+Dv/6ppMI99wuQOP6NooIHqXSQew7HPFv5a+/oNJKfiAsL
XnzBcb1eWBrt4J7DPRc0dQoqTyOpwdgwcFn501cHf6TReu45fHfWkQXOA87S
V+45vKFKuS5D+yyt4J7DTd+3DnLVP0tN3HP4Y8LNDhfds7SIew63mh3+FDr4
LD3gnvPX69gd3trtLE3jnsPShkMHWb9LowruOfzmZkbDzvw0Iu65H/8+akr6
N480usQ9hx8fDHeO/pFKxtxzeNPAy7l6nqmUzj2H99S6rk4sSyEt7jk86eu2
wPh+KRTHPefnT++2NH9uMg3knsO1bZ/zn8Yk0T7uOY+nr1J7SeEZkjnBFwzu
X9m6CT6XE2k79xzu+rWqImV/Av3hnsOayYo3cqzjKYB7Dmv3GX4nbP8p+sQ9
hzUSHzpuOXqCPLjncFywrfzovUepkXsO98n3ORnqcYjmcc/hUfPnrvZVOEC1
3HNer+5FUkpX99Ak7jkc6zP0+O22cCrlnvtjff7zk8uqW0c23HNYeb7ejcDJ
kyiPew6//FqTanJhrRjFPWeP2efSkREqUrjnsOOk9R9a6vaIYdxzuDyubIXe
j1hxlHsON6g8/OM8/pjoy/+gC56ut1Fn4MFTIop7DmtVDjS/eCZBSH9Bz+Hw
NbvPvTyYJDZxz+Ge1/vnHhqbKn5wz2H3qRc3a9eeFWu453CyU1erwoUZ4i33
HN6Yc2PunE8XxBLuOay3weBwgyRLPOaew3N614vSrdliFvccbr8z2tUyPkfc
4p7DTqo/V5bE5opx3HM4OGJSWKF3nrjCPYc/KN42TbPKF+bcc3i1ovXY4B4F
IpN7Dm8LfZujV1sgdLnnsJVs9NSVewtFAvccnkbbA1StL4rB3HMej9L7fPWa
iyKWew73dpJ+4ep0SfRai4DAmv6egUtzLokI7jk8b06d9a0uReIf9xxeomq3
uvfEIhHMPYdjtBerm20tEq3ccx7fvHuTvucUCR/ueUCA5JTvvTPur4rEK+45
POhe44PPnYrFQu453HP0mpsV3YvFfe45XKOYO+xta5Fw4p7Dl/arBjuWFYkb
3HPYvbE9ofPuIiHhnsNdLb6X/55WJC5yz+EpXpOqvOSKxGjuOXzwa5NLrLgk
znHP4bT+fW+vXnFJaHLP4Xe1T97IdLkkTnLPYWmPmQW5Wy8KRe45rKm1aklW
U6HY+/9fr+Hni+aVayeYF4oe1/m44fv3yukq2lsKxDbuOWwdvMHaQOSL39xz
eNwjy8j4jjzhzz2Hz5x7H0D6eeIj9xx2NM1u+TwuVyznnsMJ7jVeBkY54hn3
HG4Iu1PwQTpbzOWew+/z2htedmSKGu45j8ep5ZRM+QXhyD2HNQrUNERAhrjG
PYcPTdl7bXr3c8Kaew6bDRymm3IgVeRyz+HxPhl/q0yShT73HLa4LrViW22i
SOaewyuPyLea6McLVe457FwRO6628oQ4wj3n8Vb0Sg/JOiwUxuOBcODZxZrW
d/aLSO55IH7eevtWUpUTJboo44KGIzVb0pzDtomN3HP4j8sN857jV4o27jn8
6O6i5ld9XWg195w9SHbH8pnr6Q33HB4/y324x+kwcuOew2marq2BF6KonnsO
O7ieaVHzjKGZ3HM42bGoeEPXg1TFPYfF0EWtteeO0FjuOey/avKWNMkJusw9
h8/vSn/b+9gpMuOewyVUmFY4I54ucM/hOp/jDRezEkiHew6fyVZoeZOVSPHc
c7j5tnOs5skzNIh7Dpv8mTitITSJDnDPYd2NnjuslyWT3DH0HC79oK4TNSmF
wrnn8I2xG0WjRSr9xz2H3Qr3RVkMTaN13HM4w9UovKUljb5wz+FJ7+LktySd
JW/uOY//6ELlcRPO0UvuOXzimtbNd2/P0QLuObz+r8qMcfvS6R73HM774fjf
B4sMmso9h2Xf9da//DyDyrnn8MKWnsYfw86TPfcc/ticohuneoEKuedwmP7W
VVNSLpAR9zwoQGIwcNtUA7lMOss9h7v9cVP7Yp1JGtxz+FmU9J7eyzLpBPcc
7mUjVWcYmUkDuOdwRp7iowGZmbSHew4/GTP/vWddJnVvQc9hqSU31i56k0lb
ueew4Yro9c6NmfQ/5S6BwQ==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{326., 0},
  PlotLabel->FormBox["\"Second derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007440734375*^9, 3.452007655046875*^9, 
  3.452255902453125*^9, 3.514556681345125*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
0hj6j3sOpzUmfep8fhet4Z7DXk4Vpw647aSv3HP4VaWbV21YKHlzz+E5myOL
hnhuo1fcc1jbUFJ6/eZmcuOewwVBRsuO2ayn+9xzuH1CQc3Gt4E0kXsOz1/f
v6ZxwWq6yj2H9V8YdbDd6UsO3HP4eUDXbQbWy6iQew5PKf8zvvmfFw3lnsPr
Ri0foma6iE5yz+FBxbP2d7jkQbrcc7g++0KMq8yNjnDP+f1GpXEXN8ykHtxz
WLp90MPfydMpinsO1zzz22w/fyq154MJ/lh3u6zf4sm0hXsO3xtbVXux9UT6
zT3n8UR7thordaJV3HPY+2FId9/do+gj9xx+N/BDn75WjrSIew7bvj7vXqDk
QM+4557+0u8egTpOthKawT2Hf9YvlN0aYEN3uOfwDZnzkNCN1jSWew7PfufR
blCMNQnuOaxskDZufDcbsuWee/L6GKrlfbWhXO45fC9L/figf7Y0mHsO3+7f
2Mettx0lc8/hJivJzD+69tSPew5HPN5n31F9OO3nnsOuiVH37rR2oC4bMYFw
q7M2jgafHWgn9xzOWB0+K3G2lFpPRpDgwaesbQp2Smk99xzOnKpQt2e1lH5w
z+EnN6huU18pLeeewzVhDUM39HGgN9xzuM+v+L/6++xpHvccvrhvZVPPCxJ6
zD2HQ0rXPi0qsKEp3HP4ZciDudPuW9EN7jnP14hXWdFeljSCew5XHF23qeiQ
BRVzz+HIhjtV2xItyIJ7Du/bK7v85bAlneaew2/GWq1PDbWmgdxz2K5mlN+Q
gRI6zj1npz4d3u+OPWlwz+Eg95v/+qc40B7uOfzeYu/sNuZSUq7EgOHJLiuU
zJWkFMI99/KXbqlRDKjfO5z+cs/hkDlhnYz/k1Ag9xy+0rDR8dpta/rCPYdr
z94IzsmzoCXcc7h8fFLFQ0Uzesk9h7vVeNwfe9GUXLnncITjgrqs18Z0j3sO
7xug9j3eZBBN4J7D3UP3DZ85wpCucM/hr5qqRT16G9Bw7jksaWe5ef2ugVTA
PYfvR3/Wqe4xkEz5uIcLXm5d8txVn9K557Cy28v0mmEDSId7Di/U6JA0Yocu
Heaew5M3vVBKHqlN3afiAYHVXYLTFPI0aRf33Iv356nd3jt6ULsBuEHYeKL/
5dxJHWkz9xxOaTM4rM76q/QX9xzev++c4/apjSV+3HN43qCvQyycVMUH7jls
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
qH+QIrnnsOqIMJe73w5R22voOdz8Y+zjJ4VHaBP3nMcfMb/u+eJ4auKewxeT
GwNWdThOvtxzuEwhXD/w03F6zz2H278IPa/1MIEWcM/hbRXdPvVKS6Sn3HO4
5GmgNH55Ek3nnsNr/JT+HRx6gm5xz+Fqy79K/xpP0GjuOXwo/e1P83PJdJF7
DpdOcHUdH5BC1txzOL500fIrGqmUzT2H2834b51XfCoZcc/hq+8+LvmtnEZJ
3HO4+8nVJn9Xp5Em93yVv9TpbwQVPEyjOO45HPN82e/oYemkOhYHFjzvjNNa
o5B02s49hzu61bYKvJpOCn2wYeDSq89ex/1Mp7Xcc/jetANuLj1O0jfuObyu
XONupv5JWso9h2t/bOntbnySarnn8KfEGy2uhidpLvccbrDc/zm4z0l6yD3n
r9eyK7Sh3UmaxD2HFU379Za8T6fr3HP47Y3M6h2ydCLu+Sr+fdSEjO+e6XSO
ew4/iQt1ifyZRmbcc3hjz/N5Rl5plME9h6Mq3VcklabSAO45PO7b1oCEbqkU
zz3n609ut1A2M4V6cs/hysYvsmcxybSbe87j6dqrqaTwBCkd4QMG56/y3TE+
55NoG/ccbvut/HrqnkRq5p7Deinq13IlCeTPPYf1uwy8E7LnGH3mnsO6SY+c
Nh88Qp7cczg+yF51WPRBquGew11kPkeDPffRLO45PGT2zBW+anupknvO69W+
SKHXxSgaxz2HY336Hb7VGEqXueersT7/rVLJvruG7LjnsMZso2sB48dRPvcc
fvWtIs38jJ8Ywj1nj9jt2pIZLFK557DTuLUf6+9Gif7cc/hqfOlSo5+x4iD3
HK7WfNTsMvqQ6Mr/oQuebLTBoGfcMRHBPYcHlPW0OnsiUSh+Rc/h0JW7Tr2K
SxYbuedwxyvd8/aNTBM/uefwgolnN+lXnhQruedwinNb28I5meId9xzekHtt
5ozPZ8R87jlstM5kf7U0WzzhnsMzOleJy1tyxDTuOdx0Z5i7TUKuuMk9h521
fi0ric0To7jncFDYuJBC73xxgXsOf1S/ZZFuKxNW3HN4hbpkZFCHApHFPYe3
Br/LNaosEIbcc9hWOXLisuhCkcg9hyfRNn8tyVnRh3vO4+n1QaZTcVbEcs/h
zs6KL92dz4lOfggIrLfaK2Bh7jkRxj2HZ824K7nZpkj8457D87WGr+g8tkgE
cc/hGP15OpZbikQD95zHN+v+uB+5RcKHe+7vLz3me//EgtdF4jX3HO59v+bh
l1bFYg73HO44bOWN6+2LxQPuOVyhntf/XUORcOaew+f2aAU5lRaJa9xzeEFN
U2LrXUVCyj2H21r/uPpnUpE4yz2HJywZV75EpUgM457Dcd9qXWPFOXGKew6n
d+96a8XSc0KPew6/r3z6VqnNOXGUew4rek4tyNtyVqhzz2G9AcvnZ9cWiuj/
//Uafr6oW+Y3xqpQdLjCjxu+fy+brKm/uUBs5Z7DkqB1EhMhE3+45/Coxzbh
CS35YjX3HD5x6oM/GeeLT9xz2Mkip/7LqDyxmHsOJy6oWGIyNFc8557D1SF3
Cj4q5oiZ3HP4Q35T9auWLFHBPefxONcfU7p6Rjhxz2HdAm1d4Z8pLnHP4X0T
oi9Nbn9KSLjnsGXP/oape9NEHvccHu2T+bfcPEUYc89h6ysKS7dWJokU7jm8
7IBqg7lxgtDinsMu12NHVZYdEQe45zze650y1mfvF2qjcUE44OQ8PcmdPSKc
ex6An7fevZOW50aINho4oOFwvfp0l5CtYgP3HG52vWbVcfQy0cg9hx/fm1v3
uqsrreCes3srb188dS295Z7Do6ctGOh5PIQ8uOdwup57Q8CZCKrinsOO7ifq
tb1iaCr3HE5xKipe1zaOyrnnsOg3t6Hy1AEayT2HVy8fvzldeoTOc8/h0zsz
3nU+dIwsuedwCRWmF05JoDPcc/iuz+Hqs9mJZMA9h0/kqNW/zU6iBO45XHfL
JVbv6AnqzT2HzZvHTqoOTqa93HPYcIPXdsmiFFI5hJ7Dlz/qGESMS6VQ7jl8
beQGUWOdRv9xz2GPwt0R1v3SaQ33HM50HxpaX59OX7nn8Lj38aqbk0+SN/ec
x39wjsaoMafoFfccPnJpwI33706RG/ccXvtXc8qo3Rl0n3sO5/90+u+jdSZN
5J7Dyu87G59/kUlXuefwnPqOZp9CTpMD9xz+VJdqGK91hgq553CI8ZblE1LP
0FDueaC/1KTn1okmKll0knsOt2v20P4qySJd7jn8PEIxqvOiLDrCPYc72Snc
NQ3Poh7cczgzX/1xj6wsiuKew09HzP7gdTeL2tej57DC/Gt+c99m0RbuOWy6
NHKtS00W/R/XI4r8
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{326., 0},
  PlotLabel->FormBox["\"Second derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007440734375*^9, 3.452007655046875*^9, 
  3.452255902453125*^9, 3.514556681392*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
aNe63pSKuOdwx6/KBYrPTcmQew7LTQjplDHWjDK557ByH0nKtBwzGsY9h2U7
W1vdQQ/2cc/hDy/fTf6M7+8VrqPn8KG/uZNfXzSnOO45fOK13o7iIRbU6SgO
VPhjW5rEYr0FbeCew6mPLRY+b7Kgdu45XHYrpnT8DEtayT2H+5seDXp3xZJa
uOfw0nv7ddLtrMiTe74iSNLzrIzzmgIrauCew0kDF71xVrcmF+45vObrd9Xe
W62phnsOT1k5SeHrE2sazT2HbVY+MbinZkPnuOdwZMNor9wJNmTOPYfltw43
+TTVhk5xz+EYuuNxHx+vyz2Hby8psUsutqZU7jkc4GM5up+8NQ3mnsNdpr4y
vaRvRbu45/C4pt5VGnKWJKeGAMP9+xqVyRWZUxT3HK6auWmLo54Z/eGewyvk
335fG25Ca7jnsC1Namt/NJI+cM9hObmMoHwbY/LlnvPzRHnn1YwxpOfcczg1
pNfLZSP0yZ17zs/vrR7eZKlDt7nnfH0bfYOFfpo0mXsOX3Aatle+Uo0uc8/h
qJYjl1RjVciBew5fC732b+c6JSrlnsNj6w6XnpwygEZyz+Emj8/7ln7uQ8e5
5zweY2MV57r2IA3uOdy7dfBGlVQZOsQ9hyt9XjVvTWyVDOCewzL+kvjRn6sq
ErnncPHBlJO+ul8qugUjmCtxf2FxK74XdhY2c8/h3sOSq3cGyQvfuefwk+ee
n8u1+guruefw/l8mGucUlYQ33HN4dMWSD6UKKoIX9xyO9DyiprVXTXjMPYfP
+rVqJJprCrO45/CXhHOeB5u0hRvccziwwV3m/BE9YTz3HHb32/PS2Hu4IHDP
4XA7vSfy5kaCNfccvpye+Ten60ihkHsOG8++3L8taJQwnHsOF3//2VTYZCJk
cM9hw8djbpTPMBNUuOdwbdzh8uuXzIW93HP49uS5evHGlkKfL+g5PPGu7q9t
+62EWO45vP3o0F9LflsLHavQczj92LGriW62wnruObxOP89G65Sd8Jl7zvfT
xVjd6pu9sIJ7Di/eofRbV0kivOSew7s2hmrY5EmEBdxzHu+Bu4fXmJNwn3sO
L3Ov7TG7iITp3HM4bve4Vg9NR6Gaew4PO/csYGmUo+DEPYcLh7RUfr/jKJRz
z2EhZ+7Rg/2dBDPuObzEIWBsg4OTcJJ7vipIUjde955klpOgwz2HzTbdsPkK
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
WDuzMZ/+B4MnnXg=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{326., 0},
  PlotLabel->FormBox["\"Second derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007440734375*^9, 3.452007655046875*^9, 
  3.452255902453125*^9, 3.514556681392*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Amplitude", "[", "1", "]"}], "\[Rule]", 
    "6.921722882431179`*^6"}], ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "1", "]"}], "\[Rule]", "326.1520000000008`"}],
    ",", 
   RowBox[{
    RowBox[{"PeakWidth", "[", "1", "]"}], "\[Rule]", "0.12400000000059208`"}],
    ",", 
   RowBox[{
    RowBox[{"Amplitude", "[", "2", "]"}], "\[Rule]", 
    "4.326550480086621`*^6"}], ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "2", "]"}], "\[Rule]", 
    "327.25400000000604`"}], ",", 
   RowBox[{
    RowBox[{"PeakWidth", "[", "2", "]"}], "\[Rule]", "0.12800000000061118`"}],
    ",", 
   RowBox[{"PeaksFound", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.45200702384375*^9, 3.452007440859375*^9, 
  3.452007655171875*^9, 3.452255902578125*^9, 3.514556681407625*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}]
}, Open  ]],

Cell[TextData[{
 "The first graph shows the data after smoothing and subtracting the \
background, if any. Then the graph of the first derivatives is displayed, \
followed by the graph of the second derivatives. The minimum negative value \
in this graph is used to locate and characterize the first peak. Then all the \
second derivatives for this peak are set to a small positive number, as shown \
in the second graph labeled \[OpenCurlyDoubleQuote]Second derivatives",
 "\[CloseCurlyDoubleQuote]",
 ", and the new minimum negative value is used to find the second peak. The \
values for this peak are set to a small positive number, as shown in the \
final graph, and ",
 StyleBox["FindPeaks", "MR"],
 " concludes there are no more peaks to be found."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],

Cell["\<\
As our final example, we will generate some made-up data for two Gaussians \
with significant overlap and with some noise.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"Gaussian", "[", 
          RowBox[{"x", ",", "10", ",", "5", ",", "2"}], "]"}], "+", 
         RowBox[{"Gaussian", "[", 
          RowBox[{"x", ",", "8", ",", "10", ",", "2"}], "]"}]}]}], "}"}], "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.1`"}], "}"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20", ",", "0.1`"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "mydata", "]"}]], "Input",
 CellChangeTimes->{3.452007473078125*^9},
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
1cpJst/dp+4CyyAiuPGq8K1U8j8E0Iuz
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 20.02506725361271}, {0., 10.492465862778962`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.45200747409375*^9, 3.452007655203125*^9, 
  3.452255909078125*^9, 3.51455669079825*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],

Cell["\<\
Note for future reference that the first Gaussian has amplitude = 10, center \
= 5, and sigma = 2, while the second Gaussian has amplitude = 8, center = 10, \
and sigma = 2.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"FindPeaks", "[", 
   RowBox[{"mydata", ",", "Gaussian", ",", 
    RowBox[{"EDAShowProgress", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
OSTucMHr3ZKmaJQ9YBmzK5v8H/6KjKw=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Data: smoothed, bkgd subtracted\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007487015625*^9, 3.45200765521875*^9, 
  3.4522559129375*^9, 3.51455669642325*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
CD3xf9e3HDo=
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"First derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007487015625*^9, 3.45200765521875*^9, 
  3.4522559129375*^9, 3.5145566964545*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
/Ne4wv8AjTj1Lg==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Second derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007487015625*^9, 3.45200765521875*^9, 
  3.4522559129375*^9, 3.5145566964545*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
f7Eb/A9F+Pso
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Second derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007487015625*^9, 3.45200765521875*^9, 
  3.4522559129375*^9, 3.514556696470125*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
doGCrvAvhLkDfg==
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"Second derivatives\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.452007487015625*^9, 3.45200765521875*^9, 
  3.4522559129375*^9, 3.514556696470125*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Model", "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"IndependentVariable", "-", 
            RowBox[{"CenterValue", "[", "1", "]"}]}], ")"}], "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"EDASigma", "[", "1", "]"}], "2"]}]]}]], " ", 
      RowBox[{"Amplitude", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"IndependentVariable", "-", 
            RowBox[{"CenterValue", "[", "2", "]"}]}], ")"}], "2"], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"EDASigma", "[", "2", "]"}], "2"]}]]}]], " ", 
      RowBox[{"Amplitude", "[", "2", "]"}]}]}]}], ",", 
   RowBox[{"EDAParameters", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Amplitude", "[", "1", "]"}], ",", "9.937417542859833`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CenterValue", "[", "1", "]"}], ",", "4.573577290237361`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EDASigma", "[", "1", "]"}], ",", "2.0934276724573055`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Amplitude", "[", "2", "]"}], ",", "8.282667679252771`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"CenterValue", "[", "2", "]"}], ",", "10.355425147500394`"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EDASigma", "[", "2", "]"}], ",", "1.8442100924028646`"}], 
       "}"}]}], "}"}]}], ",", 
   RowBox[{"PeaksFound", "\[Rule]", "2"}]}], "}"}]], "Output",
 CellChangeTimes->{3.45200748709375*^9, 3.452007655265625*^9, 
  3.4522559130625*^9, 3.51455669648575*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],

Cell[TextData[{
 "The estimated parameter values are fairly close, and certainly close enough \
for ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 " to complete their determination,"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAFindFit", "[", 
  RowBox[{"mydata", ",", 
   RowBox[{"Model", "/.", "result"}], ",", "IndependentVariable", ",", 
   RowBox[{"EDAParameters", "/.", "result"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVl3c81W8bx61KyN7rTLId5wiJ7gtlpZKdRFmRiIyMEpEyEg1ZJaJfKZSG
laKMbCWhbLIrKxTx3M8/vN6v77nXdX2uRXI+beHGwsTE9Av/+f9/xRX9z8u+
r5DLrqaEpk/9aEmC7vCCuRSdO1YUSOIeQFWINOp7vQx9bG/O+mIygKwubyxM
Pn+NSFu7/I69G0CIs3+rT1g14tGTEt44Mog809Plj72pR3rRbMVD9kPIsTdW
nUz+hDz5nogbXBhB5nmXbA7FfELRl665HLg/ggx8IoMjpj6h+zuKDyXVjyA5
ppDX/cUd6NbyJFMZ7yhaoHjsyTDoRN6eUcP380bRFS9DK0G3bnS0YEsQ39fv
6NlfloDND/uRo4N5d4/PBJoq2j+cIziADoqzarbdmUBUt1RzFDmAQsM6FLe1
TKCm8RRhHeVBRGMbXHJRmkS6FkoLAZuH0E6ThfHon5OItN32yVjpMOL32Hb7
U8Q0mmx/It0oNYbu/hd1NG7gJ4pR/GQtajWGROLc8iVEfyFyzHKCe9wYmpjm
N183/4WO7NJfZVkeQy4J35+Xvv+FWvK6una1jyOnmH3p0Taz6FkoS3LBxUn0
VMMi8ZHRHAqh2rEmj8+gpL6T32RNF9BT2ZqFveI/0F9/dO+K5wIak6ON/jX7
gcJemFjyxS4gC2X2WtfiH+hJ69jI7Q8LSEGjNEbr/E9kfolkdM5kEf2kcG3y
3TqL/u0ccXpl8Rvd23HqikjWHJpl+3EwLmoZVWjkMJ0pnUN/7U7d/P3fMvqi
2R3c/HEOSRn5n49rXkZc2ns8I9nmkf1w6hU14RUUslvSdNpzHpH3EmKDHq8g
C6NmzrfqC0jlDl/ldN8fxHpY6Zp74yLaNpRut+i8hp7IKL7SG1lEHRpi3cPx
a8hmXr5Pcm0RTRSK6q2+WEP58dsVO5R/o7wHcWuPtvxD5m/I9Sj5N4ovGDFk
KvqHMiliG6J2S+hgZG976qYNpP5z0+mm78voQ/uNLYcnmcAtauAAjXkVielv
tXuxxApEzvkPspKr6Iq7n8Mzfjbovc5mIKW5imq25ITVq7CBRY68Jof3Kurp
M/uz+wQb7K72J4x2r6LAuFRv+x42EN3YMnv76Rq6/y7BZve7TdAYSkvecFpH
Sb/TsmIebAGRsirPEwNMcH30wPSTV5wgrHAOctjYoPSMx0qZCD+Y/CsMMfLe
Atd0Cw5byoiAif5qPEsdBzyNjuHt1pGEUaZiuvz3bVC+wHKE5SgRTpR9CXo+
vw0mfaprVdyJMOW3Wq7LxA1l+1PVrU8TYW54j4GFBDdct1gauRZJhPWaLsuw
Q9zwq15krjyPCKKx/wJaKrlB7usFwrcZIpjxmZT4pfBAJGm0dDCQBG0N3qur
93nA5aDyX7VwElhcvI5invFARR4pPCyGBIcXvtWnN/PAdJaA2HIKCZ6f1Jw5
zswLFpcuK14rIUGVWeNanCYvGJoKBmsuk+Ar76xU331eOOR0rYzPlww8+ooi
qvm8kOxcWNIVRIY9/u68kU95oS0xKfvWeTIUdPayyFTygsiOG4J/4sgQkd4w
fuoLLzgEPg4/mkeG7dT7z9bY+WBPtWX7zW4yBGja7JX04YPP/ICitSjwyCN5
t08AHyQUrQVo7qZAf1qzZlUoHwhyD98aMqCA8Zq+gutlPhC4W3Ve/CAFJKpV
eZ7c44NBHTUFaTcKvDPd2rOrgw9Cm37ZnbhGAR7H16eOaPEDQ3TaoLuXAnLv
HiVf3c0Pwq93uRkOUQBkb796u4cftr10lX78nQK+P/2YqIcwDwob2/2kwKfw
7TdnPPlB7bsZl94GBVKyrlecz+AHFs77O0wIVChkjRgsyuaHj1qzYgQKFepP
eG8a/o8fPhtUOE7LUmFF1fig4Qt+CDdtXndXoYJ91b9h7hb82IZo8ykdKkgN
eXDcW+cHI48UXYIdFTT22qh+YhOAuohlTvsjVDjwyMCKjVMA1I9cFo13pEK4
n/RdDxEB4PG5PtbmSoVB5s9qajQBCBx7yRj1xee5Vdu4aAhAf6tVe7s/Ffga
C8Nu6QjAAW6xnOdBVNC/Hlv7x1gAtGuUh4+co0IuGR1+d1wABKOJtRqXqfA6
Ril88YQAZJZM/P0cS4XOKbH7sj4CsFRv5uyZQIXNzxdn4kIFIN3rQ21AMhU8
DPIjLG8IwGXX2BGhDCoougo9HK0RgLZg8ZHIJ1RgL6nPvtMkAJXOidcKC6kw
ujU0w+aTADycEXvd9pQKd4v6Ez8MCEDV3PnMXy+owL/6X+CTvwLQYulZnPea
Cr/22592YxaEGf5nKUFvqNB8j8tTml0QPvHqcelUUeGSoZ9DkpAgqN+QepX7
Hr8/WdsggCYIUPDe9kcDvv/ojI6ypiAsfj8t6tJEhWLNLI0xXUHI/7w/qqWZ
Cqf6WBXs9uH1rg7uEW1UMKG9ovBZCIJQlNbYh3YqyEZ5SDXaCYKfwR3C5k9U
GJBr4dVxFwSi/8M2x8/YXmEXOH6fEgR26q8DoZ1USG1VYyv0FwSV7+upcV+o
YBGQskyIFIRgja33YrupoFpvPNd9WRAiLt12D+6hApf46lRyoiB4mgpzOnyl
Qt1bp37WTEEI/HCYhaWXCvf5+btf5wiC4a5cpxrMEW41HwMfCcKJsKmisD4q
HC0NalJ5KgjeKeUr2/upoM0pXzv+ShByr1ehBswijt/e3KsUhFCnujinASos
Pr1aerhGEDxqnw9MYW5nhWL+JkHwsk7c4zVIhQKb+cdNHwWB1S7k7SDmuEe5
edHdglBe8dJm3xAV3NdssnQHBIHBmsP7GLPBwa1pS98FoZ5evrCBmZhTcb1o
RhAeVN7ebDpMhX+L3gkeC4IQeWbuYCzmr0bEGNJfQXh3IuNLJeaS9E8XvjIJ
gel4TPY45ps/okNubBGCN4fflWweoYIfaPqbcQuBtVoIUQLzgRuTpzYJCcHO
zwvDVMwKYxnubySEwC/m9ub/85adB46dJQuBleXYdVHMo/FM9jR5IYhZCr/G
grmqv9hyUhVzjSTbMD7vjprb/hwNIai6fnvlFebQaBGjI7pCoJE1EhCJ2bar
AQT3CEHuWb5IPczqCue0W0yFwHhwv8wyfi/feRX1mENCQCgf8szB/LNtUBnZ
CUHNhJqtAeYm8o3tK45C0Kz59ncPtufDwL2kZ25CUIFkD7hjPi6RL0jxF4J4
zfCDx7A/6AaXvnuECMFeliVqN/Yfi9exV4UXhKBQ9busEeaccmE77QQhqH/+
q4UD+//M8JxcxHVsjxOki05YH/ocLX9qU4VgG9dyxONvVBg+HJVxKE8Ibm3L
OC+P9VUc6Xjq9mMh0HQkxx/B+rv4aKdu3zMhYD7yluUS1if5z69+jzd4/Y0r
5m+wfp1THcgRXULQ+b7NrAnrn16luVDbJwQ33v5KKvuI7zfBX8M5KgS0xOrI
LBwvOZoNbrdnhaC0bmeCRSs+/8uOR4VbhUHcb2CXDY7H4nXe0EUeYVBN8uxl
+YDPl50x1RYWhstiPH7/1eHzg3JmasnCELHwLqMbx7OLEA+tb5cwZCO39W+V
2P66U0wUfWE4en/Q0ATnBza32o8exsIQUBLSVliO89mLMP9FK2H4T9f2g3MJ
9r/lxCtOH2HYM153+jTON67Xq3W17wnDW1mJS9RsvF95JnfEA2EYuq2TKJ6F
9xs+O1D7RBhe5jif23oH76emEnmoTBiIfoqMT6l4v/b0Go9PwiD6jWc3bxIV
3HgC9t1mE4Eb7r03jc9T4a+M4JwLpwgkdZhMZYZSIVHnRQqNXwT2XE2rmDxL
hVeei0MNBBE4/7Zlm/cZnB9rAoLXtEXgmfEfEckTVHgSHJh33E8ENMRTNOUP
4ngdCtpQ7BcBgbmlyz7iVLiyIpy3MoqZLTZtVhjXD54S09ppEeA3+ED1FqCC
oc7yLcc/IhBWkDBtzYXzUcpZpWRBUZC/oCow8Y8Cu/YFH14yFQXXo73FUoMU
uPgi5HlViSiw+SYTjbIp8PdfU7T3G1GoOfQxx+wOBc4YSduI14pCaIHO+IE0
Cjh/fbfi/0kUFP+e/GOSTAF9Jq7d23+IQolRgIhkJAVYze5+uEoWA+KS1dDu
YxSIHnnXZ39VDDh2Ng8tSFIghp+L/bezONzPVbatuEGGOdrlpyqe4pBbb7NY
eY0MDgdZDnucFocypvsHq+PJwEhYefQtTBwi31acaYwiw+Cm7/ve3RSHp0aB
9eP+ZND+U3ntWp049K+K+By2IsOvgdMiCgoS0HDT5dIpYTLYr0+9daFJQI+P
jPNdfjLUSbp73NGQAB/Cx+BP3GTIPOxQxmuAeVI4Qm8LGUw7jI8sH5EAGa9b
cjorJMitI2XVXJWAallBg4KvJLAr6JB1mpOA9ETRyLpsElwpF8glrEjAI1Fm
l613SVBab0kaXJeAAJR63DydBCLDHRLHuSShYuD78NR1EnwR/szrsl0S6lq4
GJbRJLCM+PzX/agkfF/TvPv3BAkOWHa2+jRIwlWZkZ5pOgnCjwmZqbZLQkkq
sbROlQQF3tYNv75IgtcBt7kHSiTgutL53ndUEqSnY2+dlSVB0+vO0jMbkqD+
IDLSXpwExrJfcoJ2SMGnPRZ+yqwkMPjzJSg8WwpmJC+07ughgvs31NT0nxSw
TDq9nv9ChCuVDwlihVKQP6Kx6eVnIrRGhn54Xi4FxJDRlybtRLDnkBaf7JAC
dqXW2ef1RDgj4VZpuVkanN1un0wsIcKtfy182VzS0GyeeT7nJRFKBzTcf/JL
Q92MvNjr57ifvc/OE0uQhibv5bmNIiLEKj059kYLf48qPdr4kAj3dBdY5b2k
odRWxdMrgwjvCQ52QX7SMKlyorY7jQhjzLVP3p+Vho7Sq2/3pRJBqS7F2jFa
GgQ+PLmmf4sIJQe0/7txRxoCpWQf+l8jwlfa/dXB+9JACvX8ty2RCGv8XOYq
+dIg+UhzviCBCPpdfSsfXknDSmBw2Xosfq9TpOl6mzS4+rkWj0Tjflxv6u6+
L9Lwc+rCSn4UEQSplgupvfi93pU9Zy9ie0xQMxmT0pD2O8eTHEGE774ffniw
EKBflelueRgR2C3V9F+xE2BzZkVmYSgRFHakp7DyEGBCQ1PpYQgRfP94obsS
BNjeGLb0+Cy+XyRPcoc6/r2pD8uSPxFGLHTL/9tFADVx7kFWzI0Ur5EwfQKc
N1dgiJ4hQlpt3Q6qOQFSJTSUrXyJEJGy6LhiQwD7yeiWMDxPeJwgX2k+SoDr
JdxfHvkQQWNr+NcALwLISqjziXkTQerrY1aTMwTw36KmY3+KCGyPe5SkQggQ
36pYle1FhA6zHRdqYwhgXhz1zuAkvm/SDEU4hwD8LXU7Ok4Qwfa4+P6phwS4
sZFaaIh5N9046E0RAe7v4HeowvPNts/3P7hXEiAuPRrq3IiwmPtxTruGAMLS
y6csMPcGbojzNBGgKIa1bNSVCPkiR7xLugmQL5SUJoE5eeJKSvwAAUZRKrnK
hQjBZa/eOo0RIO+66YuTmI/FjU4wfhDg+Y17xhKYjY7w87MvEoBtR1DPR2ci
qCjBrt6/BNBcjD2WiDl+XYPezUSEpL/nuswxr4+1GOqzYT/qdmiKYT7T5nrk
yRZs57sLoePHsd5KVk8LcxLBhEcuvQLz4XvXoyO4iUAvupN4C3PzFfm0KT4i
bJ5zPRSIGfyqCqyEiMD52u+bPeYXh23fvRElgtO1DBlDzHL6P7/ISRLBP++O
nCbmTIVL09cJRPgnItKnjJlHQJLpH5kI1mzxuxQwX1wtFjwhSwStp8d0lDAv
jZjIf5QnAlPRSBcD88nmQd1dykQw3LJnsx7m/hdnLfJoRJixS3lridniDvcJ
HnUiXGP9vOqFufZSXliIJhFO7f9WHItZy0cnaUSbCDlxp3ufYH5i05G7fzcR
Rvfs9O3ETEQny0r0sL1c6txYsX1ubmduJe3F77CKe6GBmZ03dTjemAg6jH7L
05jDVlSWf+8jwqPfTLsKMP8crOU8dhDb77rI8VnMzg0OxEYLrDMl5Uot7C/T
9DiTu4eJuF9kXujG/OYiyZEdz8nnbG3Ladj/al6lZ84cIwJXbM/1q5hFdcYy
/q+znXPnDtlg/SRQzz99inV5bOYU9R1mpm2CteJY54LO24fpWH/jfXo/fwbg
+84kLJHxuuaBZ6ImwThuZhT7sjAXD5EM7uM4NTcasid54HO/M6fa4rjWMOle
VPMkAv+Par0qnEd6+PSuXcHxsPJT7ZT4DSIIzAdJyON46ZvNTglIIUK0vcKv
FswPFyOn5e5gf7s+NaDie+xe07uVnI/3fesYxuJHBOr6s7fTBdi+iprSNZi3
MpGn9j4jwpfMjuexOJ4/s7KgvziPhv6JjSfie5/kfDfhXIt1elv1VRjOD7fE
9XXUB4mQfltsS384/p1ksXviCI7LBJ3EngvYDtLk5IkxIrTM15h343ykQGYZ
y/yB9ynpsx3A76qSf3dt0ype/+axGP9lrBMt/ZEvQiS4vpiesoHfaWCrHxey
jwRBqu837t3HunhvSEw/QAJ3K23bzlwisND2vSo/RIKNwUQxzgd4P3ar4VVb
Eviv5haH4vytU+6mHe5Kgq37+jc88DvVpWKnLp4nwfemAZ1g/C7qSJtpQhEJ
3MrqBviaiRB18PPgk2IS2JRPVB9tIcJwRXdQy0sSHPMPuv+oFdeDm0M53K9J
YPTPX0PvIxEkDRf+Jn0gQebsLxsfXK+EHgk/vjVEgrcbz61fYbtsPn2UM0uA
DMDb/u3xIhHqLWo4WUXI4Bj8hLT6G9c3DUWuE+JkkBGceWq8jON0fYVLlUSG
Ly97fPv/EIH36k3utypkIP4x651fJ4L44ya+ARMyBC0WZhezk+BbIp3fYD/u
Q7iNHgxsxfc4k8b/nzkZ3FRrODk4SUDQPiFw2pYMrhqMKpttJKA2sAhtuJIh
LowbWvlIoDK+U5QQQYab6o/05HF9/tV4TzQK9zXGjIBnMhIkeFq4RWw8hgwq
bbrZ0pIkYAR1ihVdxefpzjZskiaB1iY/CZRBhr8ehu/+I5Hgz0SXxP27ZAh2
UH0RQyZBefNuyS05ZPhgE192nEIC3ZtcUm0PySCioNvAKUMCfcpDaadXZAj/
+y5WRY4ErFt4CO/LyPBAQy53BnPNVCBheyUZWkJTPR7IY7sXGxB/vSdDKddU
BZciCdhT8omW9WTQoYuolWFuDOEjlTSS4Zb3uORx3I+Y6Q2QLnwkw/XsfJn7
yiTYJmNIHvlMhliOY/K6KiRoZS8gG3WTYaxW1+8T5kPtoRSeATI0td3L+In7
GxsnYZmsGTKkJdcyz6iRILmAL7nhFxlGJ3jtbHE/1LzK9W9hngy7inbufINZ
P5W10/gPGUKO7woMZ5Dg/Ng6+K+RofB91esuzKXqf5/c2SDDqcpzHkrqJFD+
OBs9v4kCi4JRdfWYPQgzs5JbKTDjP+rGvYMEOd7jDkZcmB/kG5hj7qsY/uDH
QwEXlyibq5hFOfrVM/lxn6uncKsWs6Vdz706IQqsd3osrWBOfPCZa06UAtwd
wn7bNUjQsNgWLIH73j0E8TVzzGwGTaN7CRRIXXBPDMSMkuvMfckU2Lm0IX0L
c+hA9et0GQo8sF7KLcL8UrlSrlaOAgkjniK1mGfDSm/+UqSAo2qsdydmxcbn
TOKqFCi9l3x3ELO7aNGpPXTc1ye3ZY9hvuee3+2zgwKdJ+76jGP+9iJvT5oW
BTKLPNaGMQuzZj99v4sCLOoP9Xswmx/KlPy5mwIpomNajZjjs25fEdWngOZ8
+ZeXmOt+XF/U30uByoFWgUzMzDqJx7yNKXA8p2f8HGaduNjm2/so8PNljqkd
5rPd0VrvDlAg14NZXQVzsWxE7swhCozM92asY3v9CAjjFbHG9khUCm3ALPc+
6JyeHQWOJS7XJWJ24Tsz4XUEzyEB1qEHMN918rZKcaQAbPVJYMfcU+BRVXWc
AgN+Ib9fY38KrrkoTbtSgGpYVeCFOTbVng288H0PBf4owXqoGbP2PelDAcHy
ejdrzOvqh3pv+uG5RFya5wfWU8BHoxeTZynQLmLXxYG5iGBAFAyjgEr7g/Ek
rMcp790Ju8MpwDvYxsmH+RjHDtcb0RQ4WGjgv4H1m2FHa6+8TAHSysWH3pi/
PFDUmYijwO0vlzo7sd73GZAFdfHc5CB/YfUGjo+YZKmIEzcp4LP2e2wSx0/V
gOhM8m0KlO9VK9qJWeMcT80YnsP8vpZW1CmQwK+Rg8aH57TJVIEFVsxPRDdn
7sqlQFrnwR/aOF7JL9f8k/Lx94sH+VK24/j7OUnRLsH2o9/2YqLi/GD9Js+q
nAJHmzd+8uD84F55ffvpSgqkf2fZK4bzR1XCLsXc9xQ4F2FlKUYkwRnFq3Tu
djz3Oe5zb8X5iXDj+Au5Dnz/XI3pxzh/Nf/doWHwBevnVoBYlBgJZBr7dwb3
Yr1dTHSUFiFBtwdNb3gCv8c3Yws7Pwmi29ner01TQHiWxbKYlwRqWj17RH5R
IOjqJ7INDwnitlw0NvuN/cl6aXccF85fDzoOvmKmgjWr+Pz9zTg+R4Ic4/Ac
HB25MpKG8/WBffsGc6WoUPXxTupXnM9XiwnOb4lU0KXsvCW4RASrix/cFmWp
wHS28HDAPBG2kMS9HRlUyPknVjE8hfsgx8owuhkVZspkg4O/EkGsLvmfGZ67
LQf7bMy6iVCn7H7hhAUVVNONLMVwvSH8447KtKPCbyr1zl1cjz5lHIvb7EaF
OZZssPlABM0e1rSv56nQMLvmFPwC92Wl2pe0Iqngv+3b8Vxc561u+/mlRFNB
/MgZ5Q+FuN+0HjCxiKdCEtVHahnXz8KP5X8bUvHc3p5kNJ+J62Wjn0PZcyos
lkkdPIrnD8ajh8YiJXjOZ++6swnXd/0rA+qB5VSotYeneedw/Tfcv02tmgpe
T7nJLYFEyHgn9+ZhKxWmSaFmZbjf4a8YIKROUkGOJTZ3iykRSOnCXEszVDii
wpmhZEgEWsj+FctZKsR0CXuY6GP7ala08yxTgf9l59WTuE+MfZ4SeZlNBiTb
zu3dp4D7rSf7R4IIMlDhW5R1hR33e5kVD6ytZWBhlqwqEE6AoLGY9RA7Gdgu
ahPJFkiADVULm7tHZCD/lcDhCTyH8L6f2DR+XAba9peVXj5MAPqkkFuwjwys
6V2RlMVzUNAOX0rGZRkYSNv7b2JMGv61UO8NlslAuuHIkwZ9aeDauJrmJS0L
nyLkTT3xXLz8tuJIB0kWSvi74ozxHD0cMSm1S0YW5vRvWki8xnM0y94cDiVZ
MOLtqM7IlgTnzWv5j3bKgrZvoSrHKfx928nX41ay0JfBJVOI53hnScMBl3hZ
cK+xuHpXQgJKdq5THVZkIcmUrP5BSww621/IWrRuh5KhettHu4TAfnPMtpFb
crBtNNLU5hQfnBL8nXDARx7YIqpizqxxwGhV+JyVlgKwCTCdfevHBuzMU0Tv
XQrw+j3TP2acqpT0rM0v7VYALQuiiZU+G/hXKxa93KMAbdnhtnICbMDyrvuU
8CEFONO/sPvaS1YgvKdPdHkqABKSs3D6xwL2tWP99hkKUBy8NLkzjRnaGw40
H1tXgJs3tyUMb1pHNpGS7q+ZFWHL4V2D1t/+oV6tqQ2RTYrgcN5JdO7pPzTx
3yVGG6ci3Is5vDPL4R/auPQ6XVdMEXTD3u3/+nINqegreIqrK0Ly1m71ptOr
KKF80+bPnoogaxl0L4r5D+I/05Gl6o15m9WPX99WUKp89s54X0WQ+lhXFPVq
BeWm6njrn1UEDcugANKpFVQR5P/5abQi8DyO3rKjZxlN0YdyrmYpwovT0u3P
y5eQyePXyKhTEVocv/S/SV9Exi3Sez27FeFq1GbqjnOYf0WYxn9ThBneK4HN
RxeRIWOvdduQIkwGmnI4khbRnoqWk7Y/FWHTvdJ4zvwFBE39t05sUYKytA/L
UdXzSGuaaebyTiVQdnljGcU+h7S2ucw90lECl5HNKRs/ZpGmau1SE1IC6q+a
TRkds0jDP5aZ11AJjMJ2yqtmzSL1VT6RVAslKKBNpzdqziIaJ0X/oZcSJFRW
mZ3v+4nkFPemfrijBJ8eVgipj02juJqt7CrZSsBrZkseejGNZo62nr2RqwTH
+E7/+Rg1jYqSbG0dHytBn76Ddjh5GmkseQovliqB3H6Sy6rzFDKoTrxJ+KwE
pTMFN+xnJ5CjbXdSEIcyhE2sft+xawxVzWYy9W5ThnZW/abffGOIHHfcV49P
GeIOeNbMT3xH319PHeQSVQae6Vb++7e/o1Pkf9w5MspwV5J5/cvyKAr5Qbra
AsqQp1lRZv9+BN2M8oqlnlUGcRWtVoNLQ+j05RpX81BlmH57nivYbQiZxkvB
ufPKYNlY7PBt7xBivtG21BGlDD3/tZ1V2TKEfHIYrlFJynB7ejaUOWEQmVSv
7h5+pAwOGZVJLjoDaH09fjGrVxmY5cxzJ+u+oR6W721NA8oQ2CX15Pj1b+jF
5t2Pl4eV4c+nArqS4zfkxT17/OCkMqzIn95XsvQVdUtZta3/Voa9p40zMxS/
omIdyfyjPCrAna+RZpbbjU6EPnGS0FeBKTa5nZ2tnejF7X5zzb0q0KqZt+99
bidiecmrb2msAstr5W2/QztR5q8AavwBFeDsUx+SletE7a66k3/tVaBQpIP0
9NJnpHWw9cxXfxUYTlZ0F9nfgTios5fS8lRg1f1kIBvnR2SrRz778iHez8Tc
bmSiHeU6Wnl8fKwCm/wE8tbq2tHutFLTrcUqoH6ly6gvqh35c0fyhLxRAe89
FgcPMLWj3hW+NLsuFdCjq/45vKUVFbQwnohsVYXy65djH7k2IgfnD1vOcqmC
+mXjK0i+EXEtO7h84VGFbxqHNUx+NqCTxBjxW8KqsPMpvfNFSAOS8+++wk/F
3wPsn/fc+oByRM+7bUOq0M4lVlU1XIcOFfBVn9JXhew56V2osA4x6T+QbN6r
Cq8qhKNlQ+uQk1dbR5yZKjAH3+xXEqhDkm9I+uz2qlBxWevMZtNalOJSJ80a
qAp2gjTFo43v0d4V+1DnYFW4GCTCIpH5Hi0m/OqsDlOF1bPPTmv6vEeWr0Sv
RlxUhUmpT6mxAu8R71av1X/XVCGeP2/bRed3KL6Qp3slXxW4r6kL6vJVo4g/
dsk/B1VBaECr7/aRSvRoJdJOcFQV4HVsnIJYJfq0nE/QHlcFn5xiNv2u14i6
tFZw6YcqnCyYnl61eo3q5+81Sv5VhbMC/beibCrQlqDFyLytNBD9Z6Eq61eG
Mn9fcdPipIHUXwHtexpliBYoZdLERQMlHpuy5LVSZBdgyDvHQwM9lpfDXbGl
KP9M6l0dYRo08Hi++vqoBB04rVPRQaYB9/sfllwbL9Hwz/a77lTMs5Yfsppe
orM+bhf/yNCgjaJsfzf1JbrnnWhCkKfBs1ymkR7GSzTvNdh1UpUGat00MY3T
L1CKR/Qisw4NUudja4ZXilHf8WZlmjUNwni1k3UsnyKy1PW6URsaGIv6qCbJ
PUUe3bZOaXY0GEjdPH5trQgtHhhJYnHAv5c0T6i2LkIcOn8XPjvToM+dM9mA
rxBpCMuVh/jSIEPq4Rvvx4/RuY8/LFTO0CD38p27Q8cfo+qE59PD/jQY8zz7
ZJPYY2TGiqTMztJAXNLqrl1sPnKetY6QDqfBhSOSgSxnHqHExijD9/E0UD4q
b0d3/g99vmQycPYqDT6aFfWwUP5DYno8wUrXaHD8TWyd9+gDlFuS/ujWdRoI
NmRXbfN8gMpzn3F5pNHgQT2pziIkD42HD3zi+g+f5+v6tPfFfQSMXU4272jQ
WDYWU3HtHtod9oOFtQb7a3JFyMH5HtJ9n/WgqJYGwZav2r133EPalmw/2Rto
kHDoaGt1WRZS9285V9FGg44rimmdx++i7c+d0ol9NDBX8E4P6clAsqt8u1v6
acCpe9BzPT4DUQ1qhkIGabD3mgGvMcpAxA45+Y4RGux2NVkjP0xH4gtzJZem
aPAupzuj/mIa4mZEd04t02D+TfOknf1txBWmEXL7Dw1mLs2fcha9jTjfT0ju
WaWB+/jjJOGuFMRuud/1zjoNRkLEUoNtUhCLv/DCwU1qsOmL3PE/DrfQUvFD
3pf8avA2/YJB3uUbqI/esu+CshoQpB8G/jZJQqJPTWR4VNXAyDD4fYVUErJS
rlu/S1MDeT0WraGRa6hx+9tnbxhqEP/ts8QezWuoVPKZyPpONQjPNYzmn7iK
rm++NXLOUA1aFlj+o/vGo5YovkouYzV4KubcW0SNR+zMiSmZJmpATeHqmOmJ
QxdWY0xem6kBR8EThSzDOHRqNrho1UINrK+e3P9KLhYZfnUIC3VSg+bCa7cQ
92UUadtjxXFcDSRsLQznW2LQ68/WKunO+P5i5h9NE2MQo+3AUJmbGuxL4j81
zhuDiDVg9MdLDdi5ssTzpC6hvwVUgeBgNbjQ+OXYL8soVBg5kx+YrAYXmecG
dytEoHTt9J3bb6jB5H9srUqzF9DlBaMP3TfVICDmwdxawgV0zO3+912parDh
evrRYkM44jOxJ7JkqQHrt10XZs3PowDeD7cSn6iBsO98ZW5SKDrWEEiFQjUo
dE/m4tUNRfsvUp7PFWH7tmdL+E6FINnF8Har52rwI4xrD5txCOrq2sEpUa4G
4k2PEjW4g5F21v2I/+rVwPNqzUBuTSCStTvEc7gB+6M+kU3jQiAS4Nu4w9Gk
Buvdoi9vaQeimYv2Fd6taiBU0DBb8jwA3XHnW2J0qsHWH+8v7CvyR0wqF7yq
htVA6eZhl74GPzQzpvTXb1QNvMMl4u2T/FB31tcrlDE1SDL+6nfJ1g8949N4
EDOpBlGjNb97x32R8++ZQbNZNQjMDVFx4vVFta/tbXr+qcGXiNV1g/VT6Gf+
J3GfDTXYeeaSZXzeKSSaZjrAwkyH/iDNtvb9p9DJQG0PJTY6XHY7WbMv2wtx
q4iHXuCgw1Y/8Yoyy5PILqvnjowIHV7O6h0wHT2BIq8eci4XpcPYrEu2YfoJ
lB/WIHtQnA7N0Zd+ix06gdZsy4qCpejgSA24p1PtjrJ506qbKHRYslxQUX/s
hqYi7b770ehwMtXuL3euCxLwbX+0mU6Hn5Mbh4PdXZCOo7FPBoMO7K1skrfl
XVCittZyjQZen/Wc58czZ8RYENkqqkuHmZHQitrG4+ica5fSGxM69M2bhSdL
HEN5FgfnLPbRgRogtH+s3Qm1Qv3LcTM6vKnJ/vjVywmRpEp285nTwZVPz9A0
zxHVdaaYu9rQwWfvMbsJmaOIx8gmgMOFDlWhvE4njtij+epyg9uudMiX7Yo6
yW6PPusQBKjudNjEadru8uowSqVPPNP1pINW4wVjFaHDiCgd+sv3NB2YwzjY
vvbZItrvOye7wuhQ2Phwr0OaNeL3ZdF2PU+HI5uNbiRbWaPFKfetc+F08Kp9
ef0WrzUqHVR9yHER2/fPYhZTvBWC5urvulfosMudsEkm1hIduv/9WO5NOmR0
yQw1PDyE1KVNaWopdHhXGkEZP30ICacVblTepoP7nG7kM81D6Gvi2btd6XS4
cOXH8N4Gc+QcurWXI5sOH5PG9/hNHERnDinb+hXQIelHrIhzmxmyak6WXS+k
g76kwMRlPzOkYbT0O+4pHWjvv063Cpqhvzpvb+Y+p0ODx7uE54770EW5Q5+6
yuhwOpaHP3zDBN3YCNi/u44OU71tZ06eMUKyrzg+zdTTYT7pjnu+tBEqP3XP
JqOBDgX5Gs83NRuiwZ4mp5VmOkjsemfFpGCIlF6QzxR3YP+4/P6eN78H1Xm0
p8gO0cHqMjPr5+f66DDBXaJzmA72WeG9O3310UznalbUKB3GK/LOXlbWR/wG
2x8NjmPmij/Umq+HnKTCK9J/0kGDYMlVUQRo5aPiIPca1uvrIS+nal0Uf6Xa
tfIfHSYOyO9NsNJF0sh20muDDs8+OwszJnXQnicX5z+wMKBUsO/YN2EdlBzT
wxa1lQFay9dYBaK0kcKuy/LLwgwwn/z0XTVDE1XOSRbmiTJAeHrfpm4DTWT+
sJhuJc6ARA+zU89/aKCzQv27nkkxwNbzMG1xjwaq+aV+wIvKgCPfZIXVmHeg
o7nDZwbUGBAen8F1pICOlJL0lf0YDLDSWn8jeoqO1sJyxll2MEAwvzK8SJGO
Mi2dHWS1GHDW1P3y0QI11MsyvNd7NwMG8+OF/MtpyOH4kOiqKQNic/Q/Fc4r
I6X9eh0JZgwwPsHd8eOKMlrTyr4qfYABAW+PPksiKqNM3uMs+ocYELGs5Dxr
qYR63w5OX7FlAIHv9q+7jQrIQXrwjbArA/o8NQYkF7cjJQ4IeejGAM7BxMqc
u9vR2u8shvYJBoz2D1/fZ7odZbY4PTx6kgFGL7fGLOfKot5zA8m5vgxo3Lv3
idUJGeTwrd+Vfp4BbfELqdulKEipfjehJhyf99s2T6ebjNaK7/ZYRzCgitnn
z+6bZJQZ53ggJIoBrMtRJza4yah3Z79mVSwD6u/0jUrykNCR1D6OAykMODrd
FfKfjzRKr/x4njsVr3/4nZNpQQp1D9fOtqYxgGNHxYhWiBSup4VfDt5hQK4h
tV01XhKZvQvPOZTLgIJgyYqgGnEUN35GiP8B3p/39E9BW3H0gevElU//McA5
svqO47QY2mN70MfyMQNyEi+XfhMVQzozBG3rYgZk3nOP+RwjgkL5BAuEXjBg
wmU1T0ZWBJVqsBO/vGQAz3anpfk6YaQeObvJtgy/96vZlhkuYaQkXP3Rrgqv
p2Yzqh8JIklw9nRoZYBbu+S3cDI/snez6ZVsZ8B0nWEjqYsPpcaZHuz7iPVx
r7pkNoEPCXbSdzh2MuAy05avTGu8iOskK/OxXgYEtvtHjrTyINNry/7Efvyd
EH1y2YQHXXkxPTY4wICUbHIeoZ4bsW10NB8fYUCTiInv1fpt6N+N3FSXKQZ8
PPiMsWWQE+mUpXJSZxggtvXAs+8nOVFof0L46A8GqIl0C2Uuc6AluUBXtzkG
nPNScAgQ5kA/K/fSTqwwICucb4zfkx0pjey8v/0vA4rXX039YmZHJ9lVhCdW
sV7CV2d9MregMQvhNY8NrIfNrT07v2xG1GCO0/LM6tBrffF4SOBm5HxnfWiS
RR3yuqPV9YU3o3vv5q3y2dShwSH4aGLpJtQ/PlZ/crM6REoOr9k6bEL/A4bi
UGE=
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
1cpJst/dp+4CyyAiuPGq8K1U8j8E0Iuz
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-1.9060797911781102`, -1.0455320107707673`},
  DisplayFunction->Identity,
  PlotRange->{{-1.9060797911781102`, 
   22.01880789404824}, {-1.0455320107707673`, 11.541374760374394`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1: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
bi+HOflaSPauf3GFbyearw01aClIg/8BmiC6qw==
         "]]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452007494671875*^9, 3.4520076555*^9, 
  3.452255917546875*^9, 3.514556708220125*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Amplitude", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10.02`", ",", "0.31`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5.04`", ",", "0.15`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"EDASigma", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.01`", ",", "0.11`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"Amplitude", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"8.04`", ",", "0.31`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10.05`", ",", "0.19`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"EDASigma", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.02`", ",", "0.13`"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "0.6866530207385731`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "195"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4520074946875*^9, 3.452007655515625*^9, 
  3.452255917578125*^9, 3.51455670823575*^9},
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.3.1 Summary of FindPeaks", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<FindPeaks\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 StyleBox["\<\"FindPeaks[data] finds peaks in \\\"data\\\" and returns \
Amplitude[i],\\n\tCenterValue[i], and PeakWidth[i] for each of the i peaks \
found.\\n\tFindPeaks[data, shape] finds peaks in \\\"data\\\" and returns a \
\\n\tmodel for the peaks assuming the shape of the peaks is given\\n\tby \
\\\"shape\\\", and also returns initial parameter estimates as\\n\t\
\\\"EDAParameters\\\". FindPeaks[data, None] is a synonym for \
FindPeaks[data].\\n\tOther allowed values for \\\"shape\\\" are BreitWigner, \
Gaussian, or\\n\tLorentzian. For each of these the model and parameters may \
be\\n\tpassed to the EDAFindFit routine.\"\>", "MSG"]], "Print", "PrintUsage",
 
 CellChangeTimes->{3.514556712892*^9},
 CellTags->{"FindPeaks", "Info3514542312-2851169"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Options", "[", "FindPeaks", "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"FindPeaks"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"FindBkgd", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"MaximumPeaks", "\[Rule]", "5"}]},
     {
      RowBox[{"EDAShowProgress", "\[Rule]", "False"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.45200765571875*^9, 3.51455671586075*^9},
 CellTags->"FindPeaks"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<FindBkgd\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "FindPeaks", "FindPeaks--FindBkgd option", "FindBkgd option to FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"FindBkgd is an option for FindPeaks. If set to Automatic \
(the\\n\tdefault), a linear background will be used and returned provided\\n\t\
such a background accounts for over 2% of the sum of all values of\\n\tthe \
dependent variable in the data. If set to None, no background\\n\tterm is \
used or returned by FindPeaks.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556719376375*^9},
 CellTags->{
  "FindBkgd option to FindPeaks", "FindPeaks", "FindPeaks--FindBkgd option", 
   "Info3514542319-2851169"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<MaximumPeaks\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "FindPeaks", "FindPeaks--MaximumPeaks option", 
   "MaximumPeaks option to FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"MaximumPeaks is an option for FindPeaks that controls the \
maximum\\n\tnumber of peaks in the data that it will attempt to find.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556723970125*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--MaximumPeaks option", "Info3514542323-2851169", 
   "MaximumPeaks option to FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<EDAShowProgress\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"EDAShowProgress is an option for various routines. When set to \
True, the\\n\troutine will print messages showing its progress in \
performing\\n\tits tasks. If set to False, no such information is \
printed.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556727751375*^9},
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", "Info3514542327-2851169", 
   "ShowProgress--option to FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<Amplitude\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "Amplitude returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"Amplitude[i] is the amplitude of the ith peak found by \
FindPeaks.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455673054825*^9},
 CellTags->{
  "Amplitude returned by FindPeaks", "FindPeaks", "Info3514542330-2851169"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<Bkgd\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "Bkgd returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"Bkgd is a symbol used by FindPeaks to represent the background \
in\\n\tthe spectrum. When a background is found, FindPeaks returns the\\n\t\
symbol Bkgd[0] as the intercept and the symbol Bkgd[1] as the slope.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556733595125*^9},
 CellTags->{
  "Bkgd returned by FindPeaks", "FindPeaks", "Info3514542333-2851169"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<CenterValue\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "CenterValue returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"CenterValue[i] is the center of the ith peak found by \
FindPeaks.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5145567375795*^9},
 CellTags->{
  "CenterValue returned by FindPeaks", "FindPeaks", "Info3514542337-2851169"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<FWHM\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FWHM returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"FWHM[i] is the full width at half maximum of the ith peak \
found\\n\tby FindPeaks.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455674136075*^9},
 CellTags->{
  "FindPeaks", "FWHM returned by FindPeaks", "Info3514542341-2851169"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<IndependentVariable\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "IndependentVariable returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"IndependentVariable is the symbol used by FindPeaks to \
represent\\n\tthe independent variable.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556744392*^9},
 CellTags->{
  "FindPeaks", "IndependentVariable returned by FindPeaks", 
   "Info3514542344-2851169"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<Model\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "Model for FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"Model is the model constructed by FindPeaks.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556746970125*^9},
 CellTags->{"FindPeaks", "Info3514542346-2851169", "Model for FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<EDAParameters\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "Parameters returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"EDAParameters is the symbol used by FindPeaks to represent the\
\\n\tnames and initial values of the parameters.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.51455675186075*^9},
 CellTags->{
  "FindPeaks", "Info3514542351-2851169", "Parameters returned by FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<PeakArea\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "PeakArea returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"PeakArea[i] is the area under the ith peak found by FindPeaks.\
\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556754501375*^9},
 CellTags->{
  "FindPeaks", "Info3514542354-2851169", "PeakArea returned by FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<PeaksFound\>\"", ",", " ", 
   RowBox[{"LongForm", " ", "\[Rule]", " ", "False"}]}], "]"}]], "Input",
 CellTags->{"FindPeaks", "PeaksFound return by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"PeaksFound is the number of peaks found by FindPeaks.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514556756938875*^9},
 CellTags->{
  "FindPeaks", "Info3514542356-2851169", "PeaksFound return by FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<PeakWidth\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "PeakWidth returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"PeakWidth[i] is the width of the ith peak found by \
FindPeaks.\\n\tIt is the width from the points where the second derivative is\
\\n\tzero. For a Guassian shape, this corresponds to 2 times the\\n\tstandard \
deviation. For a Lorentzian shape, it corresponds to\\n\tthe full width at \
half maximum divided by Sqrt[3].\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455676111075*^9},
 CellTags->{
  "FindPeaks", "Info3514542361-2851169", "PeakWidth returned by FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<EDASigma\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "Sigma returned by FindPeaks"}],

Cell[BoxData[
 StyleBox["\<\"EDASigma[i] is the standard deviation of the ith peak found by\
\\n\tFindPeaks.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455676461075*^9},
 CellTags->{
  "FindPeaks", "Info3514542364-2851169", "Sigma returned by FindPeaks"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.4 FitPeaks and FitExponent", "Section",
 CellTags->"FitPeaks"],

Cell[TextData[{
 "As a convenience, ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " bundles up some other ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " functions into routines to handle specific tasks. This section discusses \
two of them, ",
 StyleBox["FitPeaks", "MR"],
 " and ",
 StyleBox["FitExponent", "MR"],
 "."
}], "Text",
 CellTags->"FitPeaks"],

Cell[CellGroupData[{

Cell["8.4.1 FitPeaks", "Subsection",
 CellTags->"FitPeaks"],

Cell[TextData[{
 "The idea behind ",
 StyleBox["FitPeaks", "MR"],
 " is discussed in the previous section: use ",
 StyleBox["FindPeaks", "MR"],
 " to estimate the number and values of the peaks in a spectrum and then use \
those estimates for ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 " to fit the data."
}], "Text",
 CellTags->"FitPeaks"],

Cell[TextData[{
 "By default, ",
 StyleBox["FitPeaks", "MR"],
 " fits to a Gaussian model. We shall use it to fit to ",
 StyleBox["mydata", "MO"],
 ", which was first constructed in the previous section. Recall that the data \
contains two overlapping Gaussians."
}], "Text",
 CellTags->"FitPeaks"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"Gaussian", "[", 
          RowBox[{"x", ",", "10", ",", "5", ",", "2"}], "]"}], "+", 
         RowBox[{"Gaussian", "[", 
          RowBox[{"x", ",", "8", ",", "10", ",", "2"}], "]"}]}]}], "}"}], "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.1`"}], "}"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20", ",", "0.1`"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 AspectRatioFixed->True,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "mydata", "]"}]], "Input",
 CellChangeTimes->{3.452007514625*^9},
 CellTags->"FitPeaks"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
1cpJst/dp+4CyyAiuPGq8K1U8j8E0Iuz
     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 20.02506725361271}, {0., 10.492465862778962`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452007515125*^9, 3.45200765778125*^9, 
  3.51455677467325*^9},
 CellTags->"FitPeaks"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FitPeaks", "[", "mydata", "]"}]], "Input",
 CellTags->"FitPeaks"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
UGE=
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
1cpJst/dp+4CyyAiuPGq8K1U8j8E0Iuz
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-1.9060797911781102`, -1.0455320107707673`},
  DisplayFunction->Identity,
  PlotRange->{{-1.9060797911781102`, 
   22.01880789404824}, {-1.0455320107707673`, 11.541374760374394`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1: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
bi+HOflaSPauf3GFbyearw01aClIg/8BmiC6qw==
         "]]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452007520671875*^9, 3.45200765803125*^9, 
  3.514556780501375*^9},
 CellTags->"FitPeaks",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXQm4HVWRbt69776XvKyyC2ocQZhxw2VYhGyELCyBEAIh7AEChEUWEVmV
BDESQBBQyMsmIawBAUEWiWwC4gbqiIq4oSLyuY0s44BIvH/V+c+p0+90970v
D8dvZvLlvtt9uru6TtVfderUWe7U2ScfNee42SfPPWz2qMknzT7hqLmHfXjU
pONPahbV1smydY7Ksuw3ozIcr2keuj9rmv/XzMUflFQfb4GvDjw6EUc1HO3k
jzr81fG+LKvrk+HfOBTU4/s31ZveLl9yTY7ck5PloBYV75i+tSNx69hEWS1R
Nkb+dvoy+52iu/E/A9NjWyf5T8HvuFxZ/5idGOOwHRbjW0lmwsCxlXtip3YZ
7MwzKOdiUVkjT6YFfQebnRxXV45qsc3KUd0fjUvc52y1XdcxFF/C7AHKuRTU
cDxYmV9jmR+SKOtpsazVZ/+33PfPxIvct47RcO76/+v6/46uN06UTWyxbJsW
eZiUKNtE/g44S6myNl8vf2f9A6/L5X/4W9fiegNf0s50Vtyp1/s0rPUBfmy4
HA4+9eqVj68ZO3rR5Rde8FWU2HMe956/8MGOcY8/9kxW671g4QMouvW0U+/K
aomyIVLWzbIfHHTg9bxm78uRk7dvWl2RTq92jcF6zlxx5bdBgJ9fzZi+Et/P
TN9z5U9nzbyWx/+9045LskE4y4az/G/jxvTi+7VxYxbxvvuO/9Btf91x3OJU
OZ7LOoRG5593nrLcvhfnWUOu1SzdrANPZjXSfHX82N5WKprT2F/lbxcVgs+3
5xx2E76/ecThX/jOobNv5Ntfc9flTcptD45Zk1UfP+vLOP7RgfuLZqyUcM09
03ht3GithaP3l4kTluD9TgAs/usErdjzO09eRuHwUX5w7q4N+du4sb0Xfvay
R0CO1/D9yoTxvazef03aaQnL2pfVK1q20R/+8NLvp+56pUpF/u7wNycHfl7e
afzi7x56yKpf7r3Xyh8eeMD1YAz6+t3uu12pCBnby2Mw/POZe19jmea3vcYK
gg6/D7nzjh+lrpM2+SAPeZ54DXRQuylff/SXRfRBi2WbtuJ7XpK/nRQ+cSWI
VqUNenHKpGU/mbXvtXm+mwjv9Xwp7RHkDWWp45Rs7H2ORVvEXkBUNiJR9uZi
X+xq+Zvp066KoIn6aS27oMXgI4OUhfTexaRfUE+64txP3KvoVWR/p6k0VtQq
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
JR4Mkhnij0YXE+vjNuVyO842W+fvwihSSw==\
\>"]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Amplitude", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10.02`", ",", "0.31`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"5.04`", ",", "0.15`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"EDASigma", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.01`", ",", "0.11`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"Amplitude", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"8.04`", ",", "0.31`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"CenterValue", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"10.05`", ",", "0.19`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"EDASigma", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.02`", ",", "0.13`"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "0.6866530207385731`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "195"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452007520703125*^9, 3.452007658046875*^9, 
  3.514556780517*^9},
 CellTags->"FitPeaks"]
}, Open  ]],

Cell[TextData[{
 "As seen above, by default ",
 StyleBox["FitPeaks", "MR"],
 " fits to Gaussians. A ",
 StyleBox["PeakShape", "MR"],
 " option may be set to ",
 StyleBox["Lorentzian", "MR"],
 ", in which case that is the shape used for the fit. All other options given \
to ",
 StyleBox["FitPeaks", "MR"],
 " are passed to ",
 StyleBox["FindPeaks", "MR"],
 " or ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 " as appropriate."
}], "Text",
 CellTags->{
  "FitPeaks", "FitPeaks--PeakShape option", "PeakShape option to FindPeaks"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.4.2 FitExponent", "Subsection",
 CellTags->"FitExponent"],

Cell[TextData[{
 "As discussed in Section 8.2.2, fitting to an exponential ",
 StyleBox["y = A ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"B", " ", "x"}]], TraditionalForm]]],
 " by linearization to ",
 StyleBox["Log[", "MR"],
 StyleBox["y", "MO"],
 StyleBox["] = Log[", "MR"],
 StyleBox["A", "MO"],
 StyleBox["] + ", "MR"],
 StyleBox["B \[Times] x", "MO"],
 " introduces biases in the parameters. However, fitting to the full \
exponential often requires that we have at least an approximate idea of the \
values of the parameters ",
 StyleBox["A", "MO"],
 " and ",
 StyleBox["B", "MO"],
 ". The ",
 StyleBox["FitExponent", "MR"],
 " function uses the fact that the biases introduced by linearization are \
often fairly small, so estimates of the parameter values found through a \
linear fit may then be used for the full nonlinear one."
}], "Text",
 CellChangeTimes->{3.45200761159375*^9},
 CellTags->"FitExponent"],

Cell[TextData[{
 "In Section 8.2.2 we constructed ",
 StyleBox["mydata", "MO"],
 ", which is a noisy exponential with ",
 StyleBox["A", "MO"],
 " equal to 32750 and ",
 StyleBox["B", "MO"],
 " equal to 0.10."
}], "Text",
 CellTags->"FitExponent"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"noise", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "num"}], "}"}], ",", 
    RowBox[{
     RowBox[{"SeedRandom", "[", "1234", "]"}], ";", 
     RowBox[{"num", "=", "0"}], ";", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"num", "<", "100"}], ",", 
       RowBox[{
        RowBox[{"x", "=", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"-", 
             FractionBox[
              SuperscriptBox["x", "2"], "2"]}]]}], ",", 
          RowBox[{
           RowBox[{"noise", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"noise", ",", "x"}], "]"}]}], ";", 
           RowBox[{"num", "++"}], ";"}]}], "]"}], ";"}]}], "]"}], ";"}]}], 
   "]"}], ";"}]}], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"a", "=", "32750"}], ",", 
      RowBox[{"b", "=", "0.1"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"mydata", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"a", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "b"}], " ", "x"}], "]"}]}], "+", 
           RowBox[{
           "noise", "\[LeftDoubleBracket]", "x", 
            "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "100"}], "}"}]}], "]"}]}], ";"}]}], "]"}], 
  ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"Transforming data"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "mydata", "]"}]], "Input",
 CellChangeTimes->{3.45200756496875*^9},
 CellTags->"FitExponent"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1yw881Hccx/FDt2hDxZptWudP/seh+T/39rcu/845R8wlsodq5GxsV6xL
hd3RJc0oMhVieuQykgdr5095eFBWthTbUiMrmz/h4VEr2x732e/x+D5+j+f3
9X2bJOzjJ2kyGIxd/57//upvhhO+/F2VeGYUdIFs318aAh3uk7WRXpA3VaG8
S16Noc6x5DfSfiIbYkhPUvBH0h2yEeJWFlq7FP5INoZei84mzZ5bZBbkTbGZ
ou/7yaYIdrdQMDT7yOb4rOpRWXb+DbIFusR1Z4u4PWQrSNKs3Yb9u8g22GBd
spSfqiLboV10Sfubgmtke1TIpeIzsnYyG62H2zgTd66SHbHXUmyaJrpCdkJf
isEa5cZmsjMuNlYPXTNtIm9GcImxQB6mJL+P+x02Q4bCS2QXHLWdaquIbSC7
onePmbN5bR3ZDbsVYl6uay3ZHYzypsQ7L8+TPRBeEXg95uVZsifmz5XXq9hV
ZC9Ydo143WZVkj9AWFYh86B9Odkbup36nsn7y8gcxNTJZ4R6X5OBQytP1mg/
OKm2FEh8NmDDnjxB3Qfa1wIc4vWLqPugJ+qdF+bjx6j7YlnjQV7itJy6Lxbi
7y2lcL+k7geOonSsZzqXuh+exh18qKc8Qt0fHa8qD8xdz6Huj+MtTYLxWSn1
AFgZFDQ+r/+CegAGogcPOfQdoB6Ig5Idfj4sCfVAMNuemJhWZ1LfglRVlW5x
6afUt+DtU99Obq5Op74VBd05fZr30qhvRe/5JX1RRip1Ll6ru7yHc3YvdS5u
7Z8rMnuUTH0buGMTWjvkH1HfBvGogXH557uoByFr56ipkzyBehBuPvvV8GFr
PPVgDFcvOEbaiqgHI5/lp5PAj6UeguDlgRZVSDT1EBi6JHmm2Amph0KyatF1
2ldAPRQX494a66/nUw/Dz+NmletSedTDMDIoKanJCKHOQyBTKbWWBakNHi57
b1/LzNlC73noPWfMGi4OUPsHHlzA1py38ad9OGoUMfuETD/ah2PR/MixLC5o
H47j4683eX/lTftwNB8uc/cReNGej1XsJo8bNu6056OU0+zczXKjPR9TxbOy
mF4n2vPR0Wj0YXuhI+0joCiKE2s+JSMC+8Wrw85r2dE+AnkOHaWbam1pH4H2
BssEm1Qr2gtwd1Kju2adNe0F8JhYeWHBZCPtBbDb2amUsVi0F0ClfyXU+rQp
7SNh1GLuMDJtQvtIDJccy/crMqZ9JIxzW3NkL//fR2L96VeqEY91tBdiMF3m
9kmZLu2FePdC4d3H96hLhbBXTl4vtn2T9kKIjjJ3J9wwoH0U1gtX5M6J1tA+
Cjefz2n99WQt7aMguW1hxH6xgvZReC92lC1t0aB9NGRnTvQr6hc46n00fs/I
nv0t87Ha0mh4D/0dpmOmRfto3D91des8Y1HdGdvhxnL60+RjJv4BFYi6mQ==

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{{0., 100.}, {0., 13520.776463342583`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.4520075658125*^9, 3.452007658171875*^9, 
  3.514556797407625*^9},
 CellTags->"FitExponent"]
}, Open  ]],

Cell["We fit the data to an exponential.", "Text",
 CellTags->"FitExponent"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FitExponent", "[", "mydata", "]"}]], "Input",
 CellTags->"FitExponent"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJw1yw881Hccx/FDt2hDxZptWudP/seh+T/39rcu/845R8wlsodq5GxsV6xL
hd3RJc0oMhVieuQykgdr5095eFBWthTbUiMrmz/h4VEr2x732e/x+D5+j+f3
9X2bJOzjJ2kyGIxd/57//upvhhO+/F2VeGYUdIFs318aAh3uk7WRXpA3VaG8
S16Noc6x5DfSfiIbYkhPUvBH0h2yEeJWFlq7FP5INoZei84mzZ5bZBbkTbGZ
ou/7yaYIdrdQMDT7yOb4rOpRWXb+DbIFusR1Z4u4PWQrSNKs3Yb9u8g22GBd
spSfqiLboV10Sfubgmtke1TIpeIzsnYyG62H2zgTd66SHbHXUmyaJrpCdkJf
isEa5cZmsjMuNlYPXTNtIm9GcImxQB6mJL+P+x02Q4bCS2QXHLWdaquIbSC7
onePmbN5bR3ZDbsVYl6uay3ZHYzypsQ7L8+TPRBeEXg95uVZsifmz5XXq9hV
ZC9Ydo143WZVkj9AWFYh86B9Odkbup36nsn7y8gcxNTJZ4R6X5OBQytP1mg/
OKm2FEh8NmDDnjxB3Qfa1wIc4vWLqPugJ+qdF+bjx6j7YlnjQV7itJy6Lxbi
7y2lcL+k7geOonSsZzqXuh+exh18qKc8Qt0fHa8qD8xdz6Huj+MtTYLxWSn1
AFgZFDQ+r/+CegAGogcPOfQdoB6Ig5Idfj4sCfVAMNuemJhWZ1LfglRVlW5x
6afUt+DtU99Obq5Op74VBd05fZr30qhvRe/5JX1RRip1Ll6ru7yHc3YvdS5u
7Z8rMnuUTH0buGMTWjvkH1HfBvGogXH557uoByFr56ipkzyBehBuPvvV8GFr
PPVgDFcvOEbaiqgHI5/lp5PAj6UeguDlgRZVSDT1EBi6JHmm2Amph0KyatF1
2ldAPRQX494a66/nUw/Dz+NmletSedTDMDIoKanJCKHOQyBTKbWWBakNHi57
b1/LzNlC73noPWfMGi4OUPsHHlzA1py38ad9OGoUMfuETD/ah2PR/MixLC5o
H47j4683eX/lTftwNB8uc/cReNGej1XsJo8bNu6056OU0+zczXKjPR9TxbOy
mF4n2vPR0Wj0YXuhI+0joCiKE2s+JSMC+8Wrw85r2dE+AnkOHaWbam1pH4H2
BssEm1Qr2gtwd1Kju2adNe0F8JhYeWHBZCPtBbDb2amUsVi0F0ClfyXU+rQp
7SNh1GLuMDJtQvtIDJccy/crMqZ9JIxzW3NkL//fR2L96VeqEY91tBdiMF3m
9kmZLu2FePdC4d3H96hLhbBXTl4vtn2T9kKIjjJ3J9wwoH0U1gtX5M6J1tA+
Cjefz2n99WQt7aMguW1hxH6xgvZReC92lC1t0aB9NGRnTvQr6hc46n00fs/I
nv0t87Ha0mh4D/0dpmOmRfto3D91des8Y1HdGdvhxnL60+RjJv4BFYi6mQ==

      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-8.9, -2962.57096229182},
  DisplayFunction->Identity,
  PlotRange->{{-8.9, 109.90000000000002`}, {-2962.57096229182, 
   32597.079718186476`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJw1kwtMk1cUx++AaiG6mMVFFi2BxRnBzvKoOEHgIIICSltKHziYBIRpHAqI
c8sw+8aq6ISorAxhMroNh2GSNI6ZsjXjY0HtDCIWRlQQpUMeXYRitY9QYHfp
+Zo0za//+z+ve25I/tHMQh9CyAH6/f/X+7ElEGJ+LKjoTsA/gDC3l9WXjXV5
kQ+EvFUtmBtBfRXV58zVb9pQX031faVXTowgB1L+TlqcOIO8Doh+X7lpPQ+8
HAxE16gzxNsw3ttAWMlljWcceT0QOJe6+e9J5A1A+p2ves76sV7eCCRPHDBb
40A9jNbjfzE29inmE9J45/IeuB+hvhnIqtD0Y81cveFU/1C7QT6EHAHkaUb7
3Y8tyJG0TrYg9Uoz+qNoPR1tCzf7kcXUb4nzPTyN57fQfgQreaVPUI+m/Qq2
1659jryVxgtW+zvLkN+j9dsWK2XPkLcB4efcXfuuE+PF0H7tlV+3LyDHUv/I
wVNHnyFvBzK1NUh4+R/0xwHROlrSx1zI8fT8g8heaR1yAp1PgG9WyC1koPW7
K4bcs15mKI9HFIT+SPB+EoFcy9viML7w5mMo7y78gTi4ee0A8pE8pPg+3i9D
mfU9ILrI7UsSkBWHal2mlxifckukzF9oRX0nkA5lecMavH+Gsuvn4wUKzp8M
5Mzo4lIU7hNDGb6vFWruYf0pdH5d2hNjv6JO+TNTX2CiC/27aLw6s7BlEONT
3llzclMkt7+7aTyRKj68EXXK4lufnxb1oj+V1pdu4PEfok45InDhjW+4/UgD
kl9xr69+EPNTLg9+vybZjPHTgVSnpfwlGEY/5Smn6bT6Ovr3ALGI21oHh9FP
uZP/U1XYAOp7Adp/kXeuWUKd8qOwQ/oybn8zgEQPdx/Rd6OeAcxikvhkrh3z
S4AMidI0M5OoS4C5lmrmae3olwJb+lAyKcD9Aynojld/Ye19jfWep3xndCCm
yOE9z0rp+5H3eAi3TzKAnEl5sY8b/TJgkkub5QauHxnoMkziwdkJr87K4ELz
DXPRGO4DyQTQvu6uH0UdMmGj4XBTEA/3j8mEkoC58therJfNBF3Qt0HZr7j9
kEM439F2/gjuO8iBjSDjK/bjfjFygFP24eFl+P5ZOTDRxz7wq7qO+bPg0nLr
6rxpzp8F+q88uS4PvicmC0jMHw1fDjzH/PR8R+7E2aYX6FfA1MC8sqeV618B
JZX8xxO1o+hXgKXuYKHJ4Ovth1UAPFF+etvWiX4leH4rsd68g/2BEj7Jlmh2
zeD9MUpg26tyhT44L1YJ+nVJxulL3PxU0H91PrvrDL4fUEHOUltKw5/z6FcB
NLbsEG27gfWr4ELy3F5TUR/OTw1Xh6IW97f+i/nVoF6qcb6T/xLnpwa2CeKM
xRbMrwbN737GtND76M8Go926p3qlPeE/aWHdLA==
         "]]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {0, 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452007570515625*^9, 3.45200765840625*^9, 
  3.514556801595125*^9},
 CellTags->"FitExponent",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXQmUpUV1frz/vV6mmYYBWQSXkYhgZBM0MSow7DsCgkQNYROYQVFkiUaB
sG/DCI4gMCiLDCCOymbABNwgIkQNIQE14pGgh4MnhqBySACFTn+37nfrVr1/
ea+nm5mcwGG6/62qbt373aVu3f/vvQ49Yf4Rxxx6woLDD527y3GHHjt/weHH
z935I8dNXipWabVWmd9qtR6Z28LxxOSh/piY/H9iAX7gSvnxW/GrjcffjKMO
jtp2bUt5SC7Kkf6Te1vYUVF7bTMcFWm/8e66gYy3lAxEmlpdu+x/S2+tImmy
eXk3ZY9uIj+H8kdnpEkjQVXN16rlTpl0Kjra1IQ7yU1PN483+7/Pjq367GXT
yud6upwCVzY1aNf2uYJ5sFlfVBZND6xE0t9icHoamRDMSTe5XEfhCtOIaMW3
tKMivVZhxd+c8qDeimfXeqx4Pw6n6vg1+CUz3SNM9zVhuhOe6pGSa2Ml12b1
+dx0X3t53AH7W+VlWf+/GbdG1muXXHtLn9feuhxt15OfpSTtVXLt2pJr+7ou
5I5c3rW645Xu/rRTvQ5+iV/oNjwZ5N7j/TrT1+wr8vNvPn7d0gcmtt368ksX
XXAPj+9bcNRN+bWq46k8e8tff/zrSy44/zt1xz/6y4Nu7PfZqbabqWeb2n3/
yA989a7jPvq1/PiX+++3tO7+dD67ZOH5d7fWb0ZNF4eXBJvQJPNTr7ryB1Xz
r6Pzf3ba4XM4fmHeNktwXOCk1eUpb/1hu22XtObIvZH8XnkXY02P+eNWMUjX
M0jBhv7e77eft+SpPXa7Oj9+cfJf3f3pfPZZ0NYHVjILc4H8XLVO+z0SHjz0
kC9j1sPChA6Y0MvPs+vm8Fc3XPfAA4cf9uVzL7/0Ph5/6dST78yv4fi9d935
yLc+8uHbDrnj9p/sev99v8Dxoksuvje/VnU8U8++TM/Unh0cnmeE4I3whEEk
LL/7wQW3EJaP77fv0oi/V9fo5hU55o647dYfTcfcW0v6CR8+KT9HvUE+77JL
78vngwm02jKZOWUTeW6H7WQi3znmQ7f2RdzN1bHPifJzuMxHQPOf3nXnK5WU
cfAvJ+X5HeYtaRr+zjxeO14uzOGYz+64vUzxxXnbXE6TgjEwtSYZte6pntox
8nPIT+3Kc8/5No5/tc/e14ZZDcFl/eshBy874Ys3/LPv+QfVHR8dEMyObzjt
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
zH5J7+MlDSM/VrWj7ao785Z1ee+3VvlfncYd1A==\
\>"]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"32750.21`", ",", "0.7`"}], "}"}]}], ",", 
   RowBox[{"B", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0999991`"}], ",", "2.9`*^-6"}], "}"}]}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "107.63175599981074`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "98"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452007570546875*^9, 3.452007658421875*^9, 
  3.51455680161075*^9},
 CellTags->"FitExponent"]
}, Open  ]],

Cell[TextData[{
 "Any options given to ",
 StyleBox["FitExponent", "MR"],
 " are passed to ",
 StyleBox["EDAFindFit",
  FontFamily->"Courier New"],
 ", which actually performs the fit."
}], "Text",
 CellTags->"FitExponent"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["8.5 References", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "As mentioned at the beginning of this chapter, there is a growing \
literature on using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " in ways particularly appropriate for the topics of this chapter. The first \
subsection below lists some of these titles."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
The second subsection below refers to a cross section of the literature on \
exploratory data analysis and transformation techniques.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
Both lists are to be viewed as a selection, and readers may have personal \
favorites that do not appear below.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[{
 "8.5.1 References to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Alfred Riddle and Samuel Dick, ",
 StyleBox["Applied Electronic Engineering with Mathematica ",
  FontSlant->"Italic"],
 "(Addison-Wesley, 1995). Although tied to electronics, much of the analysis \
discussed here has a much wider applicability than just in that field"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "William T. Shaw and Jason Tigg, ",
 StyleBox["Applied Mathematica: Getting Started, Getting It Done",
  FontSlant->"Italic"],
 " (Addison-Wesley, 1994). A collection of techniques that are of great value \
to any worker in the physical sciences or engineering"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Stan Wagon, ",
 StyleBox["The Power of Visualization: Notes from a Mathematica Course",
  FontSlant->"Italic"],
 " (Front Range Press, 1994). A concise introduction to the topic of \
visualization of data"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Tom Wickham-Jones, ",
 StyleBox["Mathematica Graphics: Techniques and Applications",
  FontSlant->"Italic"],
 " (TELOS/Springer-Verlag, 1994). Much of data exploration relies on \
graphical techniques, and this book provides both an introduction to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]",
 "s built-in graphics capabilities and rich extensions to those capabilities"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
8.5.2 References on Exploratory Data Analysis and Transformation\
\>", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "William S. Cleveland, ",
 StyleBox["Visualizing Data",
  FontSlant->"Italic"],
 " (AT&T Bell Labs, 1993). Although visualization is prominently featured \
here, there are also extensive discussions of fitting techniques, \
transformations, smoothing, etc."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "David C. Hoaglin, Frederick Mosteller, and John W. Tukey, eds., ",
 StyleBox["Understanding Robust and Exploratory Data Analysis",
  FontSlant->"Italic"],
 " (John Wiley, 1983). A wide-ranging discussion of many of the topics of \
this chapter by experts"
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "John W. Tukey, ",
 StyleBox["Exploratory Data Analysis",
  FontSlant->"Italic"],
 " (Addison-Wesley, 1977). Although the topics of this chapter go back to \
Descartes, this classic book caused an increased interest in them. "
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
ScreenStyleEnvironment->"Working",
WindowSize->{801, 729},
WindowMargins->{{Automatic, 397}, {Automatic, 61}},
ShowSelection->True,
Magnification->1,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "EDAListPlot"->{
  Cell[4388, 157, 111, 3, 36, "Subsection",
   Evaluatable->False,
   CellTags->"EDAListPlot"],
  Cell[4502, 162, 284, 11, 29, "Text",
   Evaluatable->False,
   CellTags->"EDAListPlot"],
  Cell[4789, 175, 667, 22, 65, "Text",
   Evaluatable->False,
   CellTags->"EDAListPlot"],
  Cell[12033, 342, 233, 7, 29, "Text",
   Evaluatable->False,
   CellTags->"EDAListPlot"],
  Cell[67632, 1853, 197, 5, 31, "Input",
   CellTags->"EDAListPlot"],
  Cell[67832, 1860, 518, 8, 126, "Print",
   CellTags->{"EDAListPlot", "Info3514541620-3150195"}],
  Cell[68387, 1873, 261, 5, 31, "Input",
   CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}],
  Cell[68651, 1880, 4438, 144, 876, "Output",
   CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}]},
 "BoxPlot"->{
  Cell[26138, 646, 163, 4, 36, "Subsection",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[26304, 652, 416, 9, 47, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[26915, 671, 113, 3, 31, "Input",
   CellTags->"BoxPlot"],
  Cell[27031, 676, 621, 13, 40, "Message",
   CellTags->"BoxPlot"],
  Cell[27689, 694, 109, 3, 31, "Input",
   CellTags->"BoxPlot"],
  Cell[27801, 699, 311, 5, 75, "Print",
   CellTags->{"BoxPlot", "Info3514541575-3150195"}],
  Cell[28149, 709, 108, 3, 31, "Input",
   CellTags->"BoxPlot"],
  Cell[28260, 714, 309, 5, 75, "Print",
   CellTags->{"BoxPlot", "Info3514541578-3150195"}],
  Cell[28584, 722, 388, 10, 47, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[28997, 736, 883, 21, 112, "Input",
   CellTags->"BoxPlot"],
  Cell[29883, 759, 8845, 247, 134, "Output",
   CellTags->"BoxPlot"],
  Cell[38743, 1009, 168, 5, 29, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[38914, 1016, 226, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[43938, 1152, 244, 10, 29, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[44207, 1166, 591, 16, 52, "Input",
   CellTags->"BoxPlot"],
  Cell[44801, 1184, 1880, 54, 447, "Output",
   CellTags->"BoxPlot"],
  Cell[46696, 1241, 803, 14, 83, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[47502, 1257, 435, 9, 65, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[47962, 1270, 1018, 26, 112, "Input",
   CellTags->"BoxPlot"],
  Cell[48983, 1298, 8794, 246, 134, "Output",
   CellTags->"BoxPlot"],
  Cell[61287, 1647, 165, 7, 29, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[61477, 1658, 752, 19, 72, "Input",
   CellTags->"BoxPlot"],
  Cell[62232, 1679, 2536, 65, 395, "Output",
   CellTags->"BoxPlot"],
  Cell[64783, 1747, 387, 8, 47, "Text",
   Evaluatable->False,
   CellTags->"BoxPlot"],
  Cell[65173, 1757, 682, 27, 48, "Text",
   Evaluatable->False,
   CellTags->{"BoxPlot", "BoxPlot--options"}],
  Cell[73126, 2029, 189, 5, 31, "Input",
   CellTags->"BoxPlot"],
  Cell[73318, 2036, 771, 11, 177, "Print",
   CellTags->{"BoxPlot", "Info3514541628-3150195"}],
  Cell[74126, 2052, 171, 4, 31, "Input",
   CellTags->{"BoxPlot--options", "BoxPlot"}],
  Cell[74300, 2058, 3178, 104, 596, "Output",
   CellTags->{"BoxPlot--options", "BoxPlot"}]},
 "Info3514541575-3150195"->{
  Cell[27801, 699, 311, 5, 75, "Print",
   CellTags->{"BoxPlot", "Info3514541575-3150195"}]},
 "Info3514541578-3150195"->{
  Cell[28260, 714, 309, 5, 75, "Print",
   CellTags->{"BoxPlot", "Info3514541578-3150195"}]},
 "BoxPlot--options"->{
  Cell[65173, 1757, 682, 27, 48, "Text",
   Evaluatable->False,
   CellTags->{"BoxPlot", "BoxPlot--options"}],
  Cell[74126, 2052, 171, 4, 31, "Input",
   CellTags->{"BoxPlot--options", "BoxPlot"}],
  Cell[74300, 2058, 3178, 104, 596, "Output",
   CellTags->{"BoxPlot--options", "BoxPlot"}]},
 "EDALogListPlot"->{
  Cell[65892, 1789, 101, 1, 36, "Subsection",
   CellTags->{"EDALogListPlot", "EDALogLogListPlot"}],
  Cell[65996, 1792, 1180, 36, 85, "Text",
   CellTags->{"EDALogListPlot", "EDALogLogListPlot"}]},
 "EDALogLogListPlot"->{
  Cell[65892, 1789, 101, 1, 36, "Subsection",
   CellTags->{"EDALogListPlot", "EDALogLogListPlot"}],
  Cell[65996, 1792, 1180, 36, 85, "Text",
   CellTags->{"EDALogListPlot", "EDALogLogListPlot"}]},
 "Info3514541620-3150195"->{
  Cell[67832, 1860, 518, 8, 126, "Print",
   CellTags->{"EDAListPlot", "Info3514541620-3150195"}]},
 "EDAListPlot--list of all options"->{
  Cell[68387, 1873, 261, 5, 31, "Input",
   CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}],
  Cell[68651, 1880, 4438, 144, 876, "Output",
   CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}]},
 "Info3514541628-3150195"->{
  Cell[73318, 2036, 771, 11, 177, "Print",
   CellTags->{"BoxPlot", "Info3514541628-3150195"}]},
 "Info3514541635-3150195"->{
  Cell[77575, 2170, 297, 5, 75, "Print",
   CellTags->"Info3514541635-3150195"]},
 "Info3514541638-3150195"->{
  Cell[77972, 2183, 304, 5, 75, "Print",
   CellTags->"Info3514541638-3150195"]},
 "Transforming data"->{
  Cell[78337, 2195, 118, 3, 71, "Section",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[78458, 2200, 841, 20, 101, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[79324, 2224, 147, 3, 36, "Subsection",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[79474, 2229, 164, 5, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[79735, 2241, 127, 3, 31, "Input",
   CellTags->"Transforming data"],
  Cell[79865, 2246, 507, 11, 23, "Message",
   CellTags->"Transforming data"],
  Cell[80409, 2262, 114, 3, 31, "Input",
   CellTags->"Transforming data"],
  Cell[80526, 2267, 725, 10, 177, "Print",
   CellTags->{"Info3514541646-3150195", "Transforming data"}],
  Cell[81266, 2280, 218, 7, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[81509, 2291, 385, 9, 31, "Input",
   CellTags->"Transforming data"],
  Cell[81897, 2302, 6780, 131, 359, "Output",
   CellTags->"Transforming data"],
  Cell[88692, 2436, 373, 8, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[89068, 2446, 567, 11, 65, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[89638, 2459, 345, 8, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[90008, 2471, 413, 10, 31, "Input",
   CellTags->"Transforming data"],
  Cell[90424, 2483, 10848, 194, 367, "Output",
   CellTags->"Transforming data"],
  Cell[101287, 2680, 216, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[101506, 2688, 167, 5, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[101676, 2695, 210, 6, 23, "DisplayMath",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[101889, 2703, 127, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[102019, 2708, 148, 3, 23, "DisplayFormula",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[102170, 2713, 401, 15, 30, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[102574, 2730, 129, 3, 23, "DisplayFormula",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[102706, 2735, 198, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[102907, 2743, 262, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[103194, 2755, 938, 26, 72, "Input",
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[104135, 2783, 1244, 31, 161, "Output",
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[105394, 2817, 267, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[105664, 2826, 1106, 43, 67, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[106773, 2871, 456, 9, 65, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[107232, 2882, 189, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[107446, 2892, 151, 4, 31, "Input",
   CellTags->"Transforming data"],
  Cell[107600, 2898, 1551, 38, 88, "Output",
   CellTags->"Transforming data"],
  Cell[109166, 2939, 142, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[109333, 2946, 257, 8, 31, "Input",
   CellTags->"Transforming data"],
  Cell[109593, 2956, 487, 10, 50, "Output",
   CellTags->"Transforming data"],
  Cell[110095, 2969, 128, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[110248, 2976, 364, 11, 31, "Input",
   CellTags->"Transforming data"],
  Cell[110615, 2989, 550, 11, 30, "Output",
   CellTags->"Transforming data"],
  Cell[111180, 3003, 266, 11, 30, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[111449, 3016, 230, 7, 31, "Input",
   CellTags->"Transforming data"],
  Cell[111682, 3025, 494, 18, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[112201, 3047, 288, 8, 31, "Input",
   CellTags->"Transforming data"],
  Cell[112492, 3057, 7837, 135, 236, "Print",
   CellTags->"Transforming data"],
  Cell[120332, 3194, 573, 15, 30, "Output",
   CellTags->"Transforming data"],
  Cell[120920, 3212, 272, 7, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[121217, 3223, 309, 9, 40, "Input",
   CellTags->"Transforming data"],
  Cell[121529, 3234, 10880, 193, 237, "Output",
   CellTags->"Transforming data"],
  Cell[132424, 3430, 229, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[132656, 3438, 389, 8, 65, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[133048, 3448, 268, 7, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[133319, 3457, 184, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[133528, 3467, 125, 3, 31, "Input",
   CellTags->"Transforming data"],
  Cell[133656, 3472, 480, 10, 23, "Message",
   CellTags->"Transforming data"],
  Cell[134173, 3487, 112, 3, 31, "Input",
   CellTags->"Transforming data"],
  Cell[134288, 3492, 641, 9, 143, "Print",
   CellTags->{"Info3514541689-3150195", "Transforming data"}],
  Cell[134944, 3504, 257, 9, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[135226, 3517, 301, 8, 31, "Input",
   CellTags->"Transforming data"],
  Cell[135530, 3527, 11870, 228, 238, "Print",
   CellTags->"Transforming data"],
  Cell[147403, 3757, 2786, 82, 126, "Output",
   CellTags->"Transforming data"],
  Cell[152270, 3909, 304, 10, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[152599, 3923, 681, 16, 52, "Input",
   CellTags->"Transforming data"],
  Cell[153283, 3941, 1209, 25, 228, "Output",
   CellTags->"Transforming data"],
  Cell[154507, 3969, 340, 9, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[154850, 3980, 585, 20, 56, "Input",
   CellTags->"Transforming data"],
  Cell[155438, 4002, 239, 8, 31, "Input",
   CellTags->"Transforming data"],
  Cell[155702, 4014, 492, 15, 31, "Input",
   CellTags->"Transforming data"],
  Cell[156197, 4031, 926, 20, 240, "Output",
   CellTags->"Transforming data"],
  Cell[157138, 4054, 201, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[157342, 4062, 295, 10, 30, "DisplayMath",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[157640, 4074, 356, 11, 48, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[157999, 4087, 679, 13, 83, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[158681, 4102, 167, 5, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[158873, 4111, 288, 8, 31, "Input",
   CellTags->"Transforming data"],
  Cell[159164, 4121, 7305, 130, 232, "Print",
   CellTags->"Transforming data"],
  Cell[166472, 4253, 599, 16, 30, "Output",
   CellTags->"Transforming data"],
  Cell[167086, 4272, 337, 11, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[167426, 4285, 485, 15, 31, "Input",
   CellTags->"Transforming data"],
  Cell[167914, 4302, 111, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[168050, 4309, 310, 8, 31, "Input",
   CellTags->"Transforming data"],
  Cell[168363, 4319, 11594, 222, 236, "Print",
   CellTags->"Transforming data"],
  Cell[179960, 4543, 2844, 83, 126, "Output",
   CellTags->"Transforming data"],
  Cell[182819, 4629, 208, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[183030, 4637, 619, 20, 86, "Input",
   CellTags->"Transforming data"],
  Cell[183652, 4659, 197, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[183874, 4669, 172, 4, 31, "Input",
   CellTags->"Transforming data"],
  Cell[184049, 4675, 989, 22, 239, "Output",
   CellTags->"Transforming data"],
  Cell[185053, 4700, 674, 14, 83, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[185730, 4716, 873, 16, 120, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[186606, 4734, 403, 10, 48, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[187012, 4746, 132, 3, 23, "DisplayFormula",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[187147, 4751, 509, 14, 67, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[187681, 4769, 164, 3, 27, "Subsubsection",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[187848, 4774, 443, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[188294, 4785, 512, 10, 65, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[188809, 4797, 226, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[189038, 4805, 365, 9, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[189406, 4816, 451, 12, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[189882, 4832, 530, 13, 52, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[190415, 4847, 7137, 137, 387, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[197567, 4987, 482, 9, 65, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[198052, 4998, 351, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[198428, 5012, 143, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[198574, 5017, 520, 11, 23, "Message",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[199131, 5033, 130, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[199264, 5038, 522, 8, 109, "Print",
   CellTags->{"Info3514541754-3150195", "Level-spread", "Transforming data"}],
  
  Cell[199823, 5051, 192, 4, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[200018, 5057, 1963, 39, 242, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[201996, 5099, 223, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[202222, 5107, 327, 7, 47, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[202574, 5118, 143, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[202720, 5123, 513, 11, 23, "Message",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[203270, 5139, 130, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[203403, 5144, 577, 8, 126, "Print",
   CellTags->{"Info3514541764-3150195", "Level-spread", "Transforming data"}],
  
  Cell[204017, 5157, 457, 12, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[204477, 5171, 5859, 104, 238, "Print",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[210339, 5277, 2300, 68, 107, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[212676, 5350, 457, 12, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[213136, 5364, 5066, 91, 236, "Print",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[218205, 5457, 2323, 69, 107, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[220543, 5529, 237, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[220783, 5539, 527, 17, 40, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[221313, 5558, 527, 17, 40, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[221843, 5577, 231, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[222099, 5587, 369, 8, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[222471, 5597, 8110, 135, 235, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[230596, 5735, 332, 10, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[230931, 5747, 679, 22, 66, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[231613, 5771, 679, 22, 66, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[232317, 5797, 353, 8, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[232673, 5807, 7816, 131, 229, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[240504, 5941, 817, 14, 101, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[241370, 5961, 135, 3, 36, "Subsection",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[241508, 5966, 681, 19, 65, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[242192, 5987, 366, 10, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[242561, 5999, 303, 7, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[242867, 6008, 187, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[243057, 6016, 235, 9, 23, "DisplayFormula",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[243295, 6027, 150, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[243448, 6032, 1167, 36, 123, "Input",
   CellTags->"Transforming data"],
  Cell[244618, 6070, 241, 8, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[244956, 6085, 240, 6, 31, "Input",
   CellTags->"Transforming data"],
  Cell[245199, 6093, 4714, 143, 245, "Output",
   CellTags->"Transforming data"],
  Cell[249928, 6239, 180, 5, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[250111, 6246, 789, 26, 31, "Input",
   CellTags->"Transforming data"],
  Cell[250903, 6274, 251, 11, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[251179, 6289, 434, 14, 31, "Input",
   CellTags->"Transforming data"],
  Cell[251616, 6305, 11543, 199, 227, "Print",
   CellTags->"Transforming data"],
  Cell[263162, 6506, 524, 13, 33, "Output",
   CellTags->"Transforming data"],
  Cell[263701, 6522, 132, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[263836, 6527, 129, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[263968, 6532, 125, 3, 23, "DisplayFormula",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[264096, 6537, 656, 27, 49, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[264755, 6566, 464, 14, 31, "Input",
   CellTags->"Transforming data"],
  Cell[265222, 6582, 142, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[265389, 6589, 411, 13, 31, "Input",
   CellTags->"Transforming data"],
  Cell[265803, 6604, 5728, 104, 238, "Print",
   CellTags->"Transforming data"],
  Cell[271534, 6710, 545, 14, 30, "Output",
   CellTags->"Transforming data"],
  Cell[272094, 6727, 591, 13, 66, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[272688, 6742, 602, 16, 66, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[273293, 6760, 394, 8, 47, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[273690, 6770, 606, 16, 48, "Text",
   CellTags->{"Transforming data", "Monotone bahavior of residuals"}],
  Cell[274299, 6788, 461, 15, 29, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[274763, 6805, 454, 9, 65, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[275254, 6819, 141, 3, 36, "Subsection",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[275398, 6824, 188, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[275683, 6837, 122, 3, 31, "Input",
   CellTags->"Transforming data"],
  Cell[275808, 6842, 475, 10, 23, "Message",
   CellTags->"Transforming data"],
  Cell[276320, 6857, 109, 3, 31, "Input",
   CellTags->"Transforming data"],
  Cell[276432, 6862, 729, 10, 160, "Print",
   CellTags->{"Info3514541838-2167347", "Transforming data"}],
  Cell[277198, 6877, 171, 4, 31, "Input",
   CellTags->"Transforming data"],
  Cell[277372, 6883, 5362, 107, 244, "Output",
   CellTags->"Transforming data"],
  Cell[282749, 6993, 495, 15, 48, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[283247, 7010, 161, 5, 31, "Input",
   CellTags->"Transforming data"],
  Cell[283411, 7017, 160, 5, 31, "Input",
   CellTags->"Transforming data"],
  Cell[283574, 7024, 304, 10, 48, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[283881, 7036, 250, 8, 49, "Input",
   CellTags->"Transforming data"],
  Cell[284134, 7046, 121, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[284258, 7051, 220, 7, 31, "Input",
   CellTags->"Transforming data"],
  Cell[284481, 7060, 120, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[284626, 7067, 206, 6, 31, "Input",
   CellTags->"Transforming data"],
  Cell[284835, 7075, 15171, 307, 235, "Print",
   CellTags->"Transforming data"],
  Cell[300009, 7384, 571, 15, 30, "Output",
   CellTags->"Transforming data"],
  Cell[300595, 7402, 540, 12, 66, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[301160, 7418, 181, 5, 31, "Input",
   CellTags->"Transforming data"],
  Cell[301344, 7425, 15311, 307, 235, "Print",
   CellTags->"Transforming data"],
  Cell[316658, 7734, 440, 11, 30, "Output",
   CellTags->"Transforming data"],
  Cell[317113, 7748, 112, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[317228, 7753, 465, 9, 65, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[317696, 7764, 192, 6, 31, "Input",
   CellTags->"Transforming data"],
  Cell[317913, 7774, 379, 10, 31, "Input",
   CellTags->"Transforming data"],
  Cell[318295, 7786, 5541, 106, 235, "Output",
   CellTags->"Transforming data"],
  Cell[323851, 7895, 719, 12, 101, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[324573, 7909, 121, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[324719, 7916, 293, 9, 31, "Input",
   CellTags->"Transforming data"],
  Cell[325015, 7927, 14831, 304, 235, "Print",
   CellTags->"Transforming data"],
  Cell[339849, 8233, 595, 16, 30, "Output",
   CellTags->"Transforming data"],
  Cell[340459, 8252, 296, 7, 47, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[340758, 8261, 284, 9, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[341045, 8272, 353, 13, 23, "DisplayMath",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[341401, 8287, 120, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[341524, 8292, 183, 6, 42, "DisplayFormula",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[341710, 8300, 154, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[341889, 8307, 275, 8, 49, "Input",
   CellTags->"Transforming data"],
  Cell[342167, 8317, 166, 3, 30, "Output",
   CellTags->"Transforming data"],
  Cell[342348, 8323, 283, 9, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[342634, 8334, 368, 13, 31, "Input",
   CellTags->"Transforming data"],
  Cell[343005, 8349, 140, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[343148, 8354, 256, 8, 49, "Input",
   CellTags->"Transforming data"],
  Cell[343407, 8364, 285, 11, 29, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[343717, 8379, 270, 8, 31, "Input",
   CellTags->"Transforming data"],
  Cell[343990, 8389, 15047, 306, 235, "Print",
   CellTags->"Transforming data"],
  Cell[359040, 8697, 447, 11, 30, "Output",
   CellTags->"Transforming data"],
  Cell[359502, 8711, 537, 14, 65, "Text",
   Evaluatable->False,
   CellTags->"Transforming data"],
  Cell[581731, 13123, 1167, 36, 123, "Input",
   CellTags->"Transforming data"],
  Cell[582901, 13161, 789, 26, 31, "Input",
   CellTags->"Transforming data"]},
 "Info3514541646-3150195"->{
  Cell[80526, 2267, 725, 10, 177, "Print",
   CellTags->{"Info3514541646-3150195", "Transforming data"}]},
 "Level-spread"->{
  Cell[89068, 2446, 567, 11, 65, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[187681, 4769, 164, 3, 27, "Subsubsection",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[187848, 4774, 443, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[188294, 4785, 512, 10, 65, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[188809, 4797, 226, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[189038, 4805, 365, 9, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[189406, 4816, 451, 12, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[189882, 4832, 530, 13, 52, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[190415, 4847, 7137, 137, 387, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[197567, 4987, 482, 9, 65, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[198052, 4998, 351, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[198428, 5012, 143, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[198574, 5017, 520, 11, 23, "Message",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[199131, 5033, 130, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[199264, 5038, 522, 8, 109, "Print",
   CellTags->{"Info3514541754-3150195", "Level-spread", "Transforming data"}],
  
  Cell[199823, 5051, 192, 4, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[200018, 5057, 1963, 39, 242, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[201996, 5099, 223, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[202222, 5107, 327, 7, 47, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[202574, 5118, 143, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[202720, 5123, 513, 11, 23, "Message",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[203270, 5139, 130, 3, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[203403, 5144, 577, 8, 126, "Print",
   CellTags->{"Info3514541764-3150195", "Level-spread", "Transforming data"}],
  
  Cell[204017, 5157, 457, 12, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[204477, 5171, 5859, 104, 238, "Print",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[210339, 5277, 2300, 68, 107, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[212676, 5350, 457, 12, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[213136, 5364, 5066, 91, 236, "Print",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[218205, 5457, 2323, 69, 107, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[220543, 5529, 237, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[220783, 5539, 527, 17, 40, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[221313, 5558, 527, 17, 40, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[221843, 5577, 231, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[222099, 5587, 369, 8, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[222471, 5597, 8110, 135, 235, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[230596, 5735, 332, 10, 29, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[230931, 5747, 679, 22, 66, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[231613, 5771, 679, 22, 66, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[232317, 5797, 353, 8, 31, "Input",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[232673, 5807, 7816, 131, 229, "Output",
   CellTags->{"Level-spread", "Transforming data"}],
  Cell[240504, 5941, 817, 14, 101, "Text",
   Evaluatable->False,
   CellTags->{"Level-spread", "Transforming data"}]},
 "Tukey's ladder of powers"->{
  Cell[102907, 2743, 262, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[103194, 2755, 938, 26, 72, "Input",
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[104135, 2783, 1244, 31, 161, "Output",
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[105394, 2817, 267, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}]},
 "Ladder of powers"->{
  Cell[102907, 2743, 262, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[103194, 2755, 938, 26, 72, "Input",
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[104135, 2783, 1244, 31, 161, "Output",
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
  Cell[105394, 2817, 267, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}]},
 "Info3514541689-3150195"->{
  Cell[134288, 3492, 641, 9, 143, "Print",
   CellTags->{"Info3514541689-3150195", "Transforming data"}]},
 "Monotone bahavior of residuals"->{
  Cell[157999, 4087, 679, 13, 83, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[272094, 6727, 591, 13, 66, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[272688, 6742, 602, 16, 66, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[273293, 6760, 394, 8, 47, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[273690, 6770, 606, 16, 48, "Text",
   CellTags->{"Transforming data", "Monotone bahavior of residuals"}],
  Cell[274299, 6788, 461, 15, 29, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
  Cell[274763, 6805, 454, 9, 65, "Text",
   Evaluatable->False,
   CellTags->{"Monotone bahavior of residuals", "Transforming data"}]},
 "Info3514541754-3150195"->{
  Cell[199264, 5038, 522, 8, 109, "Print",
   CellTags->{"Info3514541754-3150195", "Level-spread", "Transforming data"}]},
 "Info3514541764-3150195"->{
  Cell[203403, 5144, 577, 8, 126, "Print",
   CellTags->{"Info3514541764-3150195", "Level-spread", "Transforming data"}]},
 "Info3514541838-2167347"->{
  Cell[276432, 6862, 729, 10, 160, "Print",
   CellTags->{"Info3514541838-2167347", "Transforming data"}]},
 "FindPeaks"->{
  Cell[360088, 8731, 124, 3, 71, "Section",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[360215, 8736, 591, 13, 83, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[360809, 8751, 854, 26, 83, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
  Cell[361666, 8779, 421, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
  Cell[362090, 8791, 684, 17, 84, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
  Cell[362777, 8810, 161, 5, 29, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[363035, 8822, 117, 3, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[363155, 8827, 471, 10, 23, "Message",
   CellTags->"FindPeaks"],
  Cell[363663, 8842, 104, 3, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[363770, 8847, 496, 8, 109, "Print",
   CellTags->{"FindPeaks", "Info3514542237-2167347"}],
  Cell[364303, 8860, 166, 4, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[364472, 8866, 1929, 38, 242, "Output",
   CellTags->"FindPeaks"],
  Cell[366416, 8907, 157, 7, 29, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[366598, 8918, 122, 3, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[366723, 8923, 703, 19, 50, "Output",
   CellTags->"FindPeaks"],
  Cell[367441, 8945, 871, 28, 86, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[368315, 8975, 185, 6, 29, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[368525, 8985, 181, 5, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[368709, 8992, 1561, 45, 100, "Output",
   CellTags->"FindPeaks"],
  Cell[370285, 9040, 1083, 41, 86, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[371393, 9085, 260, 6, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[371656, 9093, 15442, 266, 432, "Print",
   CellTags->"FindPeaks"],
  Cell[387101, 9361, 1018, 28, 69, "Output",
   CellTags->"FindPeaks"],
  Cell[388134, 9392, 243, 7, 29, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[388402, 9403, 154, 4, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[388559, 9409, 1638, 47, 136, "Output",
   CellTags->"FindPeaks"],
  Cell[390212, 9459, 175, 7, 30, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[390390, 9468, 236, 7, 29, "Text",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[390651, 9479, 117, 3, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[390771, 9484, 496, 11, 23, "Message",
   CellTags->"FindPeaks"],
  Cell[391304, 9500, 104, 3, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[391411, 9505, 424, 7, 109, "Print",
   CellTags->{"FindPeaks", "Info3514542274-2167347"}],
  Cell[391872, 9517, 227, 6, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[392102, 9525, 11134, 188, 227, "Output",
   CellTags->"FindPeaks"],
  Cell[403251, 9716, 382, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403658, 9732, 296, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403979, 9743, 11769, 198, 235, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[415751, 9943, 12112, 204, 230, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[427866, 10149, 12166, 205, 225, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[440035, 10356, 11545, 195, 226, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[451583, 10553, 10874, 184, 233, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[462472, 10740, 974, 26, 55, "Output",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[463461, 10769, 941, 18, 101, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[464405, 10789, 255, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[464663, 10797, 767, 22, 72, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[465455, 10823, 199, 4, 31, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[465657, 10829, 4778, 84, 245, "Output",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[470450, 10916, 306, 7, 47, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[470781, 10927, 272, 6, 31, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[471078, 10937, 4795, 83, 251, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[475876, 11022, 4821, 84, 241, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[480700, 11108, 4826, 84, 236, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[485529, 11194, 4397, 77, 240, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[489929, 11273, 3974, 70, 248, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[493918, 11346, 2069, 59, 100, "Output",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[496002, 11408, 314, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[496341, 11421, 293, 6, 31, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[496637, 11429, 25080, 420, 238, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[521720, 11851, 1176, 31, 69, "Output",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[522933, 11887, 118, 3, 36, "Subsection",
   Evaluatable->False,
   CellTags->"FindPeaks"],
  Cell[523076, 11894, 193, 5, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[523272, 11901, 778, 12, 177, "Print",
   CellTags->{"FindPeaks", "Info3514542312-2851169"}],
  Cell[524087, 11918, 153, 4, 31, "Input",
   CellTags->"FindPeaks"],
  Cell[524243, 11924, 799, 24, 71, "Output",
   CellTags->"FindPeaks"],
  Cell[525079, 11953, 259, 6, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--FindBkgd option", 
     "FindBkgd option to FindPeaks"}],
  Cell[525341, 11961, 552, 9, 109, "Print",
   CellTags->{
    "FindBkgd option to FindPeaks", "FindPeaks", "FindPeaks--FindBkgd option",
      "Info3514542319-2851169"}],
  Cell[525930, 11975, 275, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--MaximumPeaks option", 
     "MaximumPeaks option to FindPeaks"}],
  Cell[526208, 11984, 370, 7, 58, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--MaximumPeaks option", "Info3514542323-2851169", 
     "MaximumPeaks option to FindPeaks"}],
  Cell[526615, 11996, 279, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks"}],
  Cell[526897, 12005, 448, 8, 75, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", "Info3514542327-2851169", 
     "ShowProgress--option to FindPeaks"}],
  Cell[527382, 12018, 230, 5, 31, "Input",
   CellTags->{"FindPeaks", "Amplitude returned by FindPeaks"}],
  Cell[527615, 12025, 265, 5, 40, "Print",
   CellTags->{
    "Amplitude returned by FindPeaks", "FindPeaks", "Info3514542330-2851169"}],
  Cell[527917, 12035, 220, 5, 31, "Input",
   CellTags->{"FindPeaks", "Bkgd returned by FindPeaks"}],
  Cell[528140, 12042, 407, 7, 75, "Print",
   CellTags->{
    "Bkgd returned by FindPeaks", "FindPeaks", "Info3514542333-2851169"}],
  Cell[528584, 12054, 234, 5, 31, "Input",
   CellTags->{"FindPeaks", "CenterValue returned by FindPeaks"}],
  Cell[528821, 12061, 265, 5, 40, "Print",
   CellTags->{
    "CenterValue returned by FindPeaks", "FindPeaks", 
     "Info3514542337-2851169"}],
  Cell[529123, 12071, 220, 5, 31, "Input",
   CellTags->{"FindPeaks", "FWHM returned by FindPeaks"}],
  Cell[529346, 12078, 276, 5, 58, "Print",
   CellTags->{
    "FindPeaks", "FWHM returned by FindPeaks", "Info3514542341-2851169"}],
  Cell[529659, 12088, 250, 5, 31, "Input",
   CellTags->{"FindPeaks", "IndependentVariable returned by FindPeaks"}],
  Cell[529912, 12095, 306, 6, 58, "Print",
   CellTags->{
    "FindPeaks", "IndependentVariable returned by FindPeaks", 
     "Info3514542344-2851169"}],
  Cell[530255, 12106, 214, 5, 31, "Input",
   CellTags->{"FindPeaks", "Model for FindPeaks"}],
  Cell[530472, 12113, 231, 4, 40, "Print",
   CellTags->{"FindPeaks", "Info3514542346-2851169", "Model for FindPeaks"}],
  Cell[530740, 12122, 235, 5, 31, "Input",
   CellTags->{"FindPeaks", "Parameters returned by FindPeaks"}],
  Cell[530978, 12129, 313, 6, 58, "Print",
   CellTags->{
    "FindPeaks", "Info3514542351-2851169", 
     "Parameters returned by FindPeaks"}],
  Cell[531328, 12140, 228, 5, 31, "Input",
   CellTags->{"FindPeaks", "PeakArea returned by FindPeaks"}],
  Cell[531559, 12147, 262, 5, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542354-2851169", "PeakArea returned by FindPeaks"}],
  
  Cell[531858, 12157, 220, 4, 31, "Input",
   CellTags->{"FindPeaks", "PeaksFound return by FindPeaks"}],
  Cell[532081, 12163, 254, 5, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542356-2851169", "PeaksFound return by FindPeaks"}],
  
  Cell[532372, 12173, 230, 5, 31, "Input",
   CellTags->{"FindPeaks", "PeakWidth returned by FindPeaks"}],
  Cell[532605, 12180, 519, 8, 109, "Print",
   CellTags->{
    "FindPeaks", "Info3514542361-2851169", "PeakWidth returned by FindPeaks"}],
  Cell[533161, 12193, 225, 5, 31, "Input",
   CellTags->{"FindPeaks", "Sigma returned by FindPeaks"}],
  Cell[533389, 12200, 273, 5, 58, "Print",
   CellTags->{
    "FindPeaks", "Info3514542364-2851169", "Sigma returned by FindPeaks"}],
  Cell[534967, 12262, 767, 22, 72, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}]},
 "FindPeaks--algorithm"->{
  Cell[360809, 8751, 854, 26, 83, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
  Cell[361666, 8779, 421, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
  Cell[362090, 8791, 684, 17, 84, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
  Cell[403251, 9716, 382, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403658, 9732, 296, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403979, 9743, 11769, 198, 235, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[415751, 9943, 12112, 204, 230, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[427866, 10149, 12166, 205, 225, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[440035, 10356, 11545, 195, 226, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[451583, 10553, 10874, 184, 233, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[462472, 10740, 974, 26, 55, "Output",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[463461, 10769, 941, 18, 101, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}]},
 "Info3514542237-2167347"->{
  Cell[363770, 8847, 496, 8, 109, "Print",
   CellTags->{"FindPeaks", "Info3514542237-2167347"}]},
 "Info3514542274-2167347"->{
  Cell[391411, 9505, 424, 7, 109, "Print",
   CellTags->{"FindPeaks", "Info3514542274-2167347"}]},
 "FindPeaks--ShowProgress option"->{
  Cell[403251, 9716, 382, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403658, 9732, 296, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403979, 9743, 11769, 198, 235, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[415751, 9943, 12112, 204, 230, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[427866, 10149, 12166, 205, 225, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[440035, 10356, 11545, 195, 226, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[451583, 10553, 10874, 184, 233, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[462472, 10740, 974, 26, 55, "Output",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[463461, 10769, 941, 18, 101, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[526615, 11996, 279, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks"}],
  Cell[526897, 12005, 448, 8, 75, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", "Info3514542327-2851169", 
     "ShowProgress--option to FindPeaks"}]},
 "ShowProgress--option to FindPeaks"->{
  Cell[403251, 9716, 382, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403658, 9732, 296, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[403979, 9743, 11769, 198, 235, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[415751, 9943, 12112, 204, 230, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[427866, 10149, 12166, 205, 225, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[440035, 10356, 11545, 195, 226, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[451583, 10553, 10874, 184, 233, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[462472, 10740, 974, 26, 55, "Output",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[463461, 10769, 941, 18, 101, "Text",
   Evaluatable->False,
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
  Cell[526615, 11996, 279, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", 
     "ShowProgress--option to FindPeaks"}],
  Cell[526897, 12005, 448, 8, 75, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", "Info3514542327-2851169", 
     "ShowProgress--option to FindPeaks"}]},
 "FindFit--initial parameter values"->{
  Cell[464405, 10789, 255, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[464663, 10797, 767, 22, 72, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[465455, 10823, 199, 4, 31, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[465657, 10829, 4778, 84, 245, "Output",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[470450, 10916, 306, 7, 47, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[470781, 10927, 272, 6, 31, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[471078, 10937, 4795, 83, 251, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[475876, 11022, 4821, 84, 241, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[480700, 11108, 4826, 84, 236, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[485529, 11194, 4397, 77, 240, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[489929, 11273, 3974, 70, 248, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[493918, 11346, 2069, 59, 100, "Output",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[496002, 11408, 314, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[496341, 11421, 293, 6, 31, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[496637, 11429, 25080, 420, 238, "Print",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[521720, 11851, 1176, 31, 69, "Output",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
  Cell[534967, 12262, 767, 22, 72, "Input",
   CellTags->{"FindPeaks", "FindFit--initial parameter values"}]},
 "Info3514542312-2851169"->{
  Cell[523272, 11901, 778, 12, 177, "Print",
   CellTags->{"FindPeaks", "Info3514542312-2851169"}]},
 "FindPeaks--FindBkgd option"->{
  Cell[525079, 11953, 259, 6, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--FindBkgd option", 
     "FindBkgd option to FindPeaks"}],
  Cell[525341, 11961, 552, 9, 109, "Print",
   CellTags->{
    "FindBkgd option to FindPeaks", "FindPeaks", "FindPeaks--FindBkgd option",
      "Info3514542319-2851169"}]},
 "FindBkgd option to FindPeaks"->{
  Cell[525079, 11953, 259, 6, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--FindBkgd option", 
     "FindBkgd option to FindPeaks"}],
  Cell[525341, 11961, 552, 9, 109, "Print",
   CellTags->{
    "FindBkgd option to FindPeaks", "FindPeaks", "FindPeaks--FindBkgd option",
      "Info3514542319-2851169"}]},
 "Info3514542319-2851169"->{
  Cell[525341, 11961, 552, 9, 109, "Print",
   CellTags->{
    "FindBkgd option to FindPeaks", "FindPeaks", "FindPeaks--FindBkgd option",
      "Info3514542319-2851169"}]},
 "FindPeaks--MaximumPeaks option"->{
  Cell[525930, 11975, 275, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--MaximumPeaks option", 
     "MaximumPeaks option to FindPeaks"}],
  Cell[526208, 11984, 370, 7, 58, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--MaximumPeaks option", "Info3514542323-2851169", 
     "MaximumPeaks option to FindPeaks"}]},
 "MaximumPeaks option to FindPeaks"->{
  Cell[525930, 11975, 275, 7, 31, "Input",
   CellTags->{
    "FindPeaks", "FindPeaks--MaximumPeaks option", 
     "MaximumPeaks option to FindPeaks"}],
  Cell[526208, 11984, 370, 7, 58, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--MaximumPeaks option", "Info3514542323-2851169", 
     "MaximumPeaks option to FindPeaks"}]},
 "Info3514542323-2851169"->{
  Cell[526208, 11984, 370, 7, 58, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--MaximumPeaks option", "Info3514542323-2851169", 
     "MaximumPeaks option to FindPeaks"}]},
 "Info3514542327-2851169"->{
  Cell[526897, 12005, 448, 8, 75, "Print",
   CellTags->{
    "FindPeaks", "FindPeaks--ShowProgress option", "Info3514542327-2851169", 
     "ShowProgress--option to FindPeaks"}]},
 "Amplitude returned by FindPeaks"->{
  Cell[527382, 12018, 230, 5, 31, "Input",
   CellTags->{"FindPeaks", "Amplitude returned by FindPeaks"}],
  Cell[527615, 12025, 265, 5, 40, "Print",
   CellTags->{
    "Amplitude returned by FindPeaks", "FindPeaks", 
     "Info3514542330-2851169"}]},
 "Info3514542330-2851169"->{
  Cell[527615, 12025, 265, 5, 40, "Print",
   CellTags->{
    "Amplitude returned by FindPeaks", "FindPeaks", 
     "Info3514542330-2851169"}]},
 "Bkgd returned by FindPeaks"->{
  Cell[527917, 12035, 220, 5, 31, "Input",
   CellTags->{"FindPeaks", "Bkgd returned by FindPeaks"}],
  Cell[528140, 12042, 407, 7, 75, "Print",
   CellTags->{
    "Bkgd returned by FindPeaks", "FindPeaks", "Info3514542333-2851169"}]},
 "Info3514542333-2851169"->{
  Cell[528140, 12042, 407, 7, 75, "Print",
   CellTags->{
    "Bkgd returned by FindPeaks", "FindPeaks", "Info3514542333-2851169"}]},
 "CenterValue returned by FindPeaks"->{
  Cell[528584, 12054, 234, 5, 31, "Input",
   CellTags->{"FindPeaks", "CenterValue returned by FindPeaks"}],
  Cell[528821, 12061, 265, 5, 40, "Print",
   CellTags->{
    "CenterValue returned by FindPeaks", "FindPeaks", 
     "Info3514542337-2851169"}]},
 "Info3514542337-2851169"->{
  Cell[528821, 12061, 265, 5, 40, "Print",
   CellTags->{
    "CenterValue returned by FindPeaks", "FindPeaks", 
     "Info3514542337-2851169"}]},
 "FWHM returned by FindPeaks"->{
  Cell[529123, 12071, 220, 5, 31, "Input",
   CellTags->{"FindPeaks", "FWHM returned by FindPeaks"}],
  Cell[529346, 12078, 276, 5, 58, "Print",
   CellTags->{
    "FindPeaks", "FWHM returned by FindPeaks", "Info3514542341-2851169"}]},
 "Info3514542341-2851169"->{
  Cell[529346, 12078, 276, 5, 58, "Print",
   CellTags->{
    "FindPeaks", "FWHM returned by FindPeaks", "Info3514542341-2851169"}]},
 "IndependentVariable returned by FindPeaks"->{
  Cell[529659, 12088, 250, 5, 31, "Input",
   CellTags->{"FindPeaks", "IndependentVariable returned by FindPeaks"}],
  Cell[529912, 12095, 306, 6, 58, "Print",
   CellTags->{
    "FindPeaks", "IndependentVariable returned by FindPeaks", 
     "Info3514542344-2851169"}]},
 "Info3514542344-2851169"->{
  Cell[529912, 12095, 306, 6, 58, "Print",
   CellTags->{
    "FindPeaks", "IndependentVariable returned by FindPeaks", 
     "Info3514542344-2851169"}]},
 "Model for FindPeaks"->{
  Cell[530255, 12106, 214, 5, 31, "Input",
   CellTags->{"FindPeaks", "Model for FindPeaks"}],
  Cell[530472, 12113, 231, 4, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542346-2851169", "Model for FindPeaks"}]},
 "Info3514542346-2851169"->{
  Cell[530472, 12113, 231, 4, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542346-2851169", "Model for FindPeaks"}]},
 "Parameters returned by FindPeaks"->{
  Cell[530740, 12122, 235, 5, 31, "Input",
   CellTags->{"FindPeaks", "Parameters returned by FindPeaks"}],
  Cell[530978, 12129, 313, 6, 58, "Print",
   CellTags->{
    "FindPeaks", "Info3514542351-2851169", 
     "Parameters returned by FindPeaks"}]},
 "Info3514542351-2851169"->{
  Cell[530978, 12129, 313, 6, 58, "Print",
   CellTags->{
    "FindPeaks", "Info3514542351-2851169", 
     "Parameters returned by FindPeaks"}]},
 "PeakArea returned by FindPeaks"->{
  Cell[531328, 12140, 228, 5, 31, "Input",
   CellTags->{"FindPeaks", "PeakArea returned by FindPeaks"}],
  Cell[531559, 12147, 262, 5, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542354-2851169", "PeakArea returned by FindPeaks"}]},
 "Info3514542354-2851169"->{
  Cell[531559, 12147, 262, 5, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542354-2851169", "PeakArea returned by FindPeaks"}]},
 "PeaksFound return by FindPeaks"->{
  Cell[531858, 12157, 220, 4, 31, "Input",
   CellTags->{"FindPeaks", "PeaksFound return by FindPeaks"}],
  Cell[532081, 12163, 254, 5, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542356-2851169", "PeaksFound return by FindPeaks"}]},
 "Info3514542356-2851169"->{
  Cell[532081, 12163, 254, 5, 40, "Print",
   CellTags->{
    "FindPeaks", "Info3514542356-2851169", "PeaksFound return by FindPeaks"}]},
 "PeakWidth returned by FindPeaks"->{
  Cell[532372, 12173, 230, 5, 31, "Input",
   CellTags->{"FindPeaks", "PeakWidth returned by FindPeaks"}],
  Cell[532605, 12180, 519, 8, 109, "Print",
   CellTags->{
    "FindPeaks", "Info3514542361-2851169", 
     "PeakWidth returned by FindPeaks"}]},
 "Info3514542361-2851169"->{
  Cell[532605, 12180, 519, 8, 109, "Print",
   CellTags->{
    "FindPeaks", "Info3514542361-2851169", 
     "PeakWidth returned by FindPeaks"}]},
 "Sigma returned by FindPeaks"->{
  Cell[533161, 12193, 225, 5, 31, "Input",
   CellTags->{"FindPeaks", "Sigma returned by FindPeaks"}],
  Cell[533389, 12200, 273, 5, 58, "Print",
   CellTags->{
    "FindPeaks", "Info3514542364-2851169", "Sigma returned by FindPeaks"}]},
 "Info3514542364-2851169"->{
  Cell[533389, 12200, 273, 5, 58, "Print",
   CellTags->{
    "FindPeaks", "Info3514542364-2851169", "Sigma returned by FindPeaks"}]},
 "FitPeaks"->{
  Cell[533723, 12212, 70, 1, 71, "Section",
   CellTags->"FitPeaks"],
  Cell[533796, 12215, 353, 14, 47, "Text",
   CellTags->"FitPeaks"],
  Cell[534174, 12233, 59, 1, 36, "Subsection",
   CellTags->"FitPeaks"],
  Cell[534236, 12236, 355, 11, 47, "Text",
   CellTags->"FitPeaks"],
  Cell[534594, 12249, 298, 8, 48, "Text",
   CellTags->"FitPeaks"],
  Cell[535759, 12288, 131, 3, 31, "Input",
   CellTags->"FitPeaks"],
  Cell[535893, 12293, 4713, 84, 245, "Output",
   CellTags->"FitPeaks"],
  Cell[540643, 12382, 89, 2, 31, "Input",
   CellTags->"FitPeaks"],
  Cell[540735, 12386, 37988, 634, 238, 24911, 417, "CachedBoxData", 
  "BoxData", "Print",
   CellTags->"FitPeaks"],
  Cell[578726, 13022, 1114, 31, 69, "Output",
   CellTags->"FitPeaks"],
  Cell[579855, 13056, 541, 18, 47, "Text",
   CellTags->{
    "FitPeaks", "FitPeaks--PeakShape option", 
     "PeakShape option to FindPeaks"}]},
 "FitPeaks--PeakShape option"->{
  Cell[579855, 13056, 541, 18, 47, "Text",
   CellTags->{
    "FitPeaks", "FitPeaks--PeakShape option", 
     "PeakShape option to FindPeaks"}]},
 "PeakShape option to FindPeaks"->{
  Cell[579855, 13056, 541, 18, 47, "Text",
   CellTags->{
    "FitPeaks", "FitPeaks--PeakShape option", 
     "PeakShape option to FindPeaks"}]},
 "FitExponent"->{
  Cell[580433, 13079, 65, 1, 36, "Subsection",
   CellTags->"FitExponent"],
  Cell[580501, 13082, 978, 28, 85, "Text",
   CellTags->"FitExponent"],
  Cell[581482, 13112, 246, 9, 30, "Text",
   CellTags->"FitExponent"],
  Cell[583787, 13194, 136, 3, 31, "Input",
   CellTags->"FitExponent"],
  Cell[583926, 13199, 1973, 41, 234, "Output",
   CellTags->"FitExponent"],
  Cell[585914, 13243, 76, 1, 29, "Text",
   CellTags->"FitExponent"],
  Cell[586015, 13248, 95, 2, 31, "Input",
   CellTags->"FitExponent"],
  Cell[586113, 13252, 21631, 366, 227, 11414, 196, "CachedBoxData", 
  "BoxData", "Print",
   CellTags->"FitExponent"],
  Cell[607747, 13620, 523, 14, 33, "Output",
   CellTags->"FitExponent"],
  Cell[608285, 13637, 223, 8, 29, "Text",
   CellTags->"FitExponent"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"EDAListPlot", 612594, 13791},
 {"BoxPlot", 613368, 13812},
 {"Info3514541575-3150195", 615738, 13882},
 {"Info3514541578-3150195", 615861, 13885},
 {"BoxPlot--options", 615978, 13888},
 {"EDALogListPlot", 616292, 13896},
 {"EDALogLogListPlot", 616515, 13901},
 {"Info3514541620-3150195", 616743, 13906},
 {"EDAListPlot--list of all options", 616882, 13909},
 {"Info3514541628-3150195", 617133, 13914},
 {"Info3514541635-3150195", 617259, 13917},
 {"Info3514541638-3150195", 617370, 13920},
 {"Transforming data", 617476, 13923},
 {"Info3514541646-3150195", 638035, 14462},
 {"Level-spread", 638161, 14465},
 {"Tukey's ladder of powers", 642496, 14563},
 {"Ladder of powers", 643097, 14578},
 {"Info3514541689-3150195", 643704, 14593},
 {"Monotone bahavior of residuals", 643848, 14596},
 {"Info3514541754-3150195", 644805, 14617},
 {"Info3514541764-3150195", 644957, 14620},
 {"Info3514541838-2167347", 645109, 14623},
 {"FindPeaks", 645233, 14626},
 {"FindPeaks--algorithm", 655775, 14877},
 {"Info3514542237-2167347", 657831, 14925},
 {"Info3514542274-2167347", 657959, 14928},
 {"FindPeaks--ShowProgress option", 658095, 14931},
 {"ShowProgress--option to FindPeaks", 660142, 14978},
 {"FindFit--initial parameter values", 662189, 15025},
 {"Info3514542312-2851169", 664171, 15063},
 {"FindPeaks--FindBkgd option", 664305, 15066},
 {"FindBkgd option to FindPeaks", 664658, 15075},
 {"Info3514542319-2851169", 665005, 15084},
 {"FindPeaks--MaximumPeaks option", 665215, 15089},
 {"MaximumPeaks option to FindPeaks", 665587, 15098},
 {"Info3514542323-2851169", 665949, 15107},
 {"Info3514542327-2851169", 666158, 15112},
 {"Amplitude returned by FindPeaks", 666377, 15117},
 {"Info3514542330-2851169", 666658, 15124},
 {"Bkgd returned by FindPeaks", 666836, 15129},
 {"Info3514542333-2851169", 667101, 15135},
 {"CenterValue returned by FindPeaks", 667275, 15139},
 {"Info3514542337-2851169", 667560, 15146},
 {"FWHM returned by FindPeaks", 667740, 15151},
 {"Info3514542341-2851169", 668005, 15157},
 {"IndependentVariable returned by FindPeaks", 668187, 15161},
 {"Info3514542344-2851169", 668488, 15168},
 {"Model for FindPeaks", 668669, 15173},
 {"Info3514542346-2851169", 668920, 15179},
 {"Parameters returned by FindPeaks", 669086, 15183},
 {"Info3514542351-2851169", 669369, 15190},
 {"PeakArea returned by FindPeaks", 669552, 15195},
 {"Info3514542354-2851169", 669825, 15201},
 {"PeaksFound return by FindPeaks", 670000, 15205},
 {"Info3514542356-2851169", 670273, 15211},
 {"PeakWidth returned by FindPeaks", 670449, 15215},
 {"Info3514542361-2851169", 670731, 15222},
 {"Sigma returned by FindPeaks", 670911, 15227},
 {"Info3514542364-2851169", 671178, 15233},
 {"FitPeaks", 671328, 15237},
 {"FitPeaks--PeakShape option", 672255, 15263},
 {"PeakShape option to FindPeaks", 672437, 15268},
 {"FitExponent", 672601, 15273}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 119, 6, 191, "Title",
 Evaluatable->False],
Cell[689, 30, 155, 5, 29, "Text",
 Evaluatable->False],
Cell[847, 37, 207, 7, 29, "Text",
 Evaluatable->False],
Cell[1057, 46, 191, 6, 29, "Text",
 Evaluatable->False],
Cell[1251, 54, 242, 7, 29, "Text",
 Evaluatable->False],
Cell[1496, 63, 242, 7, 29, "Text",
 Evaluatable->False],
Cell[1741, 72, 429, 8, 65, "Text",
 Evaluatable->False],
Cell[2173, 82, 253, 9, 29, "Text",
 Evaluatable->False],
Cell[2429, 93, 761, 21, 84, "Text"],
Cell[3193, 116, 387, 9, 47, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[3605, 129, 90, 2, 71, "Section",
 Evaluatable->False],
Cell[3698, 133, 665, 20, 65, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[4388, 157, 111, 3, 36, "Subsection",
 Evaluatable->False,
 CellTags->"EDAListPlot"],
Cell[4502, 162, 284, 11, 29, "Text",
 Evaluatable->False,
 CellTags->"EDAListPlot"],
Cell[4789, 175, 667, 22, 65, "Text",
 Evaluatable->False,
 CellTags->"EDAListPlot"],
Cell[5459, 199, 131, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[5615, 205, 139, 2, 31, "Input"],
Cell[5757, 209, 629, 15, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6423, 229, 144, 2, 31, "Input"],
Cell[6570, 233, 5448, 106, 253, "Output"]
}, Open  ]],
Cell[12033, 342, 233, 7, 29, "Text",
 Evaluatable->False,
 CellTags->"EDAListPlot"],
Cell[CellGroupData[{
Cell[12291, 353, 182, 3, 31, "Input"],
Cell[12476, 358, 1273, 27, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13786, 390, 185, 3, 31, "Input"],
Cell[13974, 395, 11211, 216, 242, "Output"]
}, Open  ]],
Cell[25200, 614, 230, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[25455, 623, 179, 3, 31, "Input"],
Cell[25637, 628, 306, 8, 21, "Message"],
Cell[25946, 638, 143, 2, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26138, 646, 163, 4, 36, "Subsection",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[26304, 652, 416, 9, 47, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[26723, 663, 95, 1, 31, "Input"],
Cell[26821, 666, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[26915, 671, 113, 3, 31, "Input",
 CellTags->"BoxPlot"],
Cell[27031, 676, 621, 13, 40, "Message",
 CellTags->"BoxPlot"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27689, 694, 109, 3, 31, "Input",
 CellTags->"BoxPlot"],
Cell[27801, 699, 311, 5, 75, "Print",
 CellTags->{"BoxPlot", "Info3514541575-3150195"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[28149, 709, 108, 3, 31, "Input",
 CellTags->"BoxPlot"],
Cell[28260, 714, 309, 5, 75, "Print",
 CellTags->{"BoxPlot", "Info3514541578-3150195"}]
}, Open  ]],
Cell[28584, 722, 388, 10, 47, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[CellGroupData[{
Cell[28997, 736, 883, 21, 112, "Input",
 CellTags->"BoxPlot"],
Cell[29883, 759, 8845, 247, 134, "Output",
 CellTags->"BoxPlot"]
}, Open  ]],
Cell[38743, 1009, 168, 5, 29, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[38914, 1016, 226, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[39143, 1024, 1075, 25, 92, "Input"],
Cell[CellGroupData[{
Cell[40243, 1053, 324, 5, 31, "Input"],
Cell[40570, 1060, 1582, 40, 103, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42189, 1105, 186, 3, 31, "Input"],
Cell[42378, 1110, 1545, 39, 103, "Print"]
}, Open  ]],
Cell[43938, 1152, 244, 10, 29, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[CellGroupData[{
Cell[44207, 1166, 591, 16, 52, "Input",
 CellTags->"BoxPlot"],
Cell[44801, 1184, 1880, 54, 447, "Output",
 CellTags->"BoxPlot"]
}, Open  ]],
Cell[46696, 1241, 803, 14, 83, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[47502, 1257, 435, 9, 65, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[CellGroupData[{
Cell[47962, 1270, 1018, 26, 112, "Input",
 CellTags->"BoxPlot"],
Cell[48983, 1298, 8794, 246, 134, "Output",
 CellTags->"BoxPlot"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57814, 1549, 219, 5, 31, "Input"],
Cell[58036, 1556, 1494, 38, 103, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59567, 1599, 218, 5, 31, "Input"],
Cell[59788, 1606, 1484, 38, 103, "Print"]
}, Open  ]],
Cell[61287, 1647, 165, 7, 29, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[CellGroupData[{
Cell[61477, 1658, 752, 19, 72, "Input",
 CellTags->"BoxPlot"],
Cell[62232, 1679, 2536, 65, 395, "Output",
 CellTags->"BoxPlot"]
}, Open  ]],
Cell[64783, 1747, 387, 8, 47, "Text",
 Evaluatable->False,
 CellTags->"BoxPlot"],
Cell[65173, 1757, 682, 27, 48, "Text",
 Evaluatable->False,
 CellTags->{"BoxPlot", "BoxPlot--options"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[65892, 1789, 101, 1, 36, "Subsection",
 CellTags->{"EDALogListPlot", "EDALogLogListPlot"}],
Cell[65996, 1792, 1180, 36, 85, "Text",
 CellTags->{"EDALogListPlot", "EDALogLogListPlot"}],
Cell[67179, 1830, 139, 4, 29, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67355, 1839, 180, 7, 36, "Subsection",
 Evaluatable->False],
Cell[67538, 1848, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[67632, 1853, 197, 5, 31, "Input",
 CellTags->"EDAListPlot"],
Cell[67832, 1860, 518, 8, 126, "Print",
 CellTags->{"EDAListPlot", "Info3514541620-3150195"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[68387, 1873, 261, 5, 31, "Input",
 CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}],
Cell[68651, 1880, 4438, 144, 876, "Output",
 CellTags->{"EDAListPlot--list of all options", "EDAListPlot"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[73126, 2029, 189, 5, 31, "Input",
 CellTags->"BoxPlot"],
Cell[73318, 2036, 771, 11, 177, "Print",
 CellTags->{"BoxPlot", "Info3514541628-3150195"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[74126, 2052, 171, 4, 31, "Input",
 CellTags->{"BoxPlot--options", "BoxPlot"}],
Cell[74300, 2058, 3178, 104, 596, "Output",
 CellTags->{"BoxPlot--options", "BoxPlot"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[77515, 2167, 57, 1, 31, "Input"],
Cell[77575, 2170, 297, 5, 75, "Print",
 CellTags->"Info3514541635-3150195"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77909, 2180, 60, 1, 31, "Input"],
Cell[77972, 2183, 304, 5, 75, "Print",
 CellTags->"Info3514541638-3150195"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78337, 2195, 118, 3, 71, "Section",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[78458, 2200, 841, 20, 101, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[79324, 2224, 147, 3, 36, "Subsection",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[79474, 2229, 164, 5, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[79641, 2236, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[79735, 2241, 127, 3, 31, "Input",
 CellTags->"Transforming data"],
Cell[79865, 2246, 507, 11, 23, "Message",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80409, 2262, 114, 3, 31, "Input",
 CellTags->"Transforming data"],
Cell[80526, 2267, 725, 10, 177, "Print",
 CellTags->{"Info3514541646-3150195", "Transforming data"}]
}, Open  ]],
Cell[81266, 2280, 218, 7, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[81509, 2291, 385, 9, 31, "Input",
 CellTags->"Transforming data"],
Cell[81897, 2302, 6780, 131, 359, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[88692, 2436, 373, 8, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[89068, 2446, 567, 11, 65, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[89638, 2459, 345, 8, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[90008, 2471, 413, 10, 31, "Input",
 CellTags->"Transforming data"],
Cell[90424, 2483, 10848, 194, 367, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[101287, 2680, 216, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[101506, 2688, 167, 5, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[101676, 2695, 210, 6, 23, "DisplayMath",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[101889, 2703, 127, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[102019, 2708, 148, 3, 23, "DisplayFormula",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[102170, 2713, 401, 15, 30, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[102574, 2730, 129, 3, 23, "DisplayFormula",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[102706, 2735, 198, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[102907, 2743, 262, 8, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
Cell[CellGroupData[{
Cell[103194, 2755, 938, 26, 72, "Input",
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
Cell[104135, 2783, 1244, 31, 161, "Output",
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}]
}, Open  ]],
Cell[105394, 2817, 267, 7, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Tukey's ladder of powers", "Ladder of powers", "Transforming data"}],
Cell[105664, 2826, 1106, 43, 67, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[106773, 2871, 456, 9, 65, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[107232, 2882, 189, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[107446, 2892, 151, 4, 31, "Input",
 CellTags->"Transforming data"],
Cell[107600, 2898, 1551, 38, 88, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[109166, 2939, 142, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[109333, 2946, 257, 8, 31, "Input",
 CellTags->"Transforming data"],
Cell[109593, 2956, 487, 10, 50, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[110095, 2969, 128, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[110248, 2976, 364, 11, 31, "Input",
 CellTags->"Transforming data"],
Cell[110615, 2989, 550, 11, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[111180, 3003, 266, 11, 30, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[111449, 3016, 230, 7, 31, "Input",
 CellTags->"Transforming data"],
Cell[111682, 3025, 494, 18, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[112201, 3047, 288, 8, 31, "Input",
 CellTags->"Transforming data"],
Cell[112492, 3057, 7837, 135, 236, "Print",
 CellTags->"Transforming data"],
Cell[120332, 3194, 573, 15, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[120920, 3212, 272, 7, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[121217, 3223, 309, 9, 40, "Input",
 CellTags->"Transforming data"],
Cell[121529, 3234, 10880, 193, 237, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[132424, 3430, 229, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[132656, 3438, 389, 8, 65, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[133048, 3448, 268, 7, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[133319, 3457, 184, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[133528, 3467, 125, 3, 31, "Input",
 CellTags->"Transforming data"],
Cell[133656, 3472, 480, 10, 23, "Message",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134173, 3487, 112, 3, 31, "Input",
 CellTags->"Transforming data"],
Cell[134288, 3492, 641, 9, 143, "Print",
 CellTags->{"Info3514541689-3150195", "Transforming data"}]
}, Open  ]],
Cell[134944, 3504, 257, 9, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[135226, 3517, 301, 8, 31, "Input",
 CellTags->"Transforming data"],
Cell[135530, 3527, 11870, 228, 238, "Print",
 CellTags->"Transforming data"],
Cell[147403, 3757, 2786, 82, 126, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[150204, 3842, 128, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[150357, 3847, 722, 20, 72, "Input"],
Cell[151082, 3869, 1173, 37, 50, "Output"]
}, Open  ]],
Cell[152270, 3909, 304, 10, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[152599, 3923, 681, 16, 52, "Input",
 CellTags->"Transforming data"],
Cell[153283, 3941, 1209, 25, 228, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[154507, 3969, 340, 9, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[154850, 3980, 585, 20, 56, "Input",
 CellTags->"Transforming data"],
Cell[155438, 4002, 239, 8, 31, "Input",
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[155702, 4014, 492, 15, 31, "Input",
 CellTags->"Transforming data"],
Cell[156197, 4031, 926, 20, 240, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[157138, 4054, 201, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[157342, 4062, 295, 10, 30, "DisplayMath",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[157640, 4074, 356, 11, 48, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[157999, 4087, 679, 13, 83, "Text",
 Evaluatable->False,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
Cell[158681, 4102, 167, 5, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[158873, 4111, 288, 8, 31, "Input",
 CellTags->"Transforming data"],
Cell[159164, 4121, 7305, 130, 232, "Print",
 CellTags->"Transforming data"],
Cell[166472, 4253, 599, 16, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[167086, 4272, 337, 11, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[167426, 4285, 485, 15, 31, "Input",
 CellTags->"Transforming data"],
Cell[167914, 4302, 111, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[168050, 4309, 310, 8, 31, "Input",
 CellTags->"Transforming data"],
Cell[168363, 4319, 11594, 222, 236, "Print",
 CellTags->"Transforming data"],
Cell[179960, 4543, 2844, 83, 126, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[182819, 4629, 208, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[183030, 4637, 619, 20, 86, "Input",
 CellTags->"Transforming data"],
Cell[183652, 4659, 197, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[183874, 4669, 172, 4, 31, "Input",
 CellTags->"Transforming data"],
Cell[184049, 4675, 989, 22, 239, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[185053, 4700, 674, 14, 83, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[185730, 4716, 873, 16, 120, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[186606, 4734, 403, 10, 48, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[187012, 4746, 132, 3, 23, "DisplayFormula",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[187147, 4751, 509, 14, 67, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[187681, 4769, 164, 3, 27, "Subsubsection",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[187848, 4774, 443, 9, 47, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[188294, 4785, 512, 10, 65, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[188809, 4797, 226, 6, 29, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[189038, 4805, 365, 9, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[189406, 4816, 451, 12, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[CellGroupData[{
Cell[189882, 4832, 530, 13, 52, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[190415, 4847, 7137, 137, 387, "Output",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[197567, 4987, 482, 9, 65, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[198052, 4998, 351, 10, 47, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[CellGroupData[{
Cell[198428, 5012, 143, 3, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[198574, 5017, 520, 11, 23, "Message",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[199131, 5033, 130, 3, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[199264, 5038, 522, 8, 109, "Print",
 CellTags->{"Info3514541754-3150195", "Level-spread", "Transforming data"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[199823, 5051, 192, 4, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[200018, 5057, 1963, 39, 242, "Output",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[201996, 5099, 223, 6, 29, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[202222, 5107, 327, 7, 47, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[CellGroupData[{
Cell[202574, 5118, 143, 3, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[202720, 5123, 513, 11, 23, "Message",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[203270, 5139, 130, 3, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[203403, 5144, 577, 8, 126, "Print",
 CellTags->{"Info3514541764-3150195", "Level-spread", "Transforming data"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[204017, 5157, 457, 12, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[204477, 5171, 5859, 104, 238, "Print",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[210339, 5277, 2300, 68, 107, "Output",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[212676, 5350, 457, 12, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[213136, 5364, 5066, 91, 236, "Print",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[218205, 5457, 2323, 69, 107, "Output",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[220543, 5529, 237, 8, 29, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[220783, 5539, 527, 17, 40, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[221313, 5558, 527, 17, 40, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[221843, 5577, 231, 6, 29, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[CellGroupData[{
Cell[222099, 5587, 369, 8, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[222471, 5597, 8110, 135, 235, "Output",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[230596, 5735, 332, 10, 29, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}],
Cell[230931, 5747, 679, 22, 66, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[231613, 5771, 679, 22, 66, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[CellGroupData[{
Cell[232317, 5797, 353, 8, 31, "Input",
 CellTags->{"Level-spread", "Transforming data"}],
Cell[232673, 5807, 7816, 131, 229, "Output",
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]],
Cell[240504, 5941, 817, 14, 101, "Text",
 Evaluatable->False,
 CellTags->{"Level-spread", "Transforming data"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[241370, 5961, 135, 3, 36, "Subsection",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[241508, 5966, 681, 19, 65, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[242192, 5987, 366, 10, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[242561, 5999, 303, 7, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[242867, 6008, 187, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[243057, 6016, 235, 9, 23, "DisplayFormula",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[243295, 6027, 150, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[243448, 6032, 1167, 36, 123, "Input",
 CellTags->"Transforming data"],
Cell[244618, 6070, 241, 8, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[244862, 6080, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[244956, 6085, 240, 6, 31, "Input",
 CellTags->"Transforming data"],
Cell[245199, 6093, 4714, 143, 245, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[249928, 6239, 180, 5, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[250111, 6246, 789, 26, 31, "Input",
 CellTags->"Transforming data"],
Cell[250903, 6274, 251, 11, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[251179, 6289, 434, 14, 31, "Input",
 CellTags->"Transforming data"],
Cell[251616, 6305, 11543, 199, 227, "Print",
 CellTags->"Transforming data"],
Cell[263162, 6506, 524, 13, 33, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[263701, 6522, 132, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[263836, 6527, 129, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[263968, 6532, 125, 3, 23, "DisplayFormula",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[264096, 6537, 656, 27, 49, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[264755, 6566, 464, 14, 31, "Input",
 CellTags->"Transforming data"],
Cell[265222, 6582, 142, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[265389, 6589, 411, 13, 31, "Input",
 CellTags->"Transforming data"],
Cell[265803, 6604, 5728, 104, 238, "Print",
 CellTags->"Transforming data"],
Cell[271534, 6710, 545, 14, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[272094, 6727, 591, 13, 66, "Text",
 Evaluatable->False,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
Cell[272688, 6742, 602, 16, 66, "Text",
 Evaluatable->False,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
Cell[273293, 6760, 394, 8, 47, "Text",
 Evaluatable->False,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
Cell[273690, 6770, 606, 16, 48, "Text",
 CellTags->{"Transforming data", "Monotone bahavior of residuals"}],
Cell[274299, 6788, 461, 15, 29, "Text",
 Evaluatable->False,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}],
Cell[274763, 6805, 454, 9, 65, "Text",
 Evaluatable->False,
 CellTags->{"Monotone bahavior of residuals", "Transforming data"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[275254, 6819, 141, 3, 36, "Subsection",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[275398, 6824, 188, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[275589, 6832, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[275683, 6837, 122, 3, 31, "Input",
 CellTags->"Transforming data"],
Cell[275808, 6842, 475, 10, 23, "Message",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276320, 6857, 109, 3, 31, "Input",
 CellTags->"Transforming data"],
Cell[276432, 6862, 729, 10, 160, "Print",
 CellTags->{"Info3514541838-2167347", "Transforming data"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[277198, 6877, 171, 4, 31, "Input",
 CellTags->"Transforming data"],
Cell[277372, 6883, 5362, 107, 244, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[282749, 6993, 495, 15, 48, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[283247, 7010, 161, 5, 31, "Input",
 CellTags->"Transforming data"],
Cell[283411, 7017, 160, 5, 31, "Input",
 CellTags->"Transforming data"],
Cell[283574, 7024, 304, 10, 48, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[283881, 7036, 250, 8, 49, "Input",
 CellTags->"Transforming data"],
Cell[284134, 7046, 121, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[284258, 7051, 220, 7, 31, "Input",
 CellTags->"Transforming data"],
Cell[284481, 7060, 120, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[284626, 7067, 206, 6, 31, "Input",
 CellTags->"Transforming data"],
Cell[284835, 7075, 15171, 307, 235, "Print",
 CellTags->"Transforming data"],
Cell[300009, 7384, 571, 15, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[300595, 7402, 540, 12, 66, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[301160, 7418, 181, 5, 31, "Input",
 CellTags->"Transforming data"],
Cell[301344, 7425, 15311, 307, 235, "Print",
 CellTags->"Transforming data"],
Cell[316658, 7734, 440, 11, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[317113, 7748, 112, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[317228, 7753, 465, 9, 65, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[317696, 7764, 192, 6, 31, "Input",
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[317913, 7774, 379, 10, 31, "Input",
 CellTags->"Transforming data"],
Cell[318295, 7786, 5541, 106, 235, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[323851, 7895, 719, 12, 101, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[324573, 7909, 121, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[324719, 7916, 293, 9, 31, "Input",
 CellTags->"Transforming data"],
Cell[325015, 7927, 14831, 304, 235, "Print",
 CellTags->"Transforming data"],
Cell[339849, 8233, 595, 16, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[340459, 8252, 296, 7, 47, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[340758, 8261, 284, 9, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[341045, 8272, 353, 13, 23, "DisplayMath",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[341401, 8287, 120, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[341524, 8292, 183, 6, 42, "DisplayFormula",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[341710, 8300, 154, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[341889, 8307, 275, 8, 49, "Input",
 CellTags->"Transforming data"],
Cell[342167, 8317, 166, 3, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[342348, 8323, 283, 9, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[342634, 8334, 368, 13, 31, "Input",
 CellTags->"Transforming data"],
Cell[343005, 8349, 140, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[343148, 8354, 256, 8, 49, "Input",
 CellTags->"Transforming data"],
Cell[343407, 8364, 285, 11, 29, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"],
Cell[CellGroupData[{
Cell[343717, 8379, 270, 8, 31, "Input",
 CellTags->"Transforming data"],
Cell[343990, 8389, 15047, 306, 235, "Print",
 CellTags->"Transforming data"],
Cell[359040, 8697, 447, 11, 30, "Output",
 CellTags->"Transforming data"]
}, Open  ]],
Cell[359502, 8711, 537, 14, 65, "Text",
 Evaluatable->False,
 CellTags->"Transforming data"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[360088, 8731, 124, 3, 71, "Section",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[360215, 8736, 591, 13, 83, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[360809, 8751, 854, 26, 83, "Text",
 Evaluatable->False,
 CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
Cell[361666, 8779, 421, 10, 47, "Text",
 Evaluatable->False,
 CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
Cell[362090, 8791, 684, 17, 84, "Text",
 Evaluatable->False,
 CellTags->{"FindPeaks--algorithm", "FindPeaks"}],
Cell[362777, 8810, 161, 5, 29, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[362941, 8817, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[363035, 8822, 117, 3, 31, "Input",
 CellTags->"FindPeaks"],
Cell[363155, 8827, 471, 10, 23, "Message",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363663, 8842, 104, 3, 31, "Input",
 CellTags->"FindPeaks"],
Cell[363770, 8847, 496, 8, 109, "Print",
 CellTags->{"FindPeaks", "Info3514542237-2167347"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[364303, 8860, 166, 4, 31, "Input",
 CellTags->"FindPeaks"],
Cell[364472, 8866, 1929, 38, 242, "Output",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[366416, 8907, 157, 7, 29, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[CellGroupData[{
Cell[366598, 8918, 122, 3, 31, "Input",
 CellTags->"FindPeaks"],
Cell[366723, 8923, 703, 19, 50, "Output",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[367441, 8945, 871, 28, 86, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[368315, 8975, 185, 6, 29, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[CellGroupData[{
Cell[368525, 8985, 181, 5, 31, "Input",
 CellTags->"FindPeaks"],
Cell[368709, 8992, 1561, 45, 100, "Output",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[370285, 9040, 1083, 41, 86, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[CellGroupData[{
Cell[371393, 9085, 260, 6, 31, "Input",
 CellTags->"FindPeaks"],
Cell[371656, 9093, 15442, 266, 432, "Print",
 CellTags->"FindPeaks"],
Cell[387101, 9361, 1018, 28, 69, "Output",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[388134, 9392, 243, 7, 29, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[CellGroupData[{
Cell[388402, 9403, 154, 4, 31, "Input",
 CellTags->"FindPeaks"],
Cell[388559, 9409, 1638, 47, 136, "Output",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[390212, 9459, 175, 7, 30, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[390390, 9468, 236, 7, 29, "Text",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[CellGroupData[{
Cell[390651, 9479, 117, 3, 31, "Input",
 CellTags->"FindPeaks"],
Cell[390771, 9484, 496, 11, 23, "Message",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391304, 9500, 104, 3, 31, "Input",
 CellTags->"FindPeaks"],
Cell[391411, 9505, 424, 7, 109, "Print",
 CellTags->{"FindPeaks", "Info3514542274-2167347"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[391872, 9517, 227, 6, 31, "Input",
 CellTags->"FindPeaks"],
Cell[392102, 9525, 11134, 188, 227, "Output",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[403251, 9716, 382, 12, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
Cell[CellGroupData[{
Cell[403658, 9732, 296, 7, 31, "Input",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
Cell[CellGroupData[{
Cell[403979, 9743, 11769, 198, 235, "Print",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
Cell[415751, 9943, 12112, 204, 230, "Print",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
Cell[427866, 10149, 12166, 205, 225, "Print",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
Cell[440035, 10356, 11545, 195, 226, "Print",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
Cell[451583, 10553, 10874, 184, 233, "Print",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}]
}, Open  ]],
Cell[462472, 10740, 974, 26, 55, "Output",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}]
}, Open  ]],
Cell[463461, 10769, 941, 18, 101, "Text",
 Evaluatable->False,
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks", "FindPeaks--algorithm"}],
Cell[464405, 10789, 255, 6, 29, "Text",
 Evaluatable->False,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[464663, 10797, 767, 22, 72, "Input",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[CellGroupData[{
Cell[465455, 10823, 199, 4, 31, "Input",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[465657, 10829, 4778, 84, 245, "Output",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],
Cell[470450, 10916, 306, 7, 47, "Text",
 Evaluatable->False,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[CellGroupData[{
Cell[470781, 10927, 272, 6, 31, "Input",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[CellGroupData[{
Cell[471078, 10937, 4795, 83, 251, "Print",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[475876, 11022, 4821, 84, 241, "Print",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[480700, 11108, 4826, 84, 236, "Print",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[485529, 11194, 4397, 77, 240, "Print",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[489929, 11273, 3974, 70, 248, "Print",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],
Cell[493918, 11346, 2069, 59, 100, "Output",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],
Cell[496002, 11408, 314, 9, 29, "Text",
 Evaluatable->False,
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[CellGroupData[{
Cell[496341, 11421, 293, 6, 31, "Input",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[496637, 11429, 25080, 420, 238, "Print",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[521720, 11851, 1176, 31, 69, "Output",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[522933, 11887, 118, 3, 36, "Subsection",
 Evaluatable->False,
 CellTags->"FindPeaks"],
Cell[CellGroupData[{
Cell[523076, 11894, 193, 5, 31, "Input",
 CellTags->"FindPeaks"],
Cell[523272, 11901, 778, 12, 177, "Print",
 CellTags->{"FindPeaks", "Info3514542312-2851169"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[524087, 11918, 153, 4, 31, "Input",
 CellTags->"FindPeaks"],
Cell[524243, 11924, 799, 24, 71, "Output",
 CellTags->"FindPeaks"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525079, 11953, 259, 6, 31, "Input",
 CellTags->{
  "FindPeaks", "FindPeaks--FindBkgd option", 
   "FindBkgd option to FindPeaks"}],
Cell[525341, 11961, 552, 9, 109, "Print",
 CellTags->{
  "FindBkgd option to FindPeaks", "FindPeaks", "FindPeaks--FindBkgd option", 
   "Info3514542319-2851169"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[525930, 11975, 275, 7, 31, "Input",
 CellTags->{
  "FindPeaks", "FindPeaks--MaximumPeaks option", 
   "MaximumPeaks option to FindPeaks"}],
Cell[526208, 11984, 370, 7, 58, "Print",
 CellTags->{
  "FindPeaks", "FindPeaks--MaximumPeaks option", "Info3514542323-2851169", 
   "MaximumPeaks option to FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[526615, 11996, 279, 7, 31, "Input",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", 
   "ShowProgress--option to FindPeaks"}],
Cell[526897, 12005, 448, 8, 75, "Print",
 CellTags->{
  "FindPeaks", "FindPeaks--ShowProgress option", "Info3514542327-2851169", 
   "ShowProgress--option to FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[527382, 12018, 230, 5, 31, "Input",
 CellTags->{"FindPeaks", "Amplitude returned by FindPeaks"}],
Cell[527615, 12025, 265, 5, 40, "Print",
 CellTags->{
  "Amplitude returned by FindPeaks", "FindPeaks", "Info3514542330-2851169"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[527917, 12035, 220, 5, 31, "Input",
 CellTags->{"FindPeaks", "Bkgd returned by FindPeaks"}],
Cell[528140, 12042, 407, 7, 75, "Print",
 CellTags->{
  "Bkgd returned by FindPeaks", "FindPeaks", "Info3514542333-2851169"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[528584, 12054, 234, 5, 31, "Input",
 CellTags->{"FindPeaks", "CenterValue returned by FindPeaks"}],
Cell[528821, 12061, 265, 5, 40, "Print",
 CellTags->{
  "CenterValue returned by FindPeaks", "FindPeaks", 
   "Info3514542337-2851169"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[529123, 12071, 220, 5, 31, "Input",
 CellTags->{"FindPeaks", "FWHM returned by FindPeaks"}],
Cell[529346, 12078, 276, 5, 58, "Print",
 CellTags->{
  "FindPeaks", "FWHM returned by FindPeaks", "Info3514542341-2851169"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[529659, 12088, 250, 5, 31, "Input",
 CellTags->{"FindPeaks", "IndependentVariable returned by FindPeaks"}],
Cell[529912, 12095, 306, 6, 58, "Print",
 CellTags->{
  "FindPeaks", "IndependentVariable returned by FindPeaks", 
   "Info3514542344-2851169"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[530255, 12106, 214, 5, 31, "Input",
 CellTags->{"FindPeaks", "Model for FindPeaks"}],
Cell[530472, 12113, 231, 4, 40, "Print",
 CellTags->{"FindPeaks", "Info3514542346-2851169", "Model for FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[530740, 12122, 235, 5, 31, "Input",
 CellTags->{"FindPeaks", "Parameters returned by FindPeaks"}],
Cell[530978, 12129, 313, 6, 58, "Print",
 CellTags->{
  "FindPeaks", "Info3514542351-2851169", "Parameters returned by FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[531328, 12140, 228, 5, 31, "Input",
 CellTags->{"FindPeaks", "PeakArea returned by FindPeaks"}],
Cell[531559, 12147, 262, 5, 40, "Print",
 CellTags->{
  "FindPeaks", "Info3514542354-2851169", "PeakArea returned by FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[531858, 12157, 220, 4, 31, "Input",
 CellTags->{"FindPeaks", "PeaksFound return by FindPeaks"}],
Cell[532081, 12163, 254, 5, 40, "Print",
 CellTags->{
  "FindPeaks", "Info3514542356-2851169", "PeaksFound return by FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[532372, 12173, 230, 5, 31, "Input",
 CellTags->{"FindPeaks", "PeakWidth returned by FindPeaks"}],
Cell[532605, 12180, 519, 8, 109, "Print",
 CellTags->{
  "FindPeaks", "Info3514542361-2851169", "PeakWidth returned by FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[533161, 12193, 225, 5, 31, "Input",
 CellTags->{"FindPeaks", "Sigma returned by FindPeaks"}],
Cell[533389, 12200, 273, 5, 58, "Print",
 CellTags->{
  "FindPeaks", "Info3514542364-2851169", "Sigma returned by FindPeaks"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[533723, 12212, 70, 1, 71, "Section",
 CellTags->"FitPeaks"],
Cell[533796, 12215, 353, 14, 47, "Text",
 CellTags->"FitPeaks"],
Cell[CellGroupData[{
Cell[534174, 12233, 59, 1, 36, "Subsection",
 CellTags->"FitPeaks"],
Cell[534236, 12236, 355, 11, 47, "Text",
 CellTags->"FitPeaks"],
Cell[534594, 12249, 298, 8, 48, "Text",
 CellTags->"FitPeaks"],
Cell[534895, 12259, 69, 1, 31, "Input"],
Cell[534967, 12262, 767, 22, 72, "Input",
 CellTags->{"FindPeaks", "FindFit--initial parameter values"}],
Cell[CellGroupData[{
Cell[535759, 12288, 131, 3, 31, "Input",
 CellTags->"FitPeaks"],
Cell[535893, 12293, 4713, 84, 245, "Output",
 CellTags->"FitPeaks"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540643, 12382, 89, 2, 31, "Input",
 CellTags->"FitPeaks"],
Cell[540735, 12386, 37988, 634, 238, 24911, 417, "CachedBoxData", "BoxData", \
"Print",
 CellTags->"FitPeaks"],
Cell[578726, 13022, 1114, 31, 69, "Output",
 CellTags->"FitPeaks"]
}, Open  ]],
Cell[579855, 13056, 541, 18, 47, "Text",
 CellTags->{
  "FitPeaks", "FitPeaks--PeakShape option", "PeakShape option to FindPeaks"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[580433, 13079, 65, 1, 36, "Subsection",
 CellTags->"FitExponent"],
Cell[580501, 13082, 978, 28, 85, "Text",
 CellTags->"FitExponent"],
Cell[581482, 13112, 246, 9, 30, "Text",
 CellTags->"FitExponent"],
Cell[581731, 13123, 1167, 36, 123, "Input",
 CellTags->"Transforming data"],
Cell[582901, 13161, 789, 26, 31, "Input",
 CellTags->"Transforming data"],
Cell[583693, 13189, 69, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[583787, 13194, 136, 3, 31, "Input",
 CellTags->"FitExponent"],
Cell[583926, 13199, 1973, 41, 234, "Output",
 CellTags->"FitExponent"]
}, Open  ]],
Cell[585914, 13243, 76, 1, 29, "Text",
 CellTags->"FitExponent"],
Cell[CellGroupData[{
Cell[586015, 13248, 95, 2, 31, "Input",
 CellTags->"FitExponent"],
Cell[586113, 13252, 21631, 366, 227, 11414, 196, "CachedBoxData", "BoxData", \
"Print",
 CellTags->"FitExponent"],
Cell[607747, 13620, 523, 14, 33, "Output",
 CellTags->"FitExponent"]
}, Open  ]],
Cell[608285, 13637, 223, 8, 29, "Text",
 CellTags->"FitExponent"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[608557, 13651, 79, 2, 71, "Section",
 Evaluatable->False],
Cell[608639, 13655, 341, 9, 47, "Text",
 Evaluatable->False],
Cell[608983, 13666, 203, 5, 29, "Text",
 Evaluatable->False],
Cell[609189, 13673, 181, 5, 29, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[609395, 13682, 152, 6, 36, "Subsection",
 Evaluatable->False],
Cell[609550, 13690, 345, 8, 47, "Text",
 Evaluatable->False],
Cell[609898, 13700, 336, 8, 47, "Text",
 Evaluatable->False],
Cell[610237, 13710, 281, 8, 47, "Text",
 Evaluatable->False],
Cell[610521, 13720, 477, 12, 65, "Text",
 Evaluatable->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[611035, 13737, 140, 4, 36, "Subsection",
 Evaluatable->False],
Cell[611178, 13743, 332, 9, 47, "Text",
 Evaluatable->False],
Cell[611513, 13754, 331, 8, 47, "Text",
 Evaluatable->False],
Cell[611847, 13764, 301, 8, 47, "Text",
 Evaluatable->False]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
