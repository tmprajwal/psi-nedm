(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    467449,      10865]
NotebookOptionsPosition[    348209,       7821]
NotebookOutlinePosition[    432258,       9891]
CellTagsIndexPosition[    430082,       9848]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Chapter 7
Robust Fitting\
\>", "Title",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
In this chapter we discuss ways to circumvent a problem that was discussed in \
Chapter 4: least-squares techniques are not resistant to a wild data point. \
Such wild data points are often called \[OpenCurlyDoubleQuote]outliers.\
\[CloseCurlyDoubleQuote] The \[OpenCurlyDoubleQuote]robust\
\[CloseCurlyDoubleQuote] fitters discussed here avoid that weakness of \
least-squares techniques. One price that is paid, however, is that explicit \
errors in the data are ignored, and no truly meaningful estimates of errors \
in the fitted parameters are possible.  Also, these techniques are slower \
than conventional methods.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["\<\
There is also a serious danger in these techniques. They assume that the \
model, either a line or a curve, is correct for the data and any data points \
that are not consistent with the model are suppressed. Very few scientific \
advances would occur if researchers always suppressed data that does not \
match preconceived expectations. The topic of suppressing or rejecting \
measurements is also discussed in Section 3.2.4.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The discussion below assumes some familiarity with the concepts and syntax \
discussed in Chapter 4. The ",
 StyleBox["LinearFit", "MR"],
 " function introduced in that chapter should usually be tried before using \
the techniques discussed here."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["7.1 Introduction", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["7.1.1 Using the Median", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell["\<\
As has been mentioned many times, the mean or average is not resistant to a \
wild data point, which will badly distort the result of the calculation. It \
is in exactly this sense that least-squares techniques in general are not \
resistant.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[TextData[{
 "We have also mentioned numerous times that the median is resistant to a \
wild datum \[LongDash] that is, it is \[OpenCurlyDoubleQuote]robust\
\[CloseCurlyDoubleQuote] \[LongDash] and that fact is used in the ",
 StyleBox["RobustLineFit", "MR"],
 " function introduced in this subsection. The central idea is that the \
routine divides the data into three groups based on the value of the \
independent variable. Then the medians of the independent and dependent \
variables are calculated for each group, and a straight-line fit is made to \
these medians."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell["We first load and display some data on radioactive dating.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "CThDating", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[2]:="],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"CThDatingData\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> \
Left, ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.45200148584375*^9, 3.452003893921875*^9, 
  3.452004144484375*^9, 3.452173029640625*^9, 3.45226494609375*^9, 
  3.45226514409375*^9, 3.51455221098575*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"During evaluation of In[2]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CThDatingData"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[3]:="],

Cell[BoxData[
 StyleBox["\<\"CThDatingData compares the dating of samples of coral using \
two\\n\tdifferent techniques: carbon-14 and thorium.  It can be viewed\\n\tas \
a calibration of carbon-14 dating.  The data is from Edouard Bard,\\n\tBruno \
Hamelin, Richard G. Fairbanks, and Alan Zindler, Nature 345,\\n\t(May, 1990), \
pg 405. The format of the data is {C14 age,\\n\t{thorium age minus C14 age, \
error in thorium age minus C14 age}}, where\\n\tall numbers are in years \
before the present. The errors are one standard\\n\tdeviation, not the two \
standard deviation errors given in the original\\n\tsource.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5145522117045*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", 
   "Info3514537811-1614255", "RobustLineFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"CThDatingData", ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}], ",", " ", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<C14 age\>\"", ",", "\"\<Th minus C14 age\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.4520014945625*^9, {3.514551698782625*^9, 3.51455170529825*^9}},
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[4]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUhAkQOmUfhP7QAqFZDkDoB1D5tQchtEMr
hI45BKEzZkHoXYchtMd0CK0C5XPMhtByRyD0gnkQ2usohFZYBKFVj0PoF3Mg
NA+U7zAflf8Hqj7rBNR9CyD0tjMQesVqCC1yDkK7QPgO6y9A+BvmQmh/KL9n
HYQ+dhFCK62F0DW3ILTOKgcADig18A==
     
     "]], {{LineBox[{{6400., 1170.}, {6400., 950.}}], 
      LineBox[{Offset[{1.5, 0}, {6400., 1170.}], 
        Offset[{-1.5, 0}, {6400., 1170.}]}], 
      LineBox[{Offset[{1.5, 0}, {6400., 950.}], 
        Offset[{-1.5, 0}, {6400., 950.}]}]}, {
      LineBox[{{7780., 780.}, {7780., 560.}}], 
      LineBox[{Offset[{1.5, 0}, {7780., 780.}], 
        Offset[{-1.5, 0}, {7780., 780.}]}], 
      LineBox[{Offset[{1.5, 0}, {7780., 560.}], 
        Offset[{-1.5, 0}, {7780., 560.}]}]}, {
      LineBox[{{8200., 1190.}, {8200., 970.}}], 
      LineBox[{Offset[{1.5, 0}, {8200., 1190.}], 
        Offset[{-1.5, 0}, {8200., 1190.}]}], 
      LineBox[{Offset[{1.5, 0}, {8200., 970.}], 
        Offset[{-1.5, 0}, {8200., 970.}]}]}, {
      LineBox[{{9050., 810.}, {9050., 550.}}], 
      LineBox[{Offset[{1.5, 0}, {9050., 810.}], 
        Offset[{-1.5, 0}, {9050., 810.}]}], 
      LineBox[{Offset[{1.5, 0}, {9050., 550.}], 
        Offset[{-1.5, 0}, {9050., 550.}]}]}, {
      LineBox[{{9400., 1800.}, {9400., 1580.}}], 
      LineBox[{Offset[{1.5, 0}, {9400., 1800.}], 
        Offset[{-1.5, 0}, {9400., 1800.}]}], 
      LineBox[{Offset[{1.5, 0}, {9400., 1580.}], 
        Offset[{-1.5, 0}, {9400., 1580.}]}]}, {
      LineBox[{{10100., 1590.}, {10100., 1390.}}], 
      LineBox[{Offset[{1.5, 0}, {10100., 1590.}], 
        Offset[{-1.5, 0}, {10100., 1590.}]}], 
      LineBox[{Offset[{1.5, 0}, {10100., 1390.}], 
        Offset[{-1.5, 0}, {10100., 1390.}]}]}, {
      LineBox[{{9800., 1840.}, {9800., 1620.}}], 
      LineBox[{Offset[{1.5, 0}, {9800., 1840.}], 
        Offset[{-1.5, 0}, {9800., 1840.}]}], 
      LineBox[{Offset[{1.5, 0}, {9800., 1620.}], 
        Offset[{-1.5, 0}, {9800., 1620.}]}]}, {
      LineBox[{{10300., 2070.}, {10300., 1850.}}], 
      LineBox[{Offset[{1.5, 0}, {10300., 2070.}], 
        Offset[{-1.5, 0}, {10300., 2070.}]}], 
      LineBox[{
       Offset[{1.5, 0}, {10300., 1850.}], 
        Offset[{-1.5, 0}, {10300., 1850.}]}]}, {
      LineBox[{{10900., 2430.}, {10900., 2210.}}], 
      LineBox[{Offset[{1.5, 0}, {10900., 2430.}], 
        Offset[{-1.5, 0}, {10900., 2430.}]}], 
      LineBox[{Offset[{1.5, 0}, {10900., 2210.}], 
        Offset[{-1.5, 0}, {10900., 2210.}]}]}, {
      LineBox[{{11850., 1980.}, {11850., 1720.}}], 
      LineBox[{Offset[{1.5, 0}, {11850., 1980.}], 
        Offset[{-1.5, 0}, {11850., 1980.}]}], 
      LineBox[{Offset[{1.5, 0}, {11850., 1720.}], 
        Offset[{-1.5, 0}, {11850., 1720.}]}]}, {
      LineBox[{{11800., 2120.}, {11800., 1880.}}], 
      LineBox[{Offset[{1.5, 0}, {11800., 2120.}], 
        Offset[{-1.5, 0}, {11800., 2120.}]}], 
      LineBox[{Offset[{1.5, 0}, {11800., 1880.}], 
        Offset[{-1.5, 0}, {11800., 1880.}]}]}, {
      LineBox[{{11800., 2640.}, {11800., 2220.}}], 
      LineBox[{Offset[{1.5, 0}, {11800., 2640.}], 
        Offset[{-1.5, 0}, {11800., 2640.}]}], 
      LineBox[{Offset[{1.5, 0}, {11800., 2220.}], 
        Offset[{-1.5, 0}, {11800., 2220.}]}]}, {
      LineBox[{{12500., 2290.}, {12500., 2030.}}], 
      LineBox[{Offset[{1.5, 0}, {12500., 2290.}], 
        Offset[{-1.5, 0}, {12500., 2290.}]}], 
      LineBox[{Offset[{1.5, 0}, {12500., 2030.}], 
        Offset[{-1.5, 0}, {12500., 2030.}]}]}, {
      LineBox[{{14700., 3750.}, {14700., 3330.}}], 
      LineBox[{Offset[{1.5, 0}, {14700., 3750.}], 
        Offset[{-1.5, 0}, {14700., 3750.}]}], 
      LineBox[{Offset[{1.5, 0}, {14700., 3330.}], 
        Offset[{-1.5, 0}, {14700., 3330.}]}]}, {
      LineBox[{{15400., 3730.}, {15400., 3250.}}], 
      LineBox[{Offset[{1.5, 0}, {15400., 3730.}], 
        Offset[{-1.5, 0}, {15400., 3730.}]}], 
      LineBox[{Offset[{1.5, 0}, {15400., 3250.}], 
        Offset[{-1.5, 0}, {15400., 3250.}]}]}, {
      LineBox[{{17085., 2160.}, {17085., 1640.}}], 
      LineBox[{Offset[{1.5, 0}, {17085., 2160.}], 
        Offset[{-1.5, 0}, {17085., 2160.}]}], 
      LineBox[{Offset[{1.5, 0}, {17085., 1640.}], 
        Offset[{-1.5, 0}, {17085., 1640.}]}]}, {
      LineBox[{{16700., 4220.}, {16700., 3600.}}], 
      LineBox[{Offset[{1.5, 0}, {16700., 4220.}], 
        Offset[{-1.5, 0}, {16700., 4220.}]}], 
      LineBox[{Offset[{1.5, 0}, {16700., 3600.}], 
        Offset[{-1.5, 0}, {16700., 3600.}]}]}, {
      LineBox[{{18200., 3939.}, {18200., 3519.}}], 
      LineBox[{Offset[{1.5, 0}, {18200., 3939.}], 
        Offset[{-1.5, 0}, {18200., 3939.}]}], 
      LineBox[{Offset[{1.5, 0}, {18200., 3519.}], 
        Offset[{-1.5, 0}, {18200., 3519.}]}]}, {
      LineBox[{{27120., 4120.}, {27120., 2580.}}], 
      LineBox[{Offset[{1.5, 0}, {27120., 4120.}], 
        Offset[{-1.5, 0}, {27120., 4120.}]}], 
      LineBox[{Offset[{1.5, 0}, {27120., 2580.}], 
        Offset[{-1.5, 0}, {27120., 2580.}]}]}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{6000., 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"C14 age\"", TraditionalForm], 
    FormBox["\"Th minus C14 age\"", TraditionalForm]},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.452001495078125*^9, 3.452003899734375*^9, 
  3.45200414503125*^9, 3.4521730305625*^9, 3.452264951890625*^9, 
  3.452265144515625*^9, 3.51455170586075*^9, 3.514552212032625*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"Out[4]="]
}, Open  ]],

Cell["Further information on this data appears in Chapter 8.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[TextData[{
 "If the thorium and carbon-14 dating agreed, the dependent variable should \
be zero within errors, which is clearly not the case. We fit the data to a \
straight line using the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["LinearFit", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{"CThDatingData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[5]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwB0QIu/SFib1JlAgAAACwAAAACAAAAmV22GwAAuUDk9FA2ALCHQE6BFO5a
BrlARqFlyHS8h0ACpXLAtQy5QKhNelrpyIdAauwuZWsZuUBqpqN+0uGHQDp7
p67WMrlA7Ff2xqQTiEDamJhBrWW5QPK6m1dJd4hAHNR6Z1rLuUAEgeZ4kj6J
QKBKP7O0lrpAJA18uyTNikCYiUMEn0+8QJpfhGRWLY5AyqznV1HrvUDGZvKi
IaqQQMjYdEDwfr9AmzC6Aa41kkBcqz5xYprAQIyXcPLA4pNAcdySw7BmwUA6
DFN/MXOVQH62pPIZRMJAAh4knigll0DyFCtseR3DQKbCDKs1z5hAg2UB5zzo
w0AKdSFUoFyaQAxflT4bxMRAiMQkj5ELnECySnmXXZHFQMQhVGbgnZ1AvrrR
OpZaxkDaEZsrRSifQMPT57rpNMdAh09oQRhqoEDl3k08oQDIQP8cGbu8MaFA
AJNxmnPdyEAFOcF9JAqiQIHLCUM8tslAeR51N5feokAf9vHsaIDKQMwKP7+4
pKNAtcmXc7Bby0CsRQCQnXukQGiPjftbKMxAa4fXLjFEpUAU/kBgIgbNQLcX
phaIHaZAJvFoD9/fzUBycYD16fKmQFXW4L//qs5AC9Jwovq5p0B9ZBZNO4fP
QDOBWJjOkahAYfLNbW0q0EA5N1ZcUVupQLb0Slo4j9BArLZfF98gqkCHyya1
kPzQQKyEYBsw96pAZ5uqEJti0UCMWXftL7+rQMM/jdoy0dFA+HyFCPOXrEBS
JqrJxT3SQNRpnxrBbK1A8AVvuQqj0kCOXc/6PTOuQAq6khfdENNA1p/2I34K
r0AyZ152YXfTQPzoMxtt069AjlZk+uDb00DJfb6EM0ywQGYayeztSNRAWq5e
IBK3sEBM19XfrK7UQFriCSPIGrFAr2hBQfkc1UChvTDK34axQJIkSZIkg9VA
AAAAAADrsUD7ZVXy
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVhQss1AEAh/8e2TJKc2PovWahhLXR5fGT2nTrsQytk9fl7swjufKIujR2
HnnL4TDk/T50t/0tj9zpcE44XJHHiojTYs0qTfF9+/adYER4MDUJgrDabe9F
vmIzgiARFhJQxtLh4cZzyne6Don5NKpfjCEPmtWcXpEeCY9GypGU4zyEqK2Z
oSYk7NUDgnoqD9T42pYpOxI74bZ89X0epgsLXZuZJDIjNTM4Kh4OT8Sx6XIS
otiqOG5dMsppLh2v+Z3Y4a148WmpKEx10y67+QYaUae+m02mY6hp+fattS6M
HnDxkh3KxsCHR/jB7QFVasjsEObgbqNzJEPQCz9GH3OIk4fIT7kSIestRmaf
/VIZ5YMrrto0udyHLVfjJwZzfGxSrMIeH5HAIdm7bbukEIlMjWXHFQnk9VWx
s04C6PnnO5tJpaCIhm1WNUrQTntc4JvTj6ZSrfj12lJ0d45R+fR38GV/jq68
UgaJcrnz23kZFtMVtpcSy7E0d92xghhAr6ftRrNnBYi8SMHD2QH8NtC0aLV/
hefy/W6O4kH0dNWQqUaVOLa1oQ5OGMKZjx55/l8rIRoseCj0kePnSujSkKwK
wVkZ2z6nhxHETk+wFVSDsoOAkzoKnJs2eXmWWwPzjeCD8/MKpDjFE1p+tfCa
Wuj51zCClIOLIqV1HZ4GGV2/mPweS5PklwuH6hG4qQgPtxzFim4BvXixHuKf
NLpD1ihibdwtpzoakCw3F2X/HcU9GotT87IR7OIGg2LGGLbGX2hxWE2QuGRM
242NYfHmUX3l1WZ4mDcM9juNI7ArKULfogU/9kWQupXjSCraNHX73QLdzlzj
WQMltEMUzgdmWmHH9osOjFEif0LlteotRKZ30J+FGSUeqNsdqN1CsEwH1evu
E4jhSlWe1m24ppqcb2qZwLjsjtk6vw1RabsSkyD2WGvDf7EAVRk=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVjnss1AEAx395tcxIlKkk/jCjYVdt0sX3ksot5RHmSByXWzGRZVJkzTjl
rTjvxx06r1Me/S6hjqIjj3Nql8fNCuWthzxSfLbPPv9+jJihriwlgiAsttwu
90rTAYIg4RNL6+V6cXAxTneeoUaipjmNEs7iQIkf3t6oQWJzYTybHsbB9VkL
1g19EgV+Mcz1RA5soitqhykk5LSXKz4vOJDn5NBqWCQ8VI4bH9ZLwsGhO0EM
CQk3jmlk+VASiul2zxueiEDP1DJ6fukRcjj2KkWXWnCU/kWeFp+K99VTni4z
r9DSyl+MPp2Ork8RWIxpw0a+X2GlKAM+VbZhzNx2iHoOxTa7ZiFsJEMsvPYa
5TYmag/7HiOmibesf+YNNNes2hGcjWVd8+AoAzF0N9/wQndw8YC1Y4o6LYYj
Ci0DonOhcfWx7YGODmxI785Z783HM3pU9pX0TozweS7SzAK0igZsnjDewrPF
TTGpXgSxdEr07dg7mO1Rdpl3LsbXMSdqCdEF269EvESzBERmWO6t0S5o+98f
5I6UIE6yy57a1I2jsfaNvPJSGP5emmXff49gqvmMdkAZGruzbwm9JQgszbK5
ackDOzV53du0B+EVxqNW87ytb/gZq/XCzp3CnWjhw2SJrTU+3gsffvz3/oRy
uA8r2v4JPiAl62+KkUMF7gXuczqZ0Ie4IysXAvZUwn+5NyTErB9JAXt9dw5W
ouknnWGd2g8FNVJlOvkpEiQmjWkb/fjVyuggvQQIyhPszmMOwFjB/DinVwWx
XbKcMjAADcGsss5kFVxNBN2dpwZxbp+oM0JYjUXVUFK9bBA5RtVy65AaqIsy
9EZ3S1EpM9w1f6IWlCDf2/6RUnwwfZGkulqLFI/ANcVnKRwOZZV4NdTh2v7u
2bnzQzg19ofdZyfEhY+y8eraIUxskGZlhULUsWm01YMyTC6cjApVrcfhH5fL
Vh7IEElxXgpm1aOjrdRsaVoGi7NqDYniejgJDAocdYZBbDNTj/9Z3GyF
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUhAkQOmUfhP7QAqFZDkDoB1D5tQchtEMr
hI45BKEzZkHoXYchtMd0CK0C5XPMhtByRyD0gnkQ2usohFZYBKFVj0PoF3Mg
NA+U7zAflf8Hqj7rBNR9CyD0tjMQesVqCC1yDkK7QPgO6y9A+BvmQmh/KL9n
HYQ+dhFCK62F0DW3ILTOKgcADig18A==
      
      "]], {{LineBox[{{6400., 1170.}, {6400., 950.}}], 
       LineBox[{
        Offset[{1.5, 0}, {6400., 1170.}], Offset[{-1.5, 0}, {6400., 1170.}]}],
        LineBox[{
        Offset[{1.5, 0}, {6400., 950.}], 
         Offset[{-1.5, 0}, {6400., 950.}]}]}, {
       LineBox[{{7780., 780.}, {7780., 560.}}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 780.}], Offset[{-1.5, 0}, {7780., 780.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 560.}], 
         Offset[{-1.5, 0}, {7780., 560.}]}]}, {
       LineBox[{{8200., 1190.}, {8200., 970.}}], 
       LineBox[{
        Offset[{1.5, 0}, {8200., 1190.}], Offset[{-1.5, 0}, {8200., 1190.}]}],
        LineBox[{
        Offset[{1.5, 0}, {8200., 970.}], 
         Offset[{-1.5, 0}, {8200., 970.}]}]}, {
       LineBox[{{9050., 810.}, {9050., 550.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 810.}], Offset[{-1.5, 0}, {9050., 810.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 550.}], 
         Offset[{-1.5, 0}, {9050., 550.}]}]}, {
       LineBox[{{9400., 1800.}, {9400., 1580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9400., 1800.}], Offset[{-1.5, 0}, {9400., 1800.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9400., 1580.}], 
         Offset[{-1.5, 0}, {9400., 1580.}]}]}, {
       LineBox[{{10100., 1590.}, {10100., 1390.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1590.}], 
         Offset[{-1.5, 0}, {10100., 1590.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1390.}], 
         Offset[{-1.5, 0}, {10100., 1390.}]}]}, {
       LineBox[{{9800., 1840.}, {9800., 1620.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9800., 1840.}], Offset[{-1.5, 0}, {9800., 1840.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9800., 1620.}], 
         Offset[{-1.5, 0}, {9800., 1620.}]}]}, {
       LineBox[{{10300., 2070.}, {10300., 1850.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 2070.}], 
         Offset[{-1.5, 0}, {10300., 2070.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 1850.}], 
         Offset[{-1.5, 0}, {10300., 1850.}]}]}, {
       LineBox[{{10900., 2430.}, {10900., 2210.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2430.}], 
         Offset[{-1.5, 0}, {10900., 2430.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2210.}], 
         Offset[{-1.5, 0}, {10900., 2210.}]}]}, {
       LineBox[{{11850., 1980.}, {11850., 1720.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1980.}], 
         Offset[{-1.5, 0}, {11850., 1980.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1720.}], 
         Offset[{-1.5, 0}, {11850., 1720.}]}]}, {
       LineBox[{{11800., 2120.}, {11800., 1880.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2120.}], 
         Offset[{-1.5, 0}, {11800., 2120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 1880.}], 
         Offset[{-1.5, 0}, {11800., 1880.}]}]}, {
       LineBox[{{11800., 2640.}, {11800., 2220.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2640.}], 
         Offset[{-1.5, 0}, {11800., 2640.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2220.}], 
         Offset[{-1.5, 0}, {11800., 2220.}]}]}, {
       LineBox[{{12500., 2290.}, {12500., 2030.}}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2290.}], 
         Offset[{-1.5, 0}, {12500., 2290.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2030.}], 
         Offset[{-1.5, 0}, {12500., 2030.}]}]}, {
       LineBox[{{14700., 3750.}, {14700., 3330.}}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3750.}], 
         Offset[{-1.5, 0}, {14700., 3750.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3330.}], 
         Offset[{-1.5, 0}, {14700., 3330.}]}]}, {
       LineBox[{{15400., 3730.}, {15400., 3250.}}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3730.}], 
         Offset[{-1.5, 0}, {15400., 3730.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3250.}], 
         Offset[{-1.5, 0}, {15400., 3250.}]}]}, {
       LineBox[{{17085., 2160.}, {17085., 1640.}}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 2160.}], 
         Offset[{-1.5, 0}, {17085., 2160.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 1640.}], 
         Offset[{-1.5, 0}, {17085., 1640.}]}]}, {
       LineBox[{{16700., 4220.}, {16700., 3600.}}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 4220.}], 
         Offset[{-1.5, 0}, {16700., 4220.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 3600.}], 
         Offset[{-1.5, 0}, {16700., 3600.}]}]}, {
       LineBox[{{18200., 3939.}, {18200., 3519.}}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3939.}], 
         Offset[{-1.5, 0}, {18200., 3939.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3519.}], 
         Offset[{-1.5, 0}, {18200., 3519.}]}]}, {
       LineBox[{{27120., 4120.}, {27120., 2580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 4120.}], 
         Offset[{-1.5, 0}, {27120., 4120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 2580.}], 
         Offset[{-1.5, 0}, {27120., 2580.}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{4328.000000000001, 183.},
  DisplayFunction->Identity,
  PlotRange->{{4328.000000000001, 29192.000000000004`}, {183., 4587.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUgSIInbIPQj+oOgCmWQ5A+AxxEP7agxD+
hTYIP+YQVD4TQqschtANiRB6F5TvkApRL3cEys+H0F5HofbXQGie41DzQg6g
8B+UQmhVmHweRD7rBNS+MAh/2xkIv6AdQoucg9ATGiC0/wUIvaEZTDush/IV
pkP0H7sIsx9C19yC0AmLDwAAAAw1gw==
          "]], {{
           LineBox[{{6400., 410.}, {6400., 190.}}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 410.}], 
             Offset[{-1.5, 0}, {6400., 410.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 190.}], 
             Offset[{-1.5, 0}, {6400., 190.}]}]}, {
           LineBox[{{7780., -320.}, {7780., -540.}}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -320.}], 
             Offset[{-1.5, 0}, {7780., -320.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -540.}], 
             Offset[{-1.5, 0}, {7780., -540.}]}]}, {
           LineBox[{{8200., -10.}, {8200., -230.}}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., -10.}], 
             Offset[{-1.5, 0}, {8200., -10.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., -230.}], 
             Offset[{-1.5, 0}, {8200., -230.}]}]}, {
           LineBox[{{9050., -600.}, {9050., -860.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -600.}], 
             Offset[{-1.5, 0}, {9050., -600.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -860.}], 
             Offset[{-1.5, 0}, {9050., -860.}]}]}, {
           LineBox[{{9400., 310.}, {9400., 90.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 310.}], 
             Offset[{-1.5, 0}, {9400., 310.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 90.}], 
             Offset[{-1.5, 0}, {9400., 90.}]}]}, {
           LineBox[{{9800., 250.}, {9800., 30.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 250.}], 
             Offset[{-1.5, 0}, {9800., 250.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 30.}], 
             Offset[{-1.5, 0}, {9800., 30.}]}]}, {
           LineBox[{{10100., -70.}, {10100., -270.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -70.}], 
             Offset[{-1.5, 0}, {10100., -70.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -270.}], 
             Offset[{-1.5, 0}, {10100., -270.}]}]}, {
           LineBox[{{10300., 360.}, {10300., 140.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 360.}], 
             Offset[{-1.5, 0}, {10300., 360.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 140.}], 
             Offset[{-1.5, 0}, {10300., 140.}]}]}, {
           LineBox[{{10900., 570.}, {10900., 350.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 570.}], 
             Offset[{-1.5, 0}, {10900., 570.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 350.}], 
             Offset[{-1.5, 0}, {10900., 350.}]}]}, {
           LineBox[{{11800., 40.}, {11800., -200.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 40.}], 
             Offset[{-1.5, 0}, {11800., 40.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -200.}], 
             Offset[{-1.5, 0}, {11800., -200.}]}]}, {
           LineBox[{{11800., 560.}, {11800., 140.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 560.}], 
             Offset[{-1.5, 0}, {11800., 560.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 140.}], 
             Offset[{-1.5, 0}, {11800., 140.}]}]}, {
           LineBox[{{11850., -110.}, {11850., -370.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -110.}], 
             Offset[{-1.5, 0}, {11850., -110.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -370.}], 
             Offset[{-1.5, 0}, {11850., -370.}]}]}, {
           LineBox[{{12500., 40.}, {12500., -220.}}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., 40.}], 
             Offset[{-1.5, 0}, {12500., 40.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -220.}], 
             Offset[{-1.5, 0}, {12500., -220.}]}]}, {
           LineBox[{{14700., 960.}, {14700., 540.}}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 960.}], 
             Offset[{-1.5, 0}, {14700., 960.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 540.}], 
             Offset[{-1.5, 0}, {14700., 540.}]}]}, {
           LineBox[{{15400., 770.}, {15400., 290.}}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 770.}], 
             Offset[{-1.5, 0}, {15400., 770.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 290.}], 
             Offset[{-1.5, 0}, {15400., 290.}]}]}, {
           LineBox[{{16700., 940.}, {16700., 320.}}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., 940.}], 
             Offset[{-1.5, 0}, {16700., 940.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., 320.}], 
             Offset[{-1.5, 0}, {16700., 320.}]}]}, {
           LineBox[{{17085., -1220.}, {17085., -1740.}}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -1220.}], 
             Offset[{-1.5, 0}, {17085., -1220.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -1740.}], 
             Offset[{-1.5, 0}, {17085., -1740.}]}]}, {
           LineBox[{{18200., 290.}, {18200., -130.}}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., 290.}], 
             Offset[{-1.5, 0}, {18200., 290.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., -130.}], 
             Offset[{-1.5, 0}, {18200., -130.}]}]}, {
           LineBox[{{27120., -1710.}, {27120., -3250.}}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -1710.}], 
             Offset[{-1.5, 0}, {27120., -1710.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -3250.}], 
             Offset[{-1.5, 0}, {27120., -3250.}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {6000., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452001506046875*^9, 3.452003908734375*^9, 
  3.4520041451875*^9, 3.45217303071875*^9, 3.452264957875*^9, 
  3.452265144640625*^9, 3.514552212282625*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"During evaluation of In[5]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "810.`"}], ",", "130.`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.245`", ",", "0.012`"}], "}"}]}], ",", 
   RowBox[{"ChiSquared", "\[Rule]", "156.95290558444174`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "17"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452001506078125*^9, 3.45200390878125*^9, 
  3.45200414521875*^9, 3.452173030765625*^9, 3.452264957890625*^9, 
  3.4522651446875*^9, 3.51455221229825*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"Out[5]="]
}, Open  ]],

Cell["\<\
In this fit the two \[OpenCurlyDoubleQuote]outliers\[CloseCurlyDoubleQuote] \
in the data are having a marked effect on the results of the fit, as can be \
seen in the plots.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[TextData[{
 "We do a robust straight-line fit to the data using ",
 StyleBox["RobustLineFit", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustLineFit", "[", 
  RowBox[{"CThDatingData", ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[6]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAmV22GwAAuUBIsh6hJ9qBQE6BFO5a
BrlAnIdB6oXogUACpXLAtQy5QO5cZDPk9oFAauwuZWsZuUCSB6rFoBOCQDp7
p67WMrlA2lw16hlNgkDamJhBrWW5QGoHTDMMwIJAHNR6Z1rLuUCQXHnF8KWD
QKBKP7O0lrpA3AbU6blxhUCYiUMEn0+8QGz8G6OlVolAyqznV1HrvUB4j4vp
gPmMQMjYdEDwfr9AmODN2QxFkEBcqz5xYprAQPJJH/cFNJJAcdySw7BmwUAM
ggTb9gGUQH62pPIZRMJAogozd5T2lUDyFCtseR3DQI7iMdUQ4pdAg2UB5zzo
w0A6icT5hKyZQAxflT4bxMRAYoCg1qWdm0CySnmXXZHFQEpGEHq+bZ1AvrrR
OpZaxkCGW1DftTSfQMPT57rpNMdAoeBs/iyRoEDl3k08oQDIQN56e/B6d6FA
AJNxmnPdyEBbva4+H3GiQIHLCUM8tslAgSfK7TJmo0Af9vHsaIDKQAh5L4DC
SqRAtcmXc7Bby0DMcrluqEKlQGiPjftbKMxA8VONQAoqpkAU/kBgIgbNQFXd
hW7CJKdAJvFoD9/fzUBjjmb96RqoQFXW4L//qs5A0SaRb40AqUB9ZBZNO4fP
QH1n4D2H+alAYfLNbW0q0ECLj3nv/OGqQLb0Slo4j9BAP9/6AeLFq0CHyya1
kPzQQDXXoHAdvaxAZ5uqEJti0UCJtpDC1KOtQMM/jdoy0dFAHT6lcOKdrkBS
JqrJxT3SQFntoX9fk69A8AVvuQqj0kD8QfQ4LDywQAq6khfdENNAauEp4FO4
sEAyZ152YXfTQIh0BHk5LLFAjlZk+uDb00B8G1PC1p2xQLYs7sohINRAAAAA
AADrsUCtI0fs
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUhAkQOmUfhP7QAqFZDkDoB1D5tQchtEMr
hI45BKEzZkHoXYchtMd0CK0C5XPMhtByRyD0gnkQ2usohFZYBKFVj0PoF3Mg
NA+U7zAflf8Hqj7rBNR9CyD0tjMQesVqCC1yDkK7QPgO6y9A+BvmQmh/KL9n
HYQ+dhFCK62F0DW3ILTOKgcADig18A==
      
      "]], {{LineBox[{{6400., 1170.}, {6400., 950.}}], 
       LineBox[{
        Offset[{1.5, 0}, {6400., 1170.}], Offset[{-1.5, 0}, {6400., 1170.}]}],
        LineBox[{
        Offset[{1.5, 0}, {6400., 950.}], 
         Offset[{-1.5, 0}, {6400., 950.}]}]}, {
       LineBox[{{7780., 780.}, {7780., 560.}}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 780.}], Offset[{-1.5, 0}, {7780., 780.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 560.}], 
         Offset[{-1.5, 0}, {7780., 560.}]}]}, {
       LineBox[{{8200., 1190.}, {8200., 970.}}], 
       LineBox[{
        Offset[{1.5, 0}, {8200., 1190.}], Offset[{-1.5, 0}, {8200., 1190.}]}],
        LineBox[{
        Offset[{1.5, 0}, {8200., 970.}], 
         Offset[{-1.5, 0}, {8200., 970.}]}]}, {
       LineBox[{{9050., 810.}, {9050., 550.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 810.}], Offset[{-1.5, 0}, {9050., 810.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 550.}], 
         Offset[{-1.5, 0}, {9050., 550.}]}]}, {
       LineBox[{{9400., 1800.}, {9400., 1580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9400., 1800.}], Offset[{-1.5, 0}, {9400., 1800.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9400., 1580.}], 
         Offset[{-1.5, 0}, {9400., 1580.}]}]}, {
       LineBox[{{10100., 1590.}, {10100., 1390.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1590.}], 
         Offset[{-1.5, 0}, {10100., 1590.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1390.}], 
         Offset[{-1.5, 0}, {10100., 1390.}]}]}, {
       LineBox[{{9800., 1840.}, {9800., 1620.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9800., 1840.}], Offset[{-1.5, 0}, {9800., 1840.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9800., 1620.}], 
         Offset[{-1.5, 0}, {9800., 1620.}]}]}, {
       LineBox[{{10300., 2070.}, {10300., 1850.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 2070.}], 
         Offset[{-1.5, 0}, {10300., 2070.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 1850.}], 
         Offset[{-1.5, 0}, {10300., 1850.}]}]}, {
       LineBox[{{10900., 2430.}, {10900., 2210.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2430.}], 
         Offset[{-1.5, 0}, {10900., 2430.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2210.}], 
         Offset[{-1.5, 0}, {10900., 2210.}]}]}, {
       LineBox[{{11850., 1980.}, {11850., 1720.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1980.}], 
         Offset[{-1.5, 0}, {11850., 1980.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1720.}], 
         Offset[{-1.5, 0}, {11850., 1720.}]}]}, {
       LineBox[{{11800., 2120.}, {11800., 1880.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2120.}], 
         Offset[{-1.5, 0}, {11800., 2120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 1880.}], 
         Offset[{-1.5, 0}, {11800., 1880.}]}]}, {
       LineBox[{{11800., 2640.}, {11800., 2220.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2640.}], 
         Offset[{-1.5, 0}, {11800., 2640.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2220.}], 
         Offset[{-1.5, 0}, {11800., 2220.}]}]}, {
       LineBox[{{12500., 2290.}, {12500., 2030.}}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2290.}], 
         Offset[{-1.5, 0}, {12500., 2290.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2030.}], 
         Offset[{-1.5, 0}, {12500., 2030.}]}]}, {
       LineBox[{{14700., 3750.}, {14700., 3330.}}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3750.}], 
         Offset[{-1.5, 0}, {14700., 3750.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3330.}], 
         Offset[{-1.5, 0}, {14700., 3330.}]}]}, {
       LineBox[{{15400., 3730.}, {15400., 3250.}}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3730.}], 
         Offset[{-1.5, 0}, {15400., 3730.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3250.}], 
         Offset[{-1.5, 0}, {15400., 3250.}]}]}, {
       LineBox[{{17085., 2160.}, {17085., 1640.}}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 2160.}], 
         Offset[{-1.5, 0}, {17085., 2160.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 1640.}], 
         Offset[{-1.5, 0}, {17085., 1640.}]}]}, {
       LineBox[{{16700., 4220.}, {16700., 3600.}}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 4220.}], 
         Offset[{-1.5, 0}, {16700., 4220.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 3600.}], 
         Offset[{-1.5, 0}, {16700., 3600.}]}]}, {
       LineBox[{{18200., 3939.}, {18200., 3519.}}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3939.}], 
         Offset[{-1.5, 0}, {18200., 3939.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3519.}], 
         Offset[{-1.5, 0}, {18200., 3519.}]}]}, {
       LineBox[{{27120., 4120.}, {27120., 2580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 4120.}], 
         Offset[{-1.5, 0}, {27120., 4120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 2580.}], 
         Offset[{-1.5, 0}, {27120., 2580.}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{4328.000000000001, 183.},
  DisplayFunction->Identity,
  PlotRange->{{4328.000000000001, 29192.000000000004`}, {183., 4587.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUgjoInbIPQisUHQDTLAccGJDB2oNQfgtE
PuYQhP+gAEKrHIbKZ0LoXVC+QwJEvdwRmPkQ2usoVD3Ufp7jUH7kART+ghII
rQrlOxRA5LNOQPgNiRD+tjMQfkIzhBY5B6EPlENo/wtQ91aBaYf1UH7GLIj+
Yxeh5qVB+DW3IHyBFQcAL+czow==
          "]], {{
           LineBox[{{6400., 600.}, {6400., 380.}}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 600.}], 
             Offset[{-1.5, 0}, {6400., 600.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 380.}], 
             Offset[{-1.5, 0}, {6400., 380.}]}]}, {
           LineBox[{{7780., -180.}, {7780., -400.}}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -180.}], 
             Offset[{-1.5, 0}, {7780., -180.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -400.}], 
             Offset[{-1.5, 0}, {7780., -400.}]}]}, {
           LineBox[{{8200., 110.}, {8200., -110.}}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., 110.}], 
             Offset[{-1.5, 0}, {8200., 110.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., -110.}], 
             Offset[{-1.5, 0}, {8200., -110.}]}]}, {
           LineBox[{{9050., -510.}, {9050., -770.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -510.}], 
             Offset[{-1.5, 0}, {9050., -510.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -770.}], 
             Offset[{-1.5, 0}, {9050., -770.}]}]}, {
           LineBox[{{9400., 380.}, {9400., 160.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 380.}], 
             Offset[{-1.5, 0}, {9400., 380.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 160.}], 
             Offset[{-1.5, 0}, {9400., 160.}]}]}, {
           LineBox[{{9800., 310.}, {9800., 90.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 310.}], 
             Offset[{-1.5, 0}, {9800., 310.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 90.}], 
             Offset[{-1.5, 0}, {9800., 90.}]}]}, {
           LineBox[{{10100., -30.}, {10100., -230.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -30.}], 
             Offset[{-1.5, 0}, {10100., -30.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -230.}], 
             Offset[{-1.5, 0}, {10100., -230.}]}]}, {
           LineBox[{{10300., 400.}, {10300., 180.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 400.}], 
             Offset[{-1.5, 0}, {10300., 400.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 180.}], 
             Offset[{-1.5, 0}, {10300., 180.}]}]}, {
           LineBox[{{10900., 590.}, {10900., 370.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 590.}], 
             Offset[{-1.5, 0}, {10900., 590.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 370.}], 
             Offset[{-1.5, 0}, {10900., 370.}]}]}, {
           LineBox[{{11800., 20.}, {11800., -220.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 20.}], 
             Offset[{-1.5, 0}, {11800., 20.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -220.}], 
             Offset[{-1.5, 0}, {11800., -220.}]}]}, {
           LineBox[{{11800., 540.}, {11800., 120.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 540.}], 
             Offset[{-1.5, 0}, {11800., 540.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 120.}], 
             Offset[{-1.5, 0}, {11800., 120.}]}]}, {
           LineBox[{{11850., -130.}, {11850., -390.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -130.}], 
             Offset[{-1.5, 0}, {11850., -130.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -390.}], 
             Offset[{-1.5, 0}, {11850., -390.}]}]}, {
           LineBox[{{12500., -10.}, {12500., -270.}}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -10.}], 
             Offset[{-1.5, 0}, {12500., -10.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -270.}], 
             Offset[{-1.5, 0}, {12500., -270.}]}]}, {
           LineBox[{{14700., 830.}, {14700., 410.}}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 830.}], 
             Offset[{-1.5, 0}, {14700., 830.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 410.}], 
             Offset[{-1.5, 0}, {14700., 410.}]}]}, {
           LineBox[{{15400., 620.}, {15400., 140.}}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 620.}], 
             Offset[{-1.5, 0}, {15400., 620.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 140.}], 
             Offset[{-1.5, 0}, {15400., 140.}]}]}, {
           LineBox[{{16700., 740.}, {16700., 120.}}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., 740.}], 
             Offset[{-1.5, 0}, {16700., 740.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., 120.}], 
             Offset[{-1.5, 0}, {16700., 120.}]}]}, {
           LineBox[{{17085., -1430.}, {17085., -1950.}}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -1430.}], 
             Offset[{-1.5, 0}, {17085., -1430.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -1950.}], 
             Offset[{-1.5, 0}, {17085., -1950.}]}]}, {
           LineBox[{{18200., 30.}, {18200., -390.}}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., 30.}], 
             Offset[{-1.5, 0}, {18200., 30.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., -390.}], 
             Offset[{-1.5, 0}, {18200., -390.}]}]}, {
           LineBox[{{27120., -2310.}, {27120., -3850.}}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -2310.}], 
             Offset[{-1.5, 0}, {27120., -2310.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -3850.}], 
             Offset[{-1.5, 0}, {27120., -3850.}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {6000., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.45200391265625*^9, 3.45200414534375*^9, 
  3.45217303090625*^9, 3.452264982078125*^9, 3.45226514478125*^9, 
  3.5145522124545*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"During evaluation of In[6]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"-", "1237.5512820512818`"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "0.2826282051282051`"}], ",", 
   RowBox[{"ChiSquared", "\[Rule]", "167.9316276248149`"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.452001520078125*^9, 3.4520039126875*^9, 
  3.452004145375*^9, 3.4521730309375*^9, 3.45226498209375*^9, 
  3.4522651448125*^9, 3.514552212470125*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"Out[6]="]
}, Open  ]],

Cell[TextData[{
 "Note that the function requires a parameter name in its input, just like ",
 StyleBox["LinearFit", "MR"],
 ", and by default returns rules for array members of that parameter, again \
just like ",
 StyleBox["LinearFit", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[TextData[{
 "As discussed in Section 7.2, for this technique the concept of degrees of \
freedom has no meaning. Nonetheless, the function does return a ",
 StyleBox["ChiSquared", "MR"],
 " using the errors in the experimental data as the weights. As we shall see, \
if the data has no explicit errors, a ",
 StyleBox["SumOfSquares", "MR"],
 " is returned. In both cases, interpreting this number is indirect."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit", 
   "Chi-squared--interpretation"}],

Cell["We examine the data.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[CellGroupData[{

Cell[BoxData["CThDatingData"], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[7]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"6400", ",", 
     RowBox[{"{", 
      RowBox[{"1060.`", ",", "110.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7780", ",", 
     RowBox[{"{", 
      RowBox[{"670.`", ",", "110.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8200", ",", 
     RowBox[{"{", 
      RowBox[{"1080.`", ",", "110.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9050", ",", 
     RowBox[{"{", 
      RowBox[{"680.`", ",", "130.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9400", ",", 
     RowBox[{"{", 
      RowBox[{"1690.`", ",", "110.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10100", ",", 
     RowBox[{"{", 
      RowBox[{"1490.`", ",", "100.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9800", ",", 
     RowBox[{"{", 
      RowBox[{"1730.`", ",", "110.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10300", ",", 
     RowBox[{"{", 
      RowBox[{"1960.`", ",", "110.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10900", ",", 
     RowBox[{"{", 
      RowBox[{"2320.`", ",", "110.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11850", ",", 
     RowBox[{"{", 
      RowBox[{"1850.`", ",", "130.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11800", ",", 
     RowBox[{"{", 
      RowBox[{"2000.`", ",", "120.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11800", ",", 
     RowBox[{"{", 
      RowBox[{"2430.`", ",", "210.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12500", ",", 
     RowBox[{"{", 
      RowBox[{"2160.`", ",", "130.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14700", ",", 
     RowBox[{"{", 
      RowBox[{"3540.`", ",", "210.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15400", ",", 
     RowBox[{"{", 
      RowBox[{"3490.`", ",", "240.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17085", ",", 
     RowBox[{"{", 
      RowBox[{"1900.`", ",", "260.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16700", ",", 
     RowBox[{"{", 
      RowBox[{"3910.`", ",", "310.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18200", ",", 
     RowBox[{"{", 
      RowBox[{"3729.`", ",", "210.`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27120", ",", 
     RowBox[{"{", 
      RowBox[{"3350.`", ",", "770.`"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452003939875*^9, 3.45200414540625*^9, 
  3.45217303096875*^9, 3.45226499284375*^9, 3.45226514484375*^9, 
  3.514552212501375*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"Out[7]="]
}, Open  ]],

Cell["\<\
This shows that the two \[OpenCurlyDoubleQuote]wild\[CloseCurlyDoubleQuote] \
data points are at the end and the fourth from the end. We form a new data \
set with these two points dropped.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dropData", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"CThDatingData", ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"-", "3"}]}], "]"}]}], ";"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[8]:="],

Cell[TextData[{
 "Fitting this to a straight line yields almost the same fit that we got for \
the full data set with ",
 StyleBox["RobustLineFit", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{"dropData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[9]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVjnk01AkAx2dV1jGumVSLUKxyPNtTJMf46iVPFtuhxxbZMrNUW9MkdDma
mpA2d9LBjOs3jiLVNEXDmDEz+E3bqHYlUmlXRLtSz4Rt7R/f932fvz6fZbsP
bmHqUCiUkLn9/+fO6lMpFDHUwfzhbioXFr4X66U6YpRZdZS70rmombAPO7NA
jISxkeicb7jojEKegaEYVhfWPNnqwIXBmqQl5ovE2K9RtD3z4yJrcMjeyUUM
auR4yTBnjte1+m6LECOU5R0yv5eLzNHEg0TDnC/tSaN35WmsxcNnLux7sOUd
YC2I4WHJUhaDYncf47umIpJmz2L754TSzZr7SBNdWkLmZWKD8oBeak4zYl+U
tp/cdA5M6+r4af8WyPqK6p4OZcOD2anZqvMACcREWhb/V8TWMdc5SeZY62Zm
5pwD+XG/4rCDEozrvaE0fsrB6NJTqSsXtyInLYiV0pMLI+m8Gz+wW8HeXTVS
ys9DFMu/X6Roxap5F8Kb9uVDl5tgct6hDVZUJ4/JjQVQvu5o0U9tw4bUFvdM
eiFeNRuzJwfaUPDjvNrgfwrhXERbZu0rhXLysS6lqwjnm9xD3xdI4aW9lq5X
dBGBQaGprpNSPGZachicYlja8VzMQ9px3ScnXel3CYFHmvrj69vRcFykm2Zd
Ar7iyvlZQxnyju7lOGpLYB5dKfaMleHWS/NZB/llvNxf/vZluwyUm4dnNwuu
QCFpLXRbKkfWO5XVI/ZV9NFKIE2Q49Ob2uXrva8hcCDuvaRHjoxAXBtcVApy
bLsF06UDO+mkZ8/rUtQe8QpKzu5AnR2vQhtTBtFsb2LnSAcsro6W6qjL0K8q
tpWtV4AIJmtur+Zjh3GI2lmgwCbXDPYXPh8TRbZTXtMKGG6UBHzQE+CuTYNt
5hYlGL4+xoO/CPDU1j0koFGJ03F5uXv6BDBi9X4k9FUYUcba5/qX44rdYcGx
eBX2RJlywhvKEfCtS9cHqQozDp4P2xdXwGoFf6LWohO6v1XaOJ+sQDDf0Fpz
tBP29e+cHEcrULCrUF6q6cRuyY2AR5sr4V608FCfWxeaFnxvadpWiflkmOX2
3C4kOrsOBbpWYSywxj/5bRcieNnNjgVVcPX+vE8vqBuh5rIwgU41MjnxNAi6
EdubNCGLrwatpkB0R9uNdycOZQyqq/Eh8nbM5QgSvG0bevN8CIyHfDyzopEE
fspf915AoJop/+vmTRIG1OiguxUEYk4WBjFukdDcWRmZXkWgp87dKFxEIpb6
IJleQ+CuYWLBqRYSGaJh0dpGAumqT4J+FYluI4ZHmoTAwoApSf4rEhH3ht3M
nhMgdyqX2QyRWM5sWv+snwAvoZhb84bEiEnKlvIXBLTlnoFtwyROMOkc99cE
BnSOqsfHSZSZMhojR+b6WrXPg6ZJ/MnK/04wNdf3h4rxZIbEdbNov32fCVj8
faks5l8Syc0rw9bMEMi28YpN+koNPdqDAx1fCLBTjo1WfK2GU8tw/YiuEI5F
m0JW6asx+XNTS5OeEK/qLW7cN1CjmZZCnjAQIrz/HkdjpEZoHH3M2FgI449Z
j6NM1FhEH5j53UQIJXWHx1tTNQZbCCrfTIh0e+fiBJoaRNxhq710Ibx8prVf
6Gpw6AyX1eZC/AexFFRQ
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVT2dQkwcAjYhVgqAFbD2GxFPUSrRVG9Fg8KFwGDywsqQiipVQcg4Q2SpL
wQsKyEYFAmHlQ4Y7RAKEMDLgi4rYqowC2qOIIDIsCGjTH+/evbv33r23+rcA
F44WhUJx0uB/vnpFZymFIsb10aNmlLEYGLOyK2VaYrAVfvsln2JQPr72QPwi
MRYJzkSEz8dA5Y00qq4YF9yjXoxRY0H9OWzliu/E4ErykvotYpHY93btRroY
9ond8zIvjd4pZbl5ijFvcbg3Xh4L3nBogPCOGCe93fm6/DhY4clreuBjHHlL
/9cz6DJWmvnZUNbUgi+qrahalwCPz8H8gx21oJlwWCEdV2CnOLMk+roENVkf
ii4KeOCsKuPO2tZBcHSLf7LrVWznqDpctepRYOOm1b8hCb4VnJ0bG+rRXZUa
VjyVjJbzu3MOBDRAxNhrUXPwOobN4qI3fC8FlVY1U89MhZ5sYfUvgVIk3Jmc
YxulwdvPtkckl8KcpzidNJSGby4FL0ta1wj5yDXlx6fpULxprdOJbkTmNN3t
tTADAxL9wMneRpxOqVO+ScuEZZbB6lUsGX4/01VREp6FpPsM5w8ZMiROdNYP
O2fDge0cvXlShkfaDbUuVjkwWZNAX+HUBH3J5UHW8htwCLnfw61sQsBX5hf2
7A0UynOT5nWbMZoYFac/cBMrjpaId/g2I0eSxzgkvoX+U0VD/U3NcI6sfC4V
5ELeIM3cataCTb05BVUX8tBlcBOy4BZYJn7b5eaSD4de/w8Nz1uwRRZJMWXy
QY54GHPordj69Fj5Np0C3A5hssOvteJg/GclN6oAovlXoap3rYjq9aJd+FiA
HmUOrXmPHFKqZfLTI4Xw0ndSWwrkWHIx6CzjWSHGs2jTzFk5fGXrT3WzBKgx
v0PjuSjw7HZR3jGhAH/QGE72dxXY05VtN2FSBD2/V1NCHSUUPTNayitFyF1z
ThDJVcJlXef26rki2FvQ2yZkSozbmsb9yS2G6frC8dvGKhQusNTu7izG/kLd
VR0RKngsvjc7tq8EGccyW/gdKtD6Sqn7HpaAkWV0tmtrG0a/GKZUbyyFNnnA
xCO1De2NDo4TeaUYcSi3DR9qQ8OhIdMInTJstv58cgm7HaJtCznLosrAC+Ia
QNCOloHE5sF3ZTAozxA9mmnHG8arw7nuQkz8+tDnlicJ7Sd8v+NKIUadpuLX
3yVhbd3J82cQKOO0DN67R8LnasqgoxUBn4uZbJsHJC53Odpv2kngeQVDz11E
Qn2+kTK+i0CNbmhGXB2J45KqsPN2BGKVnwQ9ShJxLB4n2ZWAkf10Q/oACdVu
G9sHZwmQRxSrzd+SGEuZyc86RyAhOOdS+d8kDPsezIWHEJgp2uHQ+A8J7xjL
GlYEgV6tCPXoqMYvXfmjPEazTzrTzZ4lYbRnwvR1imbfS6XNizkSVmlVkZJU
AsZjNwp8vmjyA9yX+ekErpkzfcMWqFEc15d+IptAYFTkcPFiNRhNJHUkn8AP
WY5OP+mo4WXI839SQGCg0ri6lqpG9Am71rsCAu49j4M69NRQLKyNDS0loD+V
2Om9TI33rqF/eQoJKJZ6bR9aroZB8RaWdbnm/1rLnGADTf/k+5tmFQSYu2Zn
vhpq+u2E018rCfwHI4Jl+A==
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], Dashing[{0.03}], LineBox[CompressedData["
1:eJwVj3k41AkAhq0iNysdO46ZtpmVY2s3aaXUp6VpaodyJdWmwpKKrKO0sVuN
dmr0KEdyz7h+kSWECTHDmBn8ph6m3ZJRIaFNRRQ61v7xPe/z/vd+yw6GeQSq
q6mpsef2Py+e19ZTUxNC7/pA1TUrDihOV8vE6kK8C2d8yFvFQck43Z2jIcSA
wy8uhD0H7ftwRUdXiAbZqLLGmQOdNTFLFy0WImz4zWT3bg4uPBmkW9sK0W2p
5mBwYc7XNTt5+QqRW2TWcGaUA+6L6DCiQojvC7xbQ0sT8APu9tiG38agZcX9
m+w/sdQ8aKPa8no4adlrQMmFz0xk7s6uejzxVEzQPS/CRXZMKz6pAUYrdgyc
Huch0KI4ZNa5EUO+H15bRF/C2sD2Lk/1O6BzZZ+/0k9CwI3AddZNdxBrmj3k
/igJklOb0t3DmsDoTei9nnkZL8zPxK9Y0ozFTwe7nI5cgb54XvmO8Gb4mfg+
mFyZjH1BzqpaaTOcT3s7PXyZDM2zkYaJ34hw3FoqmGpIgWygrVE7XoQJDbcl
DnGp6G8wCH/bJ0I9g8Wrck+DTZrxMgsnMaxOKfz9zK8iscre7VWKGKOfgl0Y
qqtgstziV74VY7wtZoV1WTpMlyfYLmK3wK0x09Qz7BqYUVWqkLIWvHlnZ1jj
nAG+NCvxo24r1gb7HHQxysSinwuFDgGtuKd5qXXqXiaeHskfedrSisqRdZYD
/CxIm5pTV5tL8HxmJn0iIBuPjDMgjpRA5Lzl8Cp6Dph9wa+auiV43KmxoXAi
B+RLH0qgbRu8EnrMNt3KRWmUI+sErw0LxF/Gc3/MQ+3Hh9Hto22o2XOKyi3J
g0qeTmvdLEUSL0yaocPHHgO2wkYgBe9xdpg8go/xNNp7x1kpKuU+VB0lH3XU
ChrXQ4ZShTLO306Av2n2bNebMrRN8vq6MwTQD3o4SWjLoVd913X3rABZy38V
xIbIEZnyU9nsoXy4Mmw7JsRyaOp5mVVI8mFmyR8vpbQjNIe2PpZRgO18XYuu
k+0Y97D0O5BYgJT9qZLcrnYU5NT97jdWAPs0k+OPVnfghN654vBdhZhPupv6
XO4ALdUkLutOIV4yS5xPjHTgTfWqvT0WRVi5fiZUi9WJZ1PnHO3PF4EbEWIM
QSfm3QugCYaLYFySUlsz3YnJFu0a+tZiTOy+5Z/pS0KrZ3h7a3kxxtiTHMub
JFzPe4xEGREoDpQ8r6wkUc2zLWUYE/A/ncraWE2CdkXz6P2FBLpv2Ot715KY
ybr9es0SAnW60SlnGkmUV379fsKcwB/yKYFKTmJx37hmhA0BE9f3Tcn9JIbW
JNOPbSFA7pUtow6S8HI8OmS+lUBCZPrZkmckRJuYBMkiMJ3vwBQNk8jcNmvz
LZtAn/pJxdgYiR3+h+z+9Zzra57uZc2SqLtot/nwgbm+B/KN9z+QYFzWn085
RIDy+lqe/ycSyWnPJfIAAjyqY0DMFwoc4WeyrIIJhMfFvihYoAC1dt7O4WME
rNK2sb/TViCxQWWcHk6gv4xSXq+jwLSoVsmMIOCtuh3Rpa+AsjPUtziKgMHk
BeU+QwXQ5UrZFUNAprdn7YiRAn/9Q+3VPDn3n26THmmsgKlqOrsmloDjhtnp
zwsV4PZ37w/6jcB/TC5aQQ==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{6400., 1060.}, {7780., 670.}, {8200., 1080.}, {9050., 680.}, {
      9400., 1690.}, {10100., 1490.}, {9800., 1730.}, {10300., 1960.}, {
      10900., 2320.}, {11850., 1850.}, {11800., 2000.}, {11800., 2430.}, {
      12500., 2160.}, {14700., 3540.}, {15400., 
      3490.}}], {{LineBox[{{6400., 1170.}, {6400., 950.}}], 
       LineBox[{
        Offset[{1.5, 0}, {6400., 1170.}], Offset[{-1.5, 0}, {6400., 1170.}]}],
        LineBox[{
        Offset[{1.5, 0}, {6400., 950.}], 
         Offset[{-1.5, 0}, {6400., 950.}]}]}, {
       LineBox[{{7780., 780.}, {7780., 560.}}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 780.}], Offset[{-1.5, 0}, {7780., 780.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 560.}], 
         Offset[{-1.5, 0}, {7780., 560.}]}]}, {
       LineBox[{{8200., 1190.}, {8200., 970.}}], 
       LineBox[{
        Offset[{1.5, 0}, {8200., 1190.}], Offset[{-1.5, 0}, {8200., 1190.}]}],
        LineBox[{
        Offset[{1.5, 0}, {8200., 970.}], 
         Offset[{-1.5, 0}, {8200., 970.}]}]}, {
       LineBox[{{9050., 810.}, {9050., 550.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 810.}], Offset[{-1.5, 0}, {9050., 810.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 550.}], 
         Offset[{-1.5, 0}, {9050., 550.}]}]}, {
       LineBox[{{9400., 1800.}, {9400., 1580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9400., 1800.}], Offset[{-1.5, 0}, {9400., 1800.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9400., 1580.}], 
         Offset[{-1.5, 0}, {9400., 1580.}]}]}, {
       LineBox[{{10100., 1590.}, {10100., 1390.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1590.}], 
         Offset[{-1.5, 0}, {10100., 1590.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1390.}], 
         Offset[{-1.5, 0}, {10100., 1390.}]}]}, {
       LineBox[{{9800., 1840.}, {9800., 1620.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9800., 1840.}], Offset[{-1.5, 0}, {9800., 1840.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9800., 1620.}], 
         Offset[{-1.5, 0}, {9800., 1620.}]}]}, {
       LineBox[{{10300., 2070.}, {10300., 1850.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 2070.}], 
         Offset[{-1.5, 0}, {10300., 2070.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 1850.}], 
         Offset[{-1.5, 0}, {10300., 1850.}]}]}, {
       LineBox[{{10900., 2430.}, {10900., 2210.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2430.}], 
         Offset[{-1.5, 0}, {10900., 2430.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2210.}], 
         Offset[{-1.5, 0}, {10900., 2210.}]}]}, {
       LineBox[{{11850., 1980.}, {11850., 1720.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1980.}], 
         Offset[{-1.5, 0}, {11850., 1980.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1720.}], 
         Offset[{-1.5, 0}, {11850., 1720.}]}]}, {
       LineBox[{{11800., 2120.}, {11800., 1880.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2120.}], 
         Offset[{-1.5, 0}, {11800., 2120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 1880.}], 
         Offset[{-1.5, 0}, {11800., 1880.}]}]}, {
       LineBox[{{11800., 2640.}, {11800., 2220.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2640.}], 
         Offset[{-1.5, 0}, {11800., 2640.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2220.}], 
         Offset[{-1.5, 0}, {11800., 2220.}]}]}, {
       LineBox[{{12500., 2290.}, {12500., 2030.}}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2290.}], 
         Offset[{-1.5, 0}, {12500., 2290.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2030.}], 
         Offset[{-1.5, 0}, {12500., 2030.}]}]}, {
       LineBox[{{14700., 3750.}, {14700., 3330.}}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3750.}], 
         Offset[{-1.5, 0}, {14700., 3750.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3330.}], 
         Offset[{-1.5, 0}, {14700., 3330.}]}]}, {
       LineBox[{{15400., 3730.}, {15400., 3250.}}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3730.}], 
         Offset[{-1.5, 0}, {15400., 3730.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3250.}], 
         Offset[{-1.5, 0}, {15400., 3250.}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{5500.000000000001, 230.},
  DisplayFunction->Identity,
  PlotRange->{{5500.000000000001, 16300.}, {230., 4070.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[{{6400., 450.}, {7780., -340.}, {8200., -50.}, {
          9050., -700.}, {9400., 210.}, {9800., 140.}, {10100., -190.}, {
          10300., 220.}, {10900., 410.}, {11800., -170.}, {11800., 260.}, {
          11850., -330.}, {12500., -210.}, {14700., 530.}, {15400., 280.}}], {{
           LineBox[{{6400., 560.}, {6400., 340.}}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 560.}], 
             Offset[{-1.5, 0}, {6400., 560.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 340.}], 
             Offset[{-1.5, 0}, {6400., 340.}]}]}, {
           LineBox[{{7780., -230.}, {7780., -450.}}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -230.}], 
             Offset[{-1.5, 0}, {7780., -230.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -450.}], 
             Offset[{-1.5, 0}, {7780., -450.}]}]}, {
           LineBox[{{8200., 60.}, {8200., -160.}}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., 60.}], 
             Offset[{-1.5, 0}, {8200., 60.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., -160.}], 
             Offset[{-1.5, 0}, {8200., -160.}]}]}, {
           LineBox[{{9050., -570.}, {9050., -830.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -570.}], 
             Offset[{-1.5, 0}, {9050., -570.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -830.}], 
             Offset[{-1.5, 0}, {9050., -830.}]}]}, {
           LineBox[{{9400., 320.}, {9400., 100.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 320.}], 
             Offset[{-1.5, 0}, {9400., 320.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 100.}], 
             Offset[{-1.5, 0}, {9400., 100.}]}]}, {
           LineBox[{{9800., 250.}, {9800., 30.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 250.}], 
             Offset[{-1.5, 0}, {9800., 250.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 30.}], 
             Offset[{-1.5, 0}, {9800., 30.}]}]}, {
           LineBox[{{10100., -90.}, {10100., -290.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -90.}], 
             Offset[{-1.5, 0}, {10100., -90.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -290.}], 
             Offset[{-1.5, 0}, {10100., -290.}]}]}, {
           LineBox[{{10300., 330.}, {10300., 110.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 330.}], 
             Offset[{-1.5, 0}, {10300., 330.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 110.}], 
             Offset[{-1.5, 0}, {10300., 110.}]}]}, {
           LineBox[{{10900., 520.}, {10900., 300.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 520.}], 
             Offset[{-1.5, 0}, {10900., 520.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 300.}], 
             Offset[{-1.5, 0}, {10900., 300.}]}]}, {
           LineBox[{{11800., -50.}, {11800., -290.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -50.}], 
             Offset[{-1.5, 0}, {11800., -50.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -290.}], 
             Offset[{-1.5, 0}, {11800., -290.}]}]}, {
           LineBox[{{11800., 470.}, {11800., 50.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 470.}], 
             Offset[{-1.5, 0}, {11800., 470.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 50.}], 
             Offset[{-1.5, 0}, {11800., 50.}]}]}, {
           LineBox[{{11850., -200.}, {11850., -460.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -200.}], 
             Offset[{-1.5, 0}, {11850., -200.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -460.}], 
             Offset[{-1.5, 0}, {11850., -460.}]}]}, {
           LineBox[{{12500., -80.}, {12500., -340.}}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -80.}], 
             Offset[{-1.5, 0}, {12500., -80.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -340.}], 
             Offset[{-1.5, 0}, {12500., -340.}]}]}, {
           LineBox[{{14700., 740.}, {14700., 320.}}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 740.}], 
             Offset[{-1.5, 0}, {14700., 740.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 320.}], 
             Offset[{-1.5, 0}, {14700., 320.}]}]}, {
           LineBox[{{15400., 520.}, {15400., 40.}}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 520.}], 
             Offset[{-1.5, 0}, {15400., 520.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 40.}], 
             Offset[{-1.5, 0}, {15400., 40.}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {6500., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452003946*^9, 3.452004145515625*^9, 3.4521730310625*^9, 
  3.452264998859375*^9, 3.4522651449375*^9, 3.514552212642*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"During evaluation of In[9]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1240.`"}], ",", "170.`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.289`", ",", "0.016`"}], "}"}]}], ",", 
   RowBox[{"ChiSquared", "\[Rule]", "102.54248518213537`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "13"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452003946109375*^9, 3.45200414553125*^9, 
  3.4521730310625*^9, 3.452264998890625*^9, 3.4522651449375*^9, 
  3.514552212657625*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"Out[9]="]
}, Open  ]],

Cell[TextData[{
 "The advantage of ",
 StyleBox["RobustLineFit", "MR"],
 ", however, is that in some sense it provides an \
\[OpenCurlyDoubleQuote]objective\[CloseCurlyDoubleQuote] estimate of whether \
or not a data point is wild, and does not involve explicitly throwing out any \
data."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[TextData[{
 "As a final example using ",
 StyleBox["RobustLineFit", "MR"],
 ", we return to the ganglion data already discussed in Chapters 4 and 6."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LoadData", "[", "Ganglion", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[10]:="],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"LoadData", "::", "name"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Loading: \[NoBreak]\\!\\(\\*TagBox[TagBox[GridBox[{{\\\"\\\
\\\\\"GanglionData\\\\\\\"\\\"}}, RowSpacings -> 1, ColumnAlignments -> Left, \
ColumnAlignments -> Left], Column], Function[BoxForm`e$, \
TableForm[BoxForm`e$]]]\\)\[NoBreak]\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.452003951015625*^9, 3.45200414559375*^9, 
  3.45217303109375*^9, 3.45226500328125*^9, 3.45226514496875*^9, 
  3.514552212688875*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"During evaluation of In[10]:="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", "GanglionData", "]"}]], "Input",
 CellChangeTimes->{3.452003953765625*^9},
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[11]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{11.1, 2.56}, {13.6, 2.87}, {22.5, 2.96}, {31.4, 3.75}, {32.7, 
     3.42}, {34., 3.5}, {53.8, 4.55}, {63., 4.68}, {67., 6.98}, {81., 6.85}, {
     101., 11.25}, {107., 10.91}, {114., 11.1}, {141., 18.29}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageMargins->0.,
  ImageSize->Automatic,
  PlotRange->{{0., 141.}, {0, 18.29}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452003954296875*^9, 3.452004145640625*^9, 
  3.452173031125*^9, 3.452265005703125*^9, 3.452265145*^9, 
  3.514552212720125*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"Out[11]="]
}, Open  ]],

Cell["\<\
So far, we have (1) fit the data to a parabola as well as a line, (2) fit the \
data to a straight line with the last data point dropped, and (3) done a \
loess fit to the residuals of various linear fits. We now do a robust fit to \
a line.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustLineFit", "[", 
  RowBox[{"GanglionData", ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"In[12]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVkms0lAkAhqdxiVxqDJFxScaYmc/JoizGNm82GiIlRHbwWbKc0TpuuRXJ
uKTYcquGhs1tO5uMNolSqVSS1Imc7bJSm7I2tLHia2z74znP3+fHYxHxo18U
nUaj+Xzhf3d4WR92cOCgmeodbc2khL+LPyad2MzBK9m0k85hSvgp/rp4MYQD
I4FRSbSMEjpVhtjey+UgJy1KYNJBCdtelTyKGOIgcHaxVPovJWzNnDM6lmaN
xcl17kEJn4Vnmu/WT13lYvurU42fo5VCmZ7k6llvAvORzo51PBpiqZDqhZiv
EJlha+m2gY4msj26U2mPjcOSiDJbVYT9/ZolzVsPepKLwMpQHd9qGCQ5ujuh
UMh31eRqQFS+MEwfdEHudrKk1mAZ0hR/vmyTfQP30o5lR2y0oTfvG9vBB8aZ
deYXnXWx119jnBO/EdlxsTd6GSuQmNItWPrQDVNvmUXfsxjIeviEmWy8CceX
vswIZOrhjnBwJFrsjlb3lEs/qDPRmPw4q7/TAy0ykyK2rj4qXq+t76aLMFb2
RuqiagATVlEVP8oTSxqu68/rrsSLyAcFhte9cGQocmpY3xCKsT0LR9W8seMM
McPQNIKx/QpkR/mAKlcp/shYhdIL2lrU2a34g73oa6dpDL9stcczGttQf0+r
wdCAhdRzcyYtF7fh+dERkamJCTgZq3iKXdvhszCsv49hCjlfYCbR8kNt5mhS
HssMtSmHhuJa/GBbu1z5jmmOjX0+mvZ+O3A8gR7bprIav6rpWbUs8UdhjZq8
L3815E9VVJPr/WFYc/LtchULiMtn7/0TGIAKwolqLLBAR5BYd71aIAZ6nNse
aK2BvH2aeaUxEA0O93PZeWvgS+XRF3fuhMQmxrR/mSXyn3n+lk/txMBsRW9d
niVCe7JHHlUH4f0A10yLxgatrH3miXcwKMcbgp6DbPCVpv2WU8Fo2jMZ16xk
w9w7t4RXuwub7Nmxfx20QpWjkX6KRwj23x5PD6Bx0M5fzZS+DUG8xMDeN50D
OZ234HP8O/hXi85XKznQ3RvWIHYVY0iu47kq3RqiBxUu1u/FEK192vRu0RoW
dm6e56tCkdSnfc7zIBc5tixWnjAMrq4Dd4c+c9HMmBnUmwrD7NdVze05PNiJ
lLxEr3BsVZtvvK3kIUTblbNBFo7Q0c7Nu1P5iHWbX/nmQzjCt+Qpgik+rnj4
xig2kVBKR23T9xKo6is9beZBovvmuk/yNAKZfsPPizaTKFDJ776VQcAllPTb
7UVC9wARwMgm0JacKGBtI2GWmZTeVECgpa5SRxpCYkOC+q2hEwR+po8oghJI
ZIbydzlcJnCggD1xK5EEqjMtg7sIhOvGcBySSag+65/Yf42AufGHkzqpJIqD
E7N6b37psVPN7d5H4pT/5TryPoHycG6gTSGJy15bJ0teEEh6I/npxCES2YU1
7RdGCPhLFL3qh0l43Plw4OkoAb1UF+HLYhL97pX61mMEiku8uRVlJJ5hxLlr
kkCcwdEIlQoSNVn2Kq+nCXjLBqviK0lEduX2aX4koNUYythyksSEgBcWMEdg
3Ob0lnYZiZb0DG7GPIHe1jGpVTWJlEv3p2soAr842Vw7doqEy5x5Z4+SQEFX
/PyinPzyT0LuBM0G/wHjaRU0
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], 
     PointBox[{{11.1, 2.56}, {13.6, 2.87}, {22.5, 2.96}, {31.4, 3.75}, {32.7, 
      3.42}, {34., 3.5}, {53.8, 4.55}, {63., 4.68}, {67., 6.98}, {81., 
      6.85}, {101., 11.25}, {107., 10.91}, {114., 11.1}, {141., 
      18.29}}]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-1.8900000000000006`, 0.9870000000000003},
  DisplayFunction->Identity,
  PlotRange->{{-1.8900000000000006`, 153.99}, {0.9870000000000003, 19.863}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[{{11.1, 0.7795562130177518}, {13.6, 0.8543491124260356}, {
         22.5, 0.10701183431952677`}, {31.4, 0.05967455621301809}, {
         32.7, -0.39263313609467465`}, {34., -0.4349408284023668}, {
         53.8, -1.2477810650887573`}, {63., -1.9833431952662721`}, {
         67., -0.059674556213017205`}, {81., -1.506834319526627}, {101., 
         1.0115088757396435`}, {107., 0.10701183431952543`}, {
         114., -0.3615680473372773}, {141., 4.28819526627219}}]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {10., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452003957859375*^9, 3.452004145703125*^9, 
  3.452173031140625*^9, 3.452265008671875*^9, 3.452265145015625*^9, 
  3.514552212767*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"During evaluation of In[12]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", "0.7361242603550293`"}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "0.0940828402366864`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "29.01463755295683`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.452003957921875*^9, 3.452004145703125*^9, 
  3.45217303115625*^9, 3.4522650086875*^9, 3.45226514503125*^9, 
  3.514552212782625*^9},
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"},
 CellLabel->"Out[12]="]
}, Open  ]],

Cell["\<\
Here again, the result gives us some indication that a straight line is not a \
good model for this data unless we treat the last data point as an outlier.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.1.2 Using Weighting Techniques", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell["\<\
Another way to do robust fitting is to realize that the data points we wish \
to suppress are those with high residuals. Say we have done a fit and the \
residuals for each data point are the following.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell[BoxData[
 RowBox[{"res", " ", "=", " ", 
  RowBox[{
   StyleBox["{",
    FontSlant->"Plain"], 
   RowBox[{"res1", ",", " ", "res2", ",", " ", 
    RowBox[{"...", " ", 
     RowBox[{",", " ", "resN"}]}]}], 
   StyleBox["}",
    FontSlant->"Plain"]}]}]], "Input",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell["We form a set of weights.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell[BoxData[
 RowBox[{"weights", " ", "=", " ", 
  RowBox[{
   StyleBox["{",
    FontSlant->"Plain"], 
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["w",
       FontSlant->"Plain"], "1"}]], ",", " ", "w2", ",", " ", "...", 
    RowBox[{",", " ", "wN"}]}], 
   StyleBox["}",
    FontSlant->"Plain"]}]}]], "Input",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell["First we define a cutoff.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell[BoxData[
 RowBox[{"cutoff", " ", "=", " ", 
  RowBox[{"6", " ", "*", " ", 
   RowBox[{"Median", 
    StyleBox["[",
     FontSlant->"Plain"], 
    StyleBox[" ",
     FontSlant->"Plain"], 
    RowBox[{"Abs", 
     StyleBox["[",
      FontSlant->"Plain"], 
     StyleBox[
      RowBox[{
       StyleBox["r",
        FontSlant->"Plain"], "es"}]], 
     StyleBox["]",
      FontSlant->"Plain"]}], 
    StyleBox[" ",
     FontSlant->"Plain"], 
    StyleBox["]",
     FontSlant->"Plain"]}]}]}]], "Input",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell["\<\
Values of the dependent value greater than this cutoff are set to zero. For \
values smaller than the cutoff, the weights are \
\[OpenCurlyDoubleQuote]bi-square\[CloseCurlyDoubleQuote] weights of the \
residuals. For example, if the cutoff is 15 the weights look like this.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cutoff", "=", "15"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bisquare", "[", "x_", "]"}], ":=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["x", "2"]}], ")"}], "2"]}], "\n", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"bisquare", "[", 
    FractionBox["res", "cutoff"], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"res", ",", 
     RowBox[{"-", "cutoff"}], ",", "cutoff"}], "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Value of residual\>\"", ",", "\"\<Weight\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"},
 CellLabel->"In[13]:="],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
FUF76t/UHo/D1P/v+T/6/8///wet9CHB
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{
    FormBox["\"Value of residual\"", TraditionalForm], 
    FormBox["\"Weight\"", TraditionalForm]},
  PlotRange->{{-15, 15}, {0., 0.9999999526113411}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.452003965078125*^9, 3.45200414575*^9, 3.4521730311875*^9,
   3.45226502003125*^9, 3.4522651450625*^9, 3.514552212813875*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"},
 CellLabel->"Out[15]="]
}, Open  ]],

Cell[TextData[{
 "A brief technical note: Because we are going to convert these weights to \
errors below by taking the reciprocal of them, the minimum value of a weight \
cannot be exactly zero. Instead these weights are set to the minimum positive \
number that can be used on a particular computer, ",
 StyleBox["$MinMachineNumber", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell["\<\
The weights are converted to effective errors in the dependent variable.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell[BoxData[
 RowBox[{"erry", "=", 
  SqrtBox[
   FractionBox["1", "weights"]]}]], "Input",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell["Then the fit is iterated until it converges.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],

Cell[TextData[{
 "This is exactly the technique used by ",
 StyleBox["RobustCurveFit", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit", "RobustCurveFit--algorithm"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustCurveFit", "[", 
  RowBox[{"CThDatingData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[16]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAmV22GwAAuUCgUQ8VSaeCQE6BFO5a
BrlAlhLgJ4q2gkACpXLAtQy5QIrTsDrLxYJAauwuZWsZuUByVVJgTeSCQDp7
p67WMrlAQlmVq1Ehg0DamJhBrWW5QN5gG0Jam4NAHNR6Z1rLuUAgcCdva4+E
QKBKP7O0lrpAoI4/yY13hkCYiUMEn0+8QHDX4M3wmYpAyqznV1HrvUAMhVSf
MHaOQMjYdEDwfr9A5rxn34YfkUBcqz5xYprAQC69XZcELZNAcdySw7BmwUDc
77y1cBeVQH62pPIZRMJAcqhU/Osql0DyFCtseR3DQJoE8Om1NJlAg2UB5zzo
w0Aqk/Q9bhubQAxflT4bxMRAoKcxujUrnUCySnmXXZHFQHzu15zrF59AvrrR
OpZaxkB07EATeH2gQMPT57rpNMdAoCQy7IGDoUDl3k08oQDIQP71V/gCeKJA
AJNxmnPdyEBRCpqYC4GjQIHLCUM8tslAbPBdjDuFpEAf9vHsaIDKQLpvVrPi
d6VAtcmXc7Bby0D8MWtuEX+mQGiPjftbKMxAco20XLd0p0AU/kBgIgbNQNor
Gt/kfqhAJvFoD9/fzUAMnAG1OYSpQFXW4L//qs5AcqUdvgV4qkB9ZBZNO4fP
QMzxVVtZgKtAYfLNbW0q0EBY18IrJHesQLb0Slo4j9BAro6xTxZprUCHyya1
kPzQQPSIvAeQb65AZ5uqEJti0UBwHPzygGSvQMM/jdoy0dFAcPkrufw2sEBS
JqrJxT3SQIzNmqJMubBA8AVvuQqj0kBC7qMl2DKxQAq6khfdENNAcjC7cqe2
sUDwOJA2ejzTQAAAAAAA67FAHNgygA==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUhAkQOmUfhP7QAqFZDkDoB1D5tQchtEMr
hI45BKEzZkHoXYchtMd0CK0C5XPMhtByRyD0gnkQ2usohFZYBKFVj0PoF3Mg
NA+U7zAflf8Hqj7rBNR9CyD0tjMQesVqCC1yDkK7QPgO6y9A+BvmQmh/KL9n
HYQ+dhFCK62F0DW3ILTOKgcADig18A==
      
      "]], {{LineBox[{{6400., 1170.}, {6400., 950.}}], 
       LineBox[{
        Offset[{1.5, 0}, {6400., 1170.}], Offset[{-1.5, 0}, {6400., 1170.}]}],
        LineBox[{
        Offset[{1.5, 0}, {6400., 950.}], 
         Offset[{-1.5, 0}, {6400., 950.}]}]}, {
       LineBox[{{7780., 780.}, {7780., 560.}}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 780.}], Offset[{-1.5, 0}, {7780., 780.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 560.}], 
         Offset[{-1.5, 0}, {7780., 560.}]}]}, {
       LineBox[{{8200., 1190.}, {8200., 970.}}], 
       LineBox[{
        Offset[{1.5, 0}, {8200., 1190.}], Offset[{-1.5, 0}, {8200., 1190.}]}],
        LineBox[{
        Offset[{1.5, 0}, {8200., 970.}], 
         Offset[{-1.5, 0}, {8200., 970.}]}]}, {
       LineBox[{{9050., 810.}, {9050., 550.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 810.}], Offset[{-1.5, 0}, {9050., 810.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 550.}], 
         Offset[{-1.5, 0}, {9050., 550.}]}]}, {
       LineBox[{{9400., 1800.}, {9400., 1580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9400., 1800.}], Offset[{-1.5, 0}, {9400., 1800.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9400., 1580.}], 
         Offset[{-1.5, 0}, {9400., 1580.}]}]}, {
       LineBox[{{10100., 1590.}, {10100., 1390.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1590.}], 
         Offset[{-1.5, 0}, {10100., 1590.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1390.}], 
         Offset[{-1.5, 0}, {10100., 1390.}]}]}, {
       LineBox[{{9800., 1840.}, {9800., 1620.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9800., 1840.}], Offset[{-1.5, 0}, {9800., 1840.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9800., 1620.}], 
         Offset[{-1.5, 0}, {9800., 1620.}]}]}, {
       LineBox[{{10300., 2070.}, {10300., 1850.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 2070.}], 
         Offset[{-1.5, 0}, {10300., 2070.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 1850.}], 
         Offset[{-1.5, 0}, {10300., 1850.}]}]}, {
       LineBox[{{10900., 2430.}, {10900., 2210.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2430.}], 
         Offset[{-1.5, 0}, {10900., 2430.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2210.}], 
         Offset[{-1.5, 0}, {10900., 2210.}]}]}, {
       LineBox[{{11850., 1980.}, {11850., 1720.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1980.}], 
         Offset[{-1.5, 0}, {11850., 1980.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1720.}], 
         Offset[{-1.5, 0}, {11850., 1720.}]}]}, {
       LineBox[{{11800., 2120.}, {11800., 1880.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2120.}], 
         Offset[{-1.5, 0}, {11800., 2120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 1880.}], 
         Offset[{-1.5, 0}, {11800., 1880.}]}]}, {
       LineBox[{{11800., 2640.}, {11800., 2220.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2640.}], 
         Offset[{-1.5, 0}, {11800., 2640.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2220.}], 
         Offset[{-1.5, 0}, {11800., 2220.}]}]}, {
       LineBox[{{12500., 2290.}, {12500., 2030.}}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2290.}], 
         Offset[{-1.5, 0}, {12500., 2290.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2030.}], 
         Offset[{-1.5, 0}, {12500., 2030.}]}]}, {
       LineBox[{{14700., 3750.}, {14700., 3330.}}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3750.}], 
         Offset[{-1.5, 0}, {14700., 3750.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3330.}], 
         Offset[{-1.5, 0}, {14700., 3330.}]}]}, {
       LineBox[{{15400., 3730.}, {15400., 3250.}}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3730.}], 
         Offset[{-1.5, 0}, {15400., 3730.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3250.}], 
         Offset[{-1.5, 0}, {15400., 3250.}]}]}, {
       LineBox[{{17085., 2160.}, {17085., 1640.}}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 2160.}], 
         Offset[{-1.5, 0}, {17085., 2160.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 1640.}], 
         Offset[{-1.5, 0}, {17085., 1640.}]}]}, {
       LineBox[{{16700., 4220.}, {16700., 3600.}}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 4220.}], 
         Offset[{-1.5, 0}, {16700., 4220.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 3600.}], 
         Offset[{-1.5, 0}, {16700., 3600.}]}]}, {
       LineBox[{{18200., 3939.}, {18200., 3519.}}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3939.}], 
         Offset[{-1.5, 0}, {18200., 3939.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3519.}], 
         Offset[{-1.5, 0}, {18200., 3519.}]}]}, {
       LineBox[{{27120., 4120.}, {27120., 2580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 4120.}], 
         Offset[{-1.5, 0}, {27120., 4120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 2580.}], 
         Offset[{-1.5, 0}, {27120., 2580.}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{4328.000000000001, 183.},
  DisplayFunction->Identity,
  PlotRange->{{4328.000000000001, 29192.000000000004`}, {183., 4587.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUgRoInbIPQjuUHgDTLAcgfAY/CH/tQQjf
oA3CjzkE1Z8OoVUOQ+iGaAi9C8bPhqiXO4Kq3usohFYoh9A8x1HVw/gOWRBa
Fco/UA6RzzoB4T8ogPC3nYGaB/WPyDlU+/wvwMwH0w7rofwNcyH6j12E8BdU
Qvg1tyB8jtUHAANMNzc=
          "]], {{
           LineBox[{{6400., 570.}, {6400., 350.}}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 570.}], 
             Offset[{-1.5, 0}, {6400., 570.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 350.}], 
             Offset[{-1.5, 0}, {6400., 350.}]}]}, {
           LineBox[{{7780., -230.}, {7780., -450.}}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -230.}], 
             Offset[{-1.5, 0}, {7780., -230.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -450.}], 
             Offset[{-1.5, 0}, {7780., -450.}]}]}, {
           LineBox[{{8200., 50.}, {8200., -170.}}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., 50.}], 
             Offset[{-1.5, 0}, {8200., 50.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., -170.}], 
             Offset[{-1.5, 0}, {8200., -170.}]}]}, {
           LineBox[{{9050., -580.}, {9050., -840.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -580.}], 
             Offset[{-1.5, 0}, {9050., -580.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -840.}], 
             Offset[{-1.5, 0}, {9050., -840.}]}]}, {
           LineBox[{{9400., 300.}, {9400., 80.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 300.}], 
             Offset[{-1.5, 0}, {9400., 300.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 80.}], 
             Offset[{-1.5, 0}, {9400., 80.}]}]}, {
           LineBox[{{9800., 220.}, {9800., 0.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 220.}], 
             Offset[{-1.5, 0}, {9800., 220.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 0.}], 
             Offset[{-1.5, 0}, {9800., 0.}]}]}, {
           LineBox[{{10100., -120.}, {10100., -320.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -120.}], 
             Offset[{-1.5, 0}, {10100., -120.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -320.}], 
             Offset[{-1.5, 0}, {10100., -320.}]}]}, {
           LineBox[{{10300., 300.}, {10300., 80.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 300.}], 
             Offset[{-1.5, 0}, {10300., 300.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 80.}], 
             Offset[{-1.5, 0}, {10300., 80.}]}]}, {
           LineBox[{{10900., 480.}, {10900., 260.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 480.}], 
             Offset[{-1.5, 0}, {10900., 480.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 260.}], 
             Offset[{-1.5, 0}, {10900., 260.}]}]}, {
           LineBox[{{11800., -100.}, {11800., -340.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -100.}], 
             Offset[{-1.5, 0}, {11800., -100.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -340.}], 
             Offset[{-1.5, 0}, {11800., -340.}]}]}, {
           LineBox[{{11800., 420.}, {11800., 0.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 420.}], 
             Offset[{-1.5, 0}, {11800., 420.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 0.}], 
             Offset[{-1.5, 0}, {11800., 0.}]}]}, {
           LineBox[{{11850., -250.}, {11850., -510.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -250.}], 
             Offset[{-1.5, 0}, {11850., -250.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -510.}], 
             Offset[{-1.5, 0}, {11850., -510.}]}]}, {
           LineBox[{{12500., -140.}, {12500., -400.}}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -140.}], 
             Offset[{-1.5, 0}, {12500., -140.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -400.}], 
             Offset[{-1.5, 0}, {12500., -400.}]}]}, {
           LineBox[{{14700., 660.}, {14700., 240.}}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 660.}], 
             Offset[{-1.5, 0}, {14700., 660.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 240.}], 
             Offset[{-1.5, 0}, {14700., 240.}]}]}, {
           LineBox[{{15400., 430.}, {15400., -50.}}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 430.}], 
             Offset[{-1.5, 0}, {15400., 430.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., -50.}], 
             Offset[{-1.5, 0}, {15400., -50.}]}]}, {
           LineBox[{{16700., 530.}, {16700., -90.}}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., 530.}], 
             Offset[{-1.5, 0}, {16700., 530.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., -90.}], 
             Offset[{-1.5, 0}, {16700., -90.}]}]}, {
           LineBox[{{17085., -1640.}, {17085., -2160.}}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -1640.}], 
             Offset[{-1.5, 0}, {17085., -1640.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -2160.}], 
             Offset[{-1.5, 0}, {17085., -2160.}]}]}, {
           LineBox[{{18200., -200.}, {18200., -620.}}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., -200.}], 
             Offset[{-1.5, 0}, {18200., -200.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., -620.}], 
             Offset[{-1.5, 0}, {18200., -620.}]}]}, {
           LineBox[{{27120., -2690.}, {27120., -4230.}}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -2690.}], 
             Offset[{-1.5, 0}, {27120., -2690.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -4230.}], 
             Offset[{-1.5, 0}, {27120., -4230.}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {6000., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452003971265625*^9, 3.452004145859375*^9, 
  3.452173031265625*^9, 3.45226502484375*^9, 3.45226514515625*^9, 
  3.514552212970125*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"During evaluation of In[16]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"-", "1323.4343111072494`"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "0.3000538857698479`"}], ",", 
   RowBox[{"PseudoChiSquared", "\[Rule]", "1.2963641584014222`*^6"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "15"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452003971296875*^9, 3.452004145875*^9, 
  3.45217303128125*^9, 3.452265024875*^9, 3.452265145171875*^9, 
  3.51455221298575*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[16]="]
}, Open  ]],

Cell[TextData[{
 "Note that the input arguments to ",
 StyleBox["RobustCurveFit", "MR"],
 " are identical to those of the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["LinearFit", "MR"],
 ". ",
 StyleBox["LinearFit", "MR"],
 " is actually used internally by ",
 StyleBox["RobustCurveFit", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[TextData[{
 "The ",
 StyleBox["PseudoChiSquared", "MR"],
 " returned by the routine is the chi-squared statistic calculated assuming \
that the errors in the dependent variable generated by the bi-square weights \
are the correct errors. Thus, its interpretation is indirect."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "Chi-squared--interpretation", "RobustCurveFit--PseudoChiSquared", 
   "PseudoChiSquared returned by RobustCurveFit", "RobustCurveFit"}],

Cell[TextData[{
 "The ",
 StyleBox["DegreesOfFreedom", "MR"],
 " returned is the number of data points minus the number of parameters to \
which we are fitting (the standard definition) minus the number of data \
points whose weights are set to zero."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--DegreesOfFreedom", "RobustCurveFit"}],

Cell[TextData[{
 "If the model matches the data reasonably well, then ",
 StyleBox["RobustCurveFit", "MR"],
 " should produce a fit with little or no difference from ",
 StyleBox["LinearFit", "MR"],
 ". Using the ganglion data once more illustrates this."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{"GanglionData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", "a", ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[17]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2.56`", ",", "0.25`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.000757`", ",", "0.000032`"}], "}"}]}], ",", 
   RowBox[{"PseudoErrorY", "\[Rule]", "0.6922444522906199`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "5.75042858072568`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "12"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4520039775625*^9, 3.45200414590625*^9, 
  3.4521730313125*^9, 3.4522650298125*^9, 3.452265145234375*^9, 
  3.514552213017*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[17]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustCurveFit", "[", 
  RowBox[{"GanglionData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ",", "a", ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[18]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", "2.5452936780019932`"}], ",", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], "\[Rule]", "0.000764630946914714`"}], ",", 
   RowBox[{"PseudoChiSquared", "\[Rule]", "2.8503216735582746`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "12"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4520039800625*^9, 3.452004145921875*^9, 
  3.45217303134375*^9, 3.452265032640625*^9, 3.452265145265625*^9, 
  3.51455221304825*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[18]="]
}, Open  ]],

Cell[TextData[{
 "Note that we could not have used ",
 StyleBox["RobustLineFit", "MR"],
 " for this, since it is only capable of fitting to straight lines."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[TextData[{
 "Finally, ",
 StyleBox["RobustCurveFit", "MR"],
 " can be used as a robust averager of data. For example, the following \
command generates 20 data points fairly close to 1.5 and a single data point \
equal to 100."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"1.5`", "\[InvisibleSpace]", "+", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.1`"}], ",", "0.1`"}], "}"}], "]"}]}], ",", 
     RowBox[{"{", "20", "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Insert", "[", 
    RowBox[{"mydata", ",", "100", ",", "5"}], "]"}]}], ";"}]}], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[19]:="],

Cell[TextData[{
 "We use the ",
 StyleBox["Mean", "MB"],
 " and ",
 StyleBox["Median", "MB"],
 " functions that are ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " built-in commands.."
}], "Text",
 Evaluatable->False,
 CellChangeTimes->{{3.452003995828125*^9, 3.452004008890625*^9}},
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "mydata", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[22]:="],

Cell[BoxData["6.20135422674726`"], "Output",
 CellChangeTimes->{3.45200401240625*^9, 3.452004145953125*^9, 
  3.452173031359375*^9, 3.452265040015625*^9, 3.452265145296875*^9, 
  3.514552213142*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[22]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Median", "[", "mydata", "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[23]:="],

Cell[BoxData["1.5087513533902135`"], "Output",
 CellChangeTimes->{3.4520040159375*^9, 3.452004145984375*^9, 
  3.452173031390625*^9, 3.4522650423125*^9, 3.452265145328125*^9, 
  3.51455221317325*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[23]="]
}, Open  ]],

Cell[TextData[{
 "Fitting this data to a polynomial with powers of {0} means we have forced \
the slope and all other terms involving the independent variable to zero. \
Thus, ",
 StyleBox["a", "MR",
  FontSlant->"Italic"],
 StyleBox["[", "MR"],
 StyleBox["0", "TR"],
 StyleBox["]", "MR"],
 " should be the mean."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LinearFit", "[", 
  RowBox[{"mydata", ",", 
   RowBox[{"{", "0", "}"}], ",", "a", ",", 
   RowBox[{"ReturnErrors", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[24]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLXVkQi4Dwwf7y5rZZ/XPSTgkRf9Z8lf5M5y/8lP6
nV/u3+D8G9eP5JqJ/4Xzt8x/4VO2k9EBxt/+aUph1HUWOJ9LsUX9vgUHnN8n
cFprYQI3nJ90O2Q/8xk+OH9nktPG7cKCcH6URZtmzxIhOH9RdfYrg3AROL9p
/p/AL29E4XyGyw8c9lSJw/lqJWkVIVqScP6Tr9PDuPdKwfleT7NqJxXKwPl+
TyZoy8nJwfmvDic1nFgrD+dP53jdt3C9ApzfOv+XwbtKRTjf/W3Ud6VQJTj/
xqEUxigdZTh/a8eROIWvCH4aa+mDc+dU4PzkouqtPLNU4Xz9dO1zPolqcP55
IR3uUkt1OH/3uqbZOswacH41o1bAmbsIPtedKo+8LZpw/tNlilPm12jB+VM0
JFl2hmrD+RNmpR1PVNBBhP+U2HM8zxH8Hy5Lf87fpwvnP37qVHGoXQ8RP7aG
0mcT9eH8a4d2dWwWM4DzD6/auLSxCsGXenfhyuFnCP50zdlrz3obwvl1B3pn
eO9E8H2kQ5eeUjGC8x3yjkcLdiL482SSVM58RfCVDy+f5hdtDOf36x7SurQP
wU/9zHLxpJYJnJ+48ZNCZz+CP+EST++R4wj+vs9qP///R/AB5iRyGg==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7EvO1bS1mPy0hwo4NKpvsfkn+APK53Cwe590
mGPtNyhfwGHD9iW1f2Z/h/JFHCB0JJSWcPiybFnhh3yYehmHK/FVpixxMPMV
HAS3dpbeUIaZr+Sw40djp+B7mHkqDqc6jtxJ1ofx1Ryc5oWpvLgCU6/hsC7e
K92vF2aelkPuyUX8JhIw9ToObQK/3HPvwfh6DqabvvdqW8PUGzgICWxu2egC
M8/Qwfnvq6lL7WDqjRzYkzerbAmHqTd2eBW1Smz2QZi8iQOHfbq+QT9M3tTh
gVf6Sy6PH/YAnnJejA==
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-1., -8.457438193946766},
  DisplayFunction->Identity,
  PlotRange->{{-1., 23.}, {-8.457438193946766, 109.85976710854062`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7CG0yAGogAMqnwONL4DGF4HwG8Kh4hJo8jJo
fAU0vhIaXwWNr4bG10Dja6HxddD4emh8AzS+IRrfCI1vjMY3QeObwvkApsAc
YA==
          "]], {{
           LineBox[{{1., 16.}, {1., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {1., 16.}], 
             Offset[{-1.5, 0}, {1., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {1., -26.}], 
             Offset[{-1.5, 0}, {1., -26.}]}]}, {
           LineBox[{{2., 16.}, {2., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {2., 16.}], 
             Offset[{-1.5, 0}, {2., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {2., -26.}], 
             Offset[{-1.5, 0}, {2., -26.}]}]}, {
           LineBox[{{3., 16.}, {3., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {3., 16.}], 
             Offset[{-1.5, 0}, {3., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {3., -26.}], 
             Offset[{-1.5, 0}, {3., -26.}]}]}, {
           LineBox[{{4., 16.}, {4., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {4., 16.}], 
             Offset[{-1.5, 0}, {4., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {4., -26.}], 
             Offset[{-1.5, 0}, {4., -26.}]}]}, {
           LineBox[{{5., 115.}, {5., 73.}}], 
           LineBox[{
             Offset[{1.5, 0}, {5., 115.}], 
             Offset[{-1.5, 0}, {5., 115.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {5., 73.}], 
             Offset[{-1.5, 0}, {5., 73.}]}]}, {
           LineBox[{{6., 16.}, {6., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {6., 16.}], 
             Offset[{-1.5, 0}, {6., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {6., -26.}], 
             Offset[{-1.5, 0}, {6., -26.}]}]}, {
           LineBox[{{7., 16.}, {7., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {7., 16.}], 
             Offset[{-1.5, 0}, {7., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {7., -26.}], 
             Offset[{-1.5, 0}, {7., -26.}]}]}, {
           LineBox[{{8., 16.}, {8., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {8., 16.}], 
             Offset[{-1.5, 0}, {8., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {8., -26.}], 
             Offset[{-1.5, 0}, {8., -26.}]}]}, {
           LineBox[{{9., 16.}, {9., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9., 16.}], 
             Offset[{-1.5, 0}, {9., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9., -26.}], 
             Offset[{-1.5, 0}, {9., -26.}]}]}, {
           LineBox[{{10., 16.}, {10., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10., 16.}], 
             Offset[{-1.5, 0}, {10., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10., -26.}], 
             Offset[{-1.5, 0}, {10., -26.}]}]}, {
           LineBox[{{11., 16.}, {11., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11., 16.}], 
             Offset[{-1.5, 0}, {11., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11., -26.}], 
             Offset[{-1.5, 0}, {11., -26.}]}]}, {
           LineBox[{{12., 16.}, {12., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {12., 16.}], 
             Offset[{-1.5, 0}, {12., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {12., -26.}], 
             Offset[{-1.5, 0}, {12., -26.}]}]}, {
           LineBox[{{13., 16.}, {13., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {13., 16.}], 
             Offset[{-1.5, 0}, {13., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {13., -26.}], 
             Offset[{-1.5, 0}, {13., -26.}]}]}, {
           LineBox[{{14., 16.}, {14., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {14., 16.}], 
             Offset[{-1.5, 0}, {14., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {14., -26.}], 
             Offset[{-1.5, 0}, {14., -26.}]}]}, {
           LineBox[{{15., 16.}, {15., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {15., 16.}], 
             Offset[{-1.5, 0}, {15., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {15., -26.}], 
             Offset[{-1.5, 0}, {15., -26.}]}]}, {
           LineBox[{{16., 16.}, {16., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {16., 16.}], 
             Offset[{-1.5, 0}, {16., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {16., -26.}], 
             Offset[{-1.5, 0}, {16., -26.}]}]}, {
           LineBox[{{17., 16.}, {17., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {17., 16.}], 
             Offset[{-1.5, 0}, {17., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {17., -26.}], 
             Offset[{-1.5, 0}, {17., -26.}]}]}, {
           LineBox[{{18., 16.}, {18., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {18., 16.}], 
             Offset[{-1.5, 0}, {18., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {18., -26.}], 
             Offset[{-1.5, 0}, {18., -26.}]}]}, {
           LineBox[{{19., 16.}, {19., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {19., 16.}], 
             Offset[{-1.5, 0}, {19., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {19., -26.}], 
             Offset[{-1.5, 0}, {19., -26.}]}]}, {
           LineBox[{{20., 16.}, {20., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {20., 16.}], 
             Offset[{-1.5, 0}, {20., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {20., -26.}], 
             Offset[{-1.5, 0}, {20., -26.}]}]}, {
           LineBox[{{21., 16.}, {21., -26.}}], 
           LineBox[{
             Offset[{1.5, 0}, {21., 16.}], 
             Offset[{-1.5, 0}, {21., 16.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {21., -26.}], 
             Offset[{-1.5, 0}, {21., -26.}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {1., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.452004026546875*^9, 3.452004146125*^9, 
  3.4521730319375*^9, 3.45226505946875*^9, 3.452265145390625*^9, 
  3.514552213282625*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"During evaluation of In[24]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", "6.201354226747259`"}], ",", 
   RowBox[{"PseudoErrorY", "\[Rule]", "21.492052246289386`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "9238.166195144653`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "20"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452004026578125*^9, 3.452004146140625*^9, 
  3.452173031953125*^9, 3.4522650595*^9, 3.45226514540625*^9, 
  3.51455221329825*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[24]="]
}, Open  ]],

Cell[TextData[{
 "This result shows clearly that the least-square technique used by ",
 StyleBox["LinearFit", "MR"],
 " is not robust and the answer is exactly the same as produced above by ",
 StyleBox["Mean", "MR"],
 ". However, using ",
 StyleBox["RobustCurveFit", "MR"],
 " gives a robust answer."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustCurveFit", "[", 
  RowBox[{"mydata", ",", 
   RowBox[{"{", "0", "}"}], ",", "a"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[25]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQLXVkQi4Dwwf7Uxd4V67Q/2GfFP1nyV/lz3D+yk/p
d365f4Pzb1w/kmsm/hfO3zL/hU/ZTkYHGH/7pymFUddZ4HwuxRb1+xYccH6f
wGmthQnccH7S7ZD9zGf44PydSU4btwsLwvlRFm2aPUuE4PxF1dmvDMJF4Pym
+X8Cv7wRhfMZLj9w2FMlDuerlaRVhGhJwvlPvk4P494rBed7Pc2qnVQoA+f7
PZmgLScnB+e/OpzUcGKtPJw/neN138L1CnB+6/xfBu8qFeF897dR35VCleD8
G4dSGKN0lOH8rR1H4hS+IvhprKUPzp1TgfOTi6q38sxShfP107XP+SSqwfnn
hXS4Sy3V4fzd65pm6zBrwPnVjFoBZ+4i+Fx3qjzytmjC+U+XKU6ZX6MF50/R
kGTZGaoN50+YlXY8UUEHEf5TYs/xPEfwf7gs/Tl/ny6c//ipU8Whdj1E/Nga
Sp9N1Ifzrx3a1bFZzADOP7xq49LGKgRf6t2FK4efIfjTNWevPettCOfXHeid
4b0TwfeRDl16SsUIznfIOx4t2Ingz5NJUjnzFcFXPrx8ml+0MZzfr3tI69I+
BD/1M8vFk1omcH7ixk8Knf0I/oRLPL1HjiP4+z6r/fz/H8EHAIKKnV4=
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7EvO1bS1mPy0hwo4NKpvsfkn+APK53Cwe590
mGPtNyhfwGHD9iW1f2Z/h/JFHCB0JJSWcPiybFnhh3yYehmHK/FVpixxMPMV
HAS3dpbeUIaZr+Sw40djp+B7mHkqDqc6jtxJ1ofx1Ryc5oWpvLgCU6/hsC7e
K92vF2aelkPuyUX8JhIw9ToObQK/3HPvwfh6DqabvvdqW8PUGzgICWxu2egC
M8/Qwfnvq6lL7WDqjRzYkzerbAmHqTd2eBW1Smz2QZi8iQOHfbq+QT9M3tTh
gVf6Sy6PH/YAnnJejA==
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-1., -8.457438193946766},
  DisplayFunction->Identity,
  PlotRange->{{-1., 23.}, {-8.457438193946766, 109.85976710854062`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7Bfcen9tr+8Ge6iAA4PnysicVbX7IVwOhwMS
66L+ae6A8gUcHJSVc1tLF0H5Ig57T0THOs6PcIDwJRwS5haVNf/eDZWXcVjw
4cSxHU83Qc1XcGAoMudIX5AOlVdyaGD59ui46gQoX8WBoWHKER+WDVC+mgPD
esnM98uXQPVrODi8O/E4+tZWKF/L4ULphmme5Ruh6nUcGAQ/uNzwmwLl6zls
EJvnp7cD5j8DBwYP+6W3OUqhfEOHBwVRKUkK66DqjRwuKEfu2t4Ac6+xA0PF
3RkpzbOh8iYODx5PS634AbPf1IFBrCrSIanCHgCmk1/Q
         "]]}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {1., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0.5}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Print",
 CellChangeTimes->{3.45200403071875*^9, 3.45200414621875*^9, 3.452173032*^9, 
  3.452265062953125*^9, 3.452265145453125*^9, 3.51455221336075*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"During evaluation of In[25]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", "1.5116354564352599`"}], ",", 
   RowBox[{"PseudoChiSquared", "\[Rule]", "0.058532673698009734`"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "19"}]}], "}"}]], "Output",
 CellChangeTimes->{3.45200403075*^9, 3.452004146234375*^9, 3.452173032*^9, 
  3.45226506296875*^9, 3.452265145453125*^9, 3.514552213376375*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[25]="]
}, Open  ]],

Cell["\<\
In fact, this result is almost exactly the average of all the numbers except \
the one outlier.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", 
  RowBox[{"Drop", "[", 
   RowBox[{"mydata", ",", 
    RowBox[{"{", "5", "}"}]}], "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"In[26]:="],

Cell[BoxData["1.5114219380846223`"], "Output",
 CellChangeTimes->{3.452004035109375*^9, 3.45200414625*^9, 
  3.45217303203125*^9, 3.452265066421875*^9, 3.452265145484375*^9, 
  3.514552213407625*^9},
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"},
 CellLabel->"Out[26]="]
}, Open  ]],

Cell[TextData[{
 "The result of ",
 StyleBox["RobustCurveFit", "MR"],
 " is also within 0.3% of the median of the full data set."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.2 Details", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input",
 CellLabel->"In[27]:="],

Cell[CellGroupData[{

Cell["7.2.1 RobustCurveFit", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "The algorithm used by ",
 StyleBox["RobustCurveFit", "MR"],
 " is described in Section 7.1.2. The function has the following options."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Options", "[", "RobustCurveFit", "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "RobustCurveFit--ReturnErrors option", 
   "RobustCurveFit--ReturnFunction option", "RobustCurveFit--ShowFit option", 
   "RobustCurveFit--ShowProgress option", 
   "RobustCurveFit--UseSignificantFigures option"},
 CellLabel->"In[28]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"MaximumIterations", "\[Rule]", "5"}]},
     {
      RowBox[{"ReturnErrors", "\[Rule]", "False"}]},
     {
      RowBox[{"ReturnFunction", "\[Rule]", "False"}]},
     {
      RowBox[{"ShowFit", "\[Rule]", "True"}]},
     {
      RowBox[{"EDAShowProgress", "\[Rule]", "False"}]},
     {
      RowBox[{"UseSignificantFigures", "\[Rule]", "False"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.452004044078125*^9, 3.45200414628125*^9, 
  3.452173032046875*^9, 3.4522651455*^9, 3.514552213438875*^9},
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "RobustCurveFit--ReturnErrors option", 
   "RobustCurveFit--ReturnFunction option", "RobustCurveFit--ShowFit option", 
   "RobustCurveFit--ShowProgress option", 
   "RobustCurveFit--UseSignificantFigures option"},
 CellLabel->"Out[28]//TableForm="]
}, Open  ]],

Cell[TextData[{
 "The ",
 StyleBox["LinearFit", "MR"],
 " function discussed in Chapter 4 has these same options with the same \
meanings."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "RobustCurveFit--ReturnErrors option"}],

Cell[TextData[{
 "Experience has shown that a ",
 StyleBox["MaximumIterations", "MR"],
 " of ",
 StyleBox["5", "MR"],
 " should almost always be sufficient for ",
 StyleBox["RobustCurveFit", "MR"],
 StyleBox[", ",
  FontWeight->"Bold"],
 "but the option allows the number to be increased if necessary."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "MaximumIterations--option to RobustCurveFit"}],

Cell[TextData[{
 "The ",
 StyleBox["ReturnErrors", "MR"],
 " option, if set to ",
 StyleBox["True", "MR"],
 ", causes the routine to attempt to estimate and return errors in the fitted \
parameters."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustCurveFit", "[", 
  RowBox[{"CThDatingData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
   RowBox[{"ReturnErrors", "\[Rule]", "True"}], ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"},
 CellLabel->"In[29]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1323.4343111072494`"}], ",", "0.9744293301779184`"}], 
     "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.3000538857698479`", ",", "0.00008185709957999356`"}], "}"}]}],
    ",", 
   RowBox[{"PseudoChiSquared", "\[Rule]", "1.2963641584014222`*^6"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "15"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452004048234375*^9, 3.4520041463125*^9, 
  3.45217303209375*^9, 3.452265145546875*^9, 3.514552213470125*^9},
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"},
 CellLabel->"Out[29]="]
}, Open  ]],

Cell["\<\
However, these numbers should be taken with a \[OpenCurlyDoubleQuote]grain of \
salt\[CloseCurlyDoubleQuote] since the errors in the dependent variable are \
fakes: they are generated from the bi-square weighted residuals.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"}],

Cell[TextData[{
 "Nonetheless, to have these errors in the fit parameters adjust the \
significant figures in the answer, the ",
 StyleBox["UseSignificantFigures", "MR"],
 " option may be used."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustCurveFit", "[", 
  RowBox[{"CThDatingData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
   RowBox[{"ReturnErrors", "\[Rule]", "True"}], ",", 
   RowBox[{"UseSignificantFigures", "\[Rule]", "True"}], ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"},
 CellLabel->"In[30]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1323.4`"}], ",", "1.`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.300054`", ",", "0.000082`"}], "}"}]}], ",", 
   RowBox[{"PseudoChiSquared", "\[Rule]", "1.2963567529809969`*^6"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "15"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452004053203125*^9, 3.45200414634375*^9, 
  3.452173032125*^9, 3.452265145578125*^9, 3.514552213501375*^9},
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"},
 CellLabel->"Out[30]="]
}, Open  ]],

Cell[TextData[{
 "To have ",
 StyleBox["RobustCurveFit", "MR"],
 " return a function of an independent variable, say ",
 StyleBox["c14", "MR",
  FontSlant->"Italic"],
 ", instead of a list of rules, the ",
 StyleBox["ReturnFunction", "MR"],
 " option may be used."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustCurveFit", "[", 
  RowBox[{"CThDatingData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "c14", ",", 
   RowBox[{"ReturnFunction", "\[Rule]", "True"}], ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit"},
 CellLabel->"In[31]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1323.4343111072494`"}], "+", 
   RowBox[{"0.3000538857698479`", " ", "c14"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452004057375*^9, 3.452004146375*^9, 3.45217303215625*^9, 
  3.452265145609375*^9, 3.51455221354825*^9},
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit"},
 CellLabel->"Out[31]="]
}, Open  ]],

Cell[TextData[{
 "The EDAS",
 StyleBox["howProgress", "MR"],
 " option enables monitoring of the progress of the function."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"RobustCurveFit", "[", 
   RowBox[{"CThDatingData", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
    RowBox[{"EDAShowProgress", "\[Rule]", "True"}], ",", 
    RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "19", "\[InvisibleSpace]", "\<\" data points, each with \"\>", 
   "\[InvisibleSpace]", "3", "\[InvisibleSpace]", "\<\" variables.\"\>"}],
  SequenceForm[19, " data points, each with ", 3, " variables."],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData["\<\"Note: the data is sorted by independent\"\>"], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData["\<\"  variable.\"\>"], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "19", "\[InvisibleSpace]", "\<\" data points, each with \"\>", 
   "\[InvisibleSpace]", "3", "\[InvisibleSpace]", "\<\" variables.\"\>"}],
  SequenceForm[19, " data points, each with ", 3, " variables."],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" using singular value decomposition.\"\>"}],
  SequenceForm["Iteration ", 1, " using singular value decomposition."],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Chi-squared = \"\>", "\[InvisibleSpace]", 
   "2.0669780005150181`*^6"}],
  SequenceForm["  Chi-squared = ", 2.0669780005150181`*^6],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Parameter values: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1174.7237530524262`"}], ",", "0.2841871754907429`"}], 
    "}"}]}],
  SequenceForm[
  "  Parameter values: ", {-1174.7237530524262`, 0.2841871754907429}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" ChiSquared = \"\>", "\[InvisibleSpace]", 
   "2.0669780005150181`*^6"}],
  SequenceForm["Iteration: ", 1, " ChiSquared = ", 2.0669780005150181`*^6],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Suppressed data points at: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"{", "19", "}"}], "}"}]}],
  SequenceForm["  Suppressed data points at: ", {{19}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.5145522135795*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", "0", "]"}], ",", 
     RowBox[{"a", "[", "1", "]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1174.7237530524262`"}], ",", "0.2841871754907429`"}], 
    "}"}]}],
  SequenceForm["  ", {
    EDA`ErrorPropagation`a[0], 
    EDA`ErrorPropagation`a[1]}, " = ", {-1174.7237530524262`, 
   0.2841871754907429}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "19", "\[InvisibleSpace]", "\<\" data points, each with \"\>", 
   "\[InvisibleSpace]", "3", "\[InvisibleSpace]", "\<\" variables.\"\>"}],
  SequenceForm[19, " data points, each with ", 3, " variables."],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" using singular value decomposition.\"\>"}],
  SequenceForm["Iteration ", 1, " using singular value decomposition."],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Chi-squared = \"\>", "\[InvisibleSpace]", 
   "1.602503946369415`*^6"}],
  SequenceForm["  Chi-squared = ", 1.602503946369415*^6],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Parameter values: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1306.269078701845`"}], ",", "0.2980822087745854`"}], 
    "}"}]}],
  SequenceForm[
  "  Parameter values: ", {-1306.269078701845, 0.2980822087745854}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "2", 
   "\[InvisibleSpace]", "\<\" ChiSquared = \"\>", "\[InvisibleSpace]", 
   "1.602503946369415`*^6"}],
  SequenceForm["Iteration: ", 2, " ChiSquared = ", 1.602503946369415*^6],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Suppressed data points at: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "17", "}"}], ",", 
     RowBox[{"{", "19", "}"}]}], "}"}]}],
  SequenceForm["  Suppressed data points at: ", {{17}, {19}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", "0", "]"}], ",", 
     RowBox[{"a", "[", "1", "]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1306.269078701845`"}], ",", "0.2980822087745854`"}], 
    "}"}]}],
  SequenceForm["  ", {
    EDA`ErrorPropagation`a[0], 
    EDA`ErrorPropagation`a[1]}, " = ", {-1306.269078701845, 
   0.2980822087745854}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
  "19", "\[InvisibleSpace]", "\<\" data points, each with \"\>", 
   "\[InvisibleSpace]", "3", "\[InvisibleSpace]", "\<\" variables.\"\>"}],
  SequenceForm[19, " data points, each with ", 3, " variables."],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" using singular value decomposition.\"\>"}],
  SequenceForm["Iteration ", 1, " using singular value decomposition."],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Chi-squared = \"\>", "\[InvisibleSpace]", 
   "1.544418283933878`*^6"}],
  SequenceForm["  Chi-squared = ", 1.544418283933878*^6],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Parameter values: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1323.4343111072494`"}], ",", "0.3000538857698479`"}], 
    "}"}]}],
  SequenceForm[
  "  Parameter values: ", {-1323.4343111072494`, 0.3000538857698479}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.514552213595125*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Iteration: \"\>", "\[InvisibleSpace]", "3", 
   "\[InvisibleSpace]", "\<\" ChiSquared = \"\>", "\[InvisibleSpace]", 
   "1.544418283933878`*^6"}],
  SequenceForm["Iteration: ", 3, " ChiSquared = ", 1.544418283933878*^6],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.51455221361075*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  Suppressed data points at: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "17", "}"}], ",", 
     RowBox[{"{", "19", "}"}]}], "}"}]}],
  SequenceForm["  Suppressed data points at: ", {{17}, {19}}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.51455221361075*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "[", "0", "]"}], ",", 
     RowBox[{"a", "[", "1", "]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1323.4343111072494`"}], ",", "0.3000538857698479`"}], 
    "}"}]}],
  SequenceForm["  ", {
    EDA`ErrorPropagation`a[0], 
    EDA`ErrorPropagation`a[1]}, " = ", {-1323.4343111072494`, 
   0.3000538857698479}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004060515625*^9, 3.45200414640625*^9, 
  3.452173032171875*^9, 3.452265145625*^9, 3.51455221361075*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"During evaluation of In[32]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"-", "1323.4343111072494`"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "0.3000538857698479`"}], ",", 
   RowBox[{"PseudoChiSquared", "\[Rule]", "1.2963641584014222`*^6"}], ",", 
   RowBox[{"DegreesOfFreedom", "\[Rule]", "15"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452004060828125*^9, 3.452004146453125*^9, 
  3.45217303221875*^9, 3.45226514565625*^9, 3.51455221361075*^9},
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"},
 CellLabel->"Out[32]="]
}, Open  ]],

Cell[TextData[{
 "Finally, as already seen in the examples above, setting ",
 StyleBox["ShowFit", "MR"],
 " to ",
 StyleBox["False", "MR"],
 " suppresses the graph of the results. This last example has stored the fit \
parameters in ",
 StyleBox["result", "MO"],
 ". The graph can be generated at a later time with the ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["ShowLinearFit", "MR"],
 StyleBox[", ",
  FontWeight->"Bold"],
 "which is discussed in Section 4.5.2."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowLinearFit", "[", 
  RowBox[{"CThDatingData", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", "result"}], "]"}]], "Input",\

 CellChangeTimes->{3.452004068625*^9},
 AspectRatioFixed->True,
 CellLabel->"In[33]:="],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBgQJ+/SFib1JlAgAAACcAAAACAAAAmV22GwAAuUCgUQ8VSaeCQE6BFO5a
BrlAlhLgJ4q2gkACpXLAtQy5QIrTsDrLxYJAauwuZWsZuUByVVJgTeSCQDp7
p67WMrlAQlmVq1Ehg0DamJhBrWW5QN5gG0Jam4NAHNR6Z1rLuUAgcCdva4+E
QKBKP7O0lrpAoI4/yY13hkCYiUMEn0+8QHDX4M3wmYpAyqznV1HrvUAMhVSf
MHaOQMjYdEDwfr9A5rxn34YfkUBcqz5xYprAQC69XZcELZNAcdySw7BmwUDc
77y1cBeVQH62pPIZRMJAcqhU/Osql0DyFCtseR3DQJoE8Om1NJlAg2UB5zzo
w0Aqk/Q9bhubQAxflT4bxMRAoKcxujUrnUCySnmXXZHFQHzu15zrF59AvrrR
OpZaxkB07EATeH2gQMPT57rpNMdAoCQy7IGDoUDl3k08oQDIQP71V/gCeKJA
AJNxmnPdyEBRCpqYC4GjQIHLCUM8tslAbPBdjDuFpEAf9vHsaIDKQLpvVrPi
d6VAtcmXc7Bby0D8MWtuEX+mQGiPjftbKMxAco20XLd0p0AU/kBgIgbNQNor
Gt/kfqhAJvFoD9/fzUAMnAG1OYSpQFXW4L//qs5AcqUdvgV4qkB9ZBZNO4fP
QMzxVVtZgKtAYfLNbW0q0EBY18IrJHesQLb0Slo4j9BAro6xTxZprUCHyya1
kPzQQPSIvAeQb65AZ5uqEJti0UBwHPzygGSvQMM/jdoy0dFAcPkrufw2sEBS
JqrJxT3SQIzNmqJMubBA8AVvuQqj0kBC7qMl2DKxQAq6khfdENNAcjC7cqe2
sUDwOJA2ejzTQAAAAAAA67FAHNgygA==
      "]]}}, {{}, 
    {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUhAkQOmUfhP7QAqFZDkDoB1D5tQchtEMr
hI45BKEzZkHoXYchtMd0CK0C5XPMhtByRyD0gnkQ2usohFZYBKFVj0PoF3Mg
NA+U7zAflf8Hqj7rBNR9CyD0tjMQesVqCC1yDkK7QPgO6y9A+BvmQmh/KL9n
HYQ+dhFCK62F0DW3ILTOKgcADig18A==
      
      "]], {{LineBox[{{6400., 1170.}, {6400., 950.}}], 
       LineBox[{
        Offset[{1.5, 0}, {6400., 1170.}], Offset[{-1.5, 0}, {6400., 1170.}]}],
        LineBox[{
        Offset[{1.5, 0}, {6400., 950.}], 
         Offset[{-1.5, 0}, {6400., 950.}]}]}, {
       LineBox[{{7780., 780.}, {7780., 560.}}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 780.}], Offset[{-1.5, 0}, {7780., 780.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {7780., 560.}], 
         Offset[{-1.5, 0}, {7780., 560.}]}]}, {
       LineBox[{{8200., 1190.}, {8200., 970.}}], 
       LineBox[{
        Offset[{1.5, 0}, {8200., 1190.}], Offset[{-1.5, 0}, {8200., 1190.}]}],
        LineBox[{
        Offset[{1.5, 0}, {8200., 970.}], 
         Offset[{-1.5, 0}, {8200., 970.}]}]}, {
       LineBox[{{9050., 810.}, {9050., 550.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 810.}], Offset[{-1.5, 0}, {9050., 810.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {9050., 550.}], 
         Offset[{-1.5, 0}, {9050., 550.}]}]}, {
       LineBox[{{9400., 1800.}, {9400., 1580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9400., 1800.}], Offset[{-1.5, 0}, {9400., 1800.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9400., 1580.}], 
         Offset[{-1.5, 0}, {9400., 1580.}]}]}, {
       LineBox[{{10100., 1590.}, {10100., 1390.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1590.}], 
         Offset[{-1.5, 0}, {10100., 1590.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10100., 1390.}], 
         Offset[{-1.5, 0}, {10100., 1390.}]}]}, {
       LineBox[{{9800., 1840.}, {9800., 1620.}}], 
       LineBox[{
        Offset[{1.5, 0}, {9800., 1840.}], Offset[{-1.5, 0}, {9800., 1840.}]}],
        LineBox[{
        Offset[{1.5, 0}, {9800., 1620.}], 
         Offset[{-1.5, 0}, {9800., 1620.}]}]}, {
       LineBox[{{10300., 2070.}, {10300., 1850.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 2070.}], 
         Offset[{-1.5, 0}, {10300., 2070.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10300., 1850.}], 
         Offset[{-1.5, 0}, {10300., 1850.}]}]}, {
       LineBox[{{10900., 2430.}, {10900., 2210.}}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2430.}], 
         Offset[{-1.5, 0}, {10900., 2430.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {10900., 2210.}], 
         Offset[{-1.5, 0}, {10900., 2210.}]}]}, {
       LineBox[{{11850., 1980.}, {11850., 1720.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1980.}], 
         Offset[{-1.5, 0}, {11850., 1980.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11850., 1720.}], 
         Offset[{-1.5, 0}, {11850., 1720.}]}]}, {
       LineBox[{{11800., 2120.}, {11800., 1880.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2120.}], 
         Offset[{-1.5, 0}, {11800., 2120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 1880.}], 
         Offset[{-1.5, 0}, {11800., 1880.}]}]}, {
       LineBox[{{11800., 2640.}, {11800., 2220.}}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2640.}], 
         Offset[{-1.5, 0}, {11800., 2640.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {11800., 2220.}], 
         Offset[{-1.5, 0}, {11800., 2220.}]}]}, {
       LineBox[{{12500., 2290.}, {12500., 2030.}}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2290.}], 
         Offset[{-1.5, 0}, {12500., 2290.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {12500., 2030.}], 
         Offset[{-1.5, 0}, {12500., 2030.}]}]}, {
       LineBox[{{14700., 3750.}, {14700., 3330.}}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3750.}], 
         Offset[{-1.5, 0}, {14700., 3750.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {14700., 3330.}], 
         Offset[{-1.5, 0}, {14700., 3330.}]}]}, {
       LineBox[{{15400., 3730.}, {15400., 3250.}}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3730.}], 
         Offset[{-1.5, 0}, {15400., 3730.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {15400., 3250.}], 
         Offset[{-1.5, 0}, {15400., 3250.}]}]}, {
       LineBox[{{17085., 2160.}, {17085., 1640.}}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 2160.}], 
         Offset[{-1.5, 0}, {17085., 2160.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {17085., 1640.}], 
         Offset[{-1.5, 0}, {17085., 1640.}]}]}, {
       LineBox[{{16700., 4220.}, {16700., 3600.}}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 4220.}], 
         Offset[{-1.5, 0}, {16700., 4220.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {16700., 3600.}], 
         Offset[{-1.5, 0}, {16700., 3600.}]}]}, {
       LineBox[{{18200., 3939.}, {18200., 3519.}}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3939.}], 
         Offset[{-1.5, 0}, {18200., 3939.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {18200., 3519.}], 
         Offset[{-1.5, 0}, {18200., 3519.}]}]}, {
       LineBox[{{27120., 4120.}, {27120., 2580.}}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 4120.}], 
         Offset[{-1.5, 0}, {27120., 4120.}]}], 
       LineBox[{
        Offset[{1.5, 0}, {27120., 2580.}], 
         Offset[{-1.5, 0}, {27120., 2580.}]}]}}}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{4328.000000000001, 183.},
  DisplayFunction->Identity,
  PlotRange->{{4328.000000000001, 29192.000000000004`}, {183., 4587.}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic},
  Prolog->InsetBox[
    GraphicsBox[{{{}, {}, {
        Hue[0.67, 0.6, 0.6], {
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQDQE7HcDUgRoInbIPQjuUHgDTLAcgfAY/CH/tQQjf
oA3CjzkE1Z8OoVUOQ+iGaAi9C8bPhqiXO4Kq3usohFYoh9A8x1HVw/gOWRBa
Fco/UA6RzzoB4T8ogPC3nYGaB/WPyDlU+/wvwMwH0w7rofwNcyH6j12E8BdU
Qvg1tyB8jtUHAANMNzc=
          "]], {{
           LineBox[{{6400., 570.}, {6400., 350.}}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 570.}], 
             Offset[{-1.5, 0}, {6400., 570.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {6400., 350.}], 
             Offset[{-1.5, 0}, {6400., 350.}]}]}, {
           LineBox[{{7780., -230.}, {7780., -450.}}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -230.}], 
             Offset[{-1.5, 0}, {7780., -230.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {7780., -450.}], 
             Offset[{-1.5, 0}, {7780., -450.}]}]}, {
           LineBox[{{8200., 50.}, {8200., -170.}}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., 50.}], 
             Offset[{-1.5, 0}, {8200., 50.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {8200., -170.}], 
             Offset[{-1.5, 0}, {8200., -170.}]}]}, {
           LineBox[{{9050., -580.}, {9050., -840.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -580.}], 
             Offset[{-1.5, 0}, {9050., -580.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9050., -840.}], 
             Offset[{-1.5, 0}, {9050., -840.}]}]}, {
           LineBox[{{9400., 300.}, {9400., 80.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 300.}], 
             Offset[{-1.5, 0}, {9400., 300.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9400., 80.}], 
             Offset[{-1.5, 0}, {9400., 80.}]}]}, {
           LineBox[{{9800., 220.}, {9800., 0.}}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 220.}], 
             Offset[{-1.5, 0}, {9800., 220.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {9800., 0.}], 
             Offset[{-1.5, 0}, {9800., 0.}]}]}, {
           LineBox[{{10100., -120.}, {10100., -320.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -120.}], 
             Offset[{-1.5, 0}, {10100., -120.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10100., -320.}], 
             Offset[{-1.5, 0}, {10100., -320.}]}]}, {
           LineBox[{{10300., 300.}, {10300., 80.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 300.}], 
             Offset[{-1.5, 0}, {10300., 300.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10300., 80.}], 
             Offset[{-1.5, 0}, {10300., 80.}]}]}, {
           LineBox[{{10900., 480.}, {10900., 260.}}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 480.}], 
             Offset[{-1.5, 0}, {10900., 480.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {10900., 260.}], 
             Offset[{-1.5, 0}, {10900., 260.}]}]}, {
           LineBox[{{11800., -100.}, {11800., -340.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -100.}], 
             Offset[{-1.5, 0}, {11800., -100.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., -340.}], 
             Offset[{-1.5, 0}, {11800., -340.}]}]}, {
           LineBox[{{11800., 420.}, {11800., 0.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 420.}], 
             Offset[{-1.5, 0}, {11800., 420.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11800., 0.}], 
             Offset[{-1.5, 0}, {11800., 0.}]}]}, {
           LineBox[{{11850., -250.}, {11850., -510.}}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -250.}], 
             Offset[{-1.5, 0}, {11850., -250.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {11850., -510.}], 
             Offset[{-1.5, 0}, {11850., -510.}]}]}, {
           LineBox[{{12500., -140.}, {12500., -400.}}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -140.}], 
             Offset[{-1.5, 0}, {12500., -140.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {12500., -400.}], 
             Offset[{-1.5, 0}, {12500., -400.}]}]}, {
           LineBox[{{14700., 660.}, {14700., 240.}}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 660.}], 
             Offset[{-1.5, 0}, {14700., 660.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {14700., 240.}], 
             Offset[{-1.5, 0}, {14700., 240.}]}]}, {
           LineBox[{{15400., 430.}, {15400., -50.}}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., 430.}], 
             Offset[{-1.5, 0}, {15400., 430.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {15400., -50.}], 
             Offset[{-1.5, 0}, {15400., -50.}]}]}, {
           LineBox[{{16700., 530.}, {16700., -90.}}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., 530.}], 
             Offset[{-1.5, 0}, {16700., 530.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {16700., -90.}], 
             Offset[{-1.5, 0}, {16700., -90.}]}]}, {
           LineBox[{{17085., -1640.}, {17085., -2160.}}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -1640.}], 
             Offset[{-1.5, 0}, {17085., -1640.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {17085., -2160.}], 
             Offset[{-1.5, 0}, {17085., -2160.}]}]}, {
           LineBox[{{18200., -200.}, {18200., -620.}}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., -200.}], 
             Offset[{-1.5, 0}, {18200., -200.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {18200., -620.}], 
             Offset[{-1.5, 0}, {18200., -620.}]}]}, {
           LineBox[{{27120., -2690.}, {27120., -4230.}}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -2690.}], 
             Offset[{-1.5, 0}, {27120., -2690.}]}], 
           LineBox[{
             Offset[{1.5, 0}, {27120., -4230.}], 
             Offset[{-1.5, 0}, {27120., -4230.}]}]}}}}}}, {
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
      Axes -> {True, False}, AxesOrigin -> {6000., 0}, DisplayFunction :> 
      Identity, Frame -> True, FrameTicks -> {None, Automatic}, PlotLabel -> 
      FormBox["\"Residuals\"", TraditionalForm], PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {Automatic, Automatic}}], 
    Scaled[{0.5, 0}], {Left, Bottom}, 
    Scaled[{0.5, 0.5}]]]], "Output",
 CellChangeTimes->{3.45200406915625*^9, 3.4520041465625*^9, 
  3.45217303234375*^9, 3.45226514575*^9, 3.514552213751375*^9},
 CellLabel->"Out[33]="]
}, Open  ]],

Cell[TextData[{
 "An extensive discussion of the bi-square weighting method used by ",
 StyleBox["RobustCurveFit", "MR"],
 " can be found in Cleveland."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"RobustCurveFit--algorithm"],

Cell[TextData[{
 "Reference: William S. Cleveland,",
 StyleBox[" Visualizing Data ",
  FontSlant->"Italic"],
 "(AT&T Bell Laboratories, 1993), ",
 StyleBox["passim",
  FontSlant->"Italic"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"RobustCurveFit--algorithm"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.2.2 RobustLineFit", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "As mentioned in Section 7.1.1, the central ideal of ",
 StyleBox["RobustLineFit", "MR"],
 " is that it divides the data into three groups based on the value of the \
independent variable. We will call these groups ",
 StyleBox["Left",
  FontSlant->"Italic"],
 ", ",
 StyleBox["Middle",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["Right",
  FontSlant->"Italic"],
 ", respectively. Then the medians of the independent and dependent variables \
are calculated for each of the three groups, and a straight line is fit to \
the medians."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"RobustLineFit--algorithm"],

Cell[TextData[{
 "The three-group median method implemented by ",
 StyleBox["RobustLineFit", "MR"],
 " is derived from Tukey, although in its original form the algorithm is not \
always stable. Thus, here we use a modification with greatly improved \
stability due to Johnstone and Velleman."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"RobustLineFit--algorithm"],

Cell["References: ", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"RobustLineFit--algorithm"],

Cell[TextData[{
 "John W. Tukey, ",
 StyleBox["Exploratory Data Analysis ",
  FontSlant->"Italic"],
 "(John Wiley, 1970). "
}], "Text"],

Cell[TextData[{
 "I. Johnstone and P.F.Velleman, ",
 StyleBox["1981 Proc. Statistical Computation Section",
  FontSlant->"Italic"],
 ", American Statistics Assoc. (1982), p. 218."
}], "Text"],

Cell[TextData[{
 StyleBox["RobustLineFit", "MR"],
 " has the following options."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Options", "[", "RobustLineFit", "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellLabel->"In[34]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"Groups", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"MaximumIterations", "\[Rule]", "5"}]},
     {
      RowBox[{"ReturnFunction", "\[Rule]", "False"}]},
     {
      RowBox[{"ShowFit", "\[Rule]", "True"}]},
     {
      RowBox[{"EDAShowProgress", "\[Rule]", "False"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.452004074140625*^9, 3.452004146625*^9, 3.452173032375*^9,
   3.452265145765625*^9, 3.514552213782625*^9},
 CellLabel->"Out[34]//TableForm="]
}, Open  ]],

Cell[TextData[{
 "All of these options except ",
 StyleBox["Groups", "MR"],
 " have identical meanings to the same options for ",
 StyleBox["LinearFit", "MR"],
 " and ",
 StyleBox["RobustCurveFit", "MR"],
 ". We will discuss ",
 StyleBox["Groups", "MR"],
 " in a moment."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "Experience has shown that a ",
 StyleBox["MaximumIterations", "MR"],
 " of ",
 StyleBox["5", "MR"],
 " is almost always sufficient, although the option allows it to be increased \
if necessary."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--MaximumIterations option", 
   "MaximumIterations--option to RobustLineFit"}],

Cell[TextData[{
 "When ",
 StyleBox["ReturnFunction", "MR"],
 " is set to ",
 StyleBox["True", "MR"],
 ", the routine returns a function of the independent variable ",
 StyleBox["parameter, ",
  FontSlant->"Italic"],
 "instead of a set of rules for a parameter."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--ReturnFunction option", 
   "ReturnFunction--option to RobustLineFit"}],

Cell[TextData[{
 "Setting ",
 StyleBox["ShowFit", "MR"],
 " to ",
 StyleBox["False", "MR"],
 " suppresses the display of the results of the fit. The ",
 StyleBox["EDA",
  FontSlant->"Italic"],
 " function ",
 StyleBox["ShowLinearFit", "MR"],
 " can later display the result from ",
 StyleBox["RobustLineFit", "MR"],
 "."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}],

Cell[TextData[{
 "As usual, EDAS",
 StyleBox["howProgress", "MR"],
 " gives information about the progress of the fit. Below are some examples \
using this option."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--ShowProgress option", 
   "ShowProgress--option to RobustLineFit"}],

Cell[TextData[{
 "The ",
 StyleBox["Groups", "MR"],
 " option controls how the data are divided into three groups. When it is set \
to ",
 StyleBox["Automatic", "MR"],
 ", the groups are as close as possible to having the same number of data \
points in them. However, no two groups are allowed to have the same value of \
the independent variable in them, so some shifting is necessary. The \
following example illustrates this shifting."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\n", 
 RowBox[{"mydata", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"i", "+", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["i", "10"]}], ",", 
            FractionBox["i", "10"]}], "}"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]}]}], "Input",
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"In[35]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0.9205887049496724`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.0073012674916701`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1.0423765469668482`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1.8684627216507133`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2.0311337306945174`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3.227968800468476`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3.796556882688863`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4.090794639988413`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4.658207371341929`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4.939491602092639`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452004078578125*^9, 3.45200414665625*^9, 
  3.4521730324375*^9, 3.452265145796875*^9, 3.514552213813875*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"Out[36]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustLineFit", "[", 
  RowBox[{"mydata", ",", "a", ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}], ",", 
   RowBox[{"EDAShowProgress", "\[Rule]", "True"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"In[37]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial groups sizes: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "3"}], "}"}]}],
  SequenceForm["Initial groups sizes: ", {3, 4, 3}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004083921875*^9, 3.452004146671875*^9, 
  3.452173032453125*^9, 3.4522651458125*^9, 3.514552213845125*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[37]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Final group sizes are: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "4"}], "}"}]}],
  SequenceForm["Final group sizes are: ", {3, 3, 4}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004083921875*^9, 3.452004146671875*^9, 
  3.452173032453125*^9, 3.4522651458125*^9, 3.514552213845125*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[37]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"First slope estimate: \"\>", "\[InvisibleSpace]", 
   "0.9620570680495716`"}],
  SequenceForm["First slope estimate: ", 0.9620570680495716],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004083921875*^9, 3.452004146671875*^9, 
  3.452173032453125*^9, 3.4522651458125*^9, 3.514552213845125*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[37]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Second slope estimate: \"\>", "\[InvisibleSpace]", 
   "0.9602065642568803`"}],
  SequenceForm["Second slope estimate: ", 0.9602065642568803],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004083921875*^9, 3.452004146671875*^9, 
  3.452173032453125*^9, 3.4522651458125*^9, 3.514552213845125*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[37]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", "0.06463234297237874`"}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "0.9602065642568803`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "0.20182578705989293`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.452004083921875*^9, 3.452004146671875*^9, 
  3.452173032453125*^9, 3.4522651458125*^9, 3.514552213845125*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"Out[37]="]
}, Open  ]],

Cell[TextData[{
 "Although it tries to be smart about forming groups, occasionally ",
 StyleBox["RobustLineFit", "MR"],
 " fails."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2345", "]"}], ";"}], "\n", 
 RowBox[{"mydata", "=", 
  RowBox[{"Sort", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"RandomInteger", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ";", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"i", "+", 
         RowBox[{"RandomReal", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["i", "10"]}], ",", 
            FractionBox["i", "10"]}], "}"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "10"}], "}"}]}], "]"}], "]"}]}]}], "Input",
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"In[38]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1.0298329297876316`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1.8091453895533067`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2.8300878324409853`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3.9260835958739655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4.025235501984944`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4.094783164594273`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4.289005811259395`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4.345831979048921`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4.783289434650889`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5.329481416044127`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.452004089109375*^9, 3.452004146703125*^9, 
  3.452173032484375*^9, 3.45226514584375*^9, 3.514552213876375*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"Out[39]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustLineFit", "[", 
  RowBox[{"mydata", ",", "a", ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}], ",", 
   RowBox[{"EDAShowProgress", "\[Rule]", "True"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"In[40]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial groups sizes: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4", ",", "3"}], "}"}]}],
  SequenceForm["Initial groups sizes: ", {3, 4, 3}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004092265625*^9, 3.45200414671875*^9, 3.4521730325*^9,
   3.452265145875*^9, 3.514552213907625*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[40]:="],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RobustLineFit", "::", "unbalanced"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: the partitions are of size \[NoBreak]\\!\\({3, 5, \
2}\\)\[NoBreak], which is very unbalanced.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.452004092546875*^9, 3.452004147015625*^9, 
  3.452173032796875*^9, 3.45226514615625*^9, 3.514552213907625*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[40]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Final group sizes are: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "2"}], "}"}]}],
  SequenceForm["Final group sizes are: ", {3, 5, 2}],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004092265625*^9, 3.45200414671875*^9, 3.4521730325*^9,
   3.452265145875*^9, 3.51455221392325*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[40]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"First slope estimate: \"\>", "\[InvisibleSpace]", 
   "1.0824133452647335`"}],
  SequenceForm["First slope estimate: ", 1.0824133452647335`],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004092265625*^9, 3.45200414671875*^9, 3.4521730325*^9,
   3.452265145875*^9, 3.51455221392325*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[40]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Second slope estimate: \"\>", "\[InvisibleSpace]", 
   "1.0824133452647338`"}],
  SequenceForm["Second slope estimate: ", 1.0824133452647338`],
  Editable->False]], "Print",
 CellChangeTimes->{3.452004092265625*^9, 3.45200414671875*^9, 3.4521730325*^9,
   3.452265145875*^9, 3.51455221392325*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[40]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"-", "0.2696440477693258`"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "1.0824133452647335`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "0.3947338570958751`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.452004092609375*^9, 3.452004147015625*^9, 
  3.452173032796875*^9, 3.45226514615625*^9, 3.51455221392325*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"Out[40]="]
}, Open  ]],

Cell["\<\
We can force the program to use group sizes of 2, 2, and 6, respectively.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustLineFit", "[", 
  RowBox[{"mydata", ",", "a", ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}], ",", 
   RowBox[{"EDAShowProgress", "\[Rule]", "True"}], ",", 
   RowBox[{"Groups", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "6"}], "}"}]}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"In[41]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial groups sizes: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "6"}], "}"}]}],
  SequenceForm["Initial groups sizes: ", {2, 2, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4520041023125*^9, 3.45200414709375*^9, 
  3.452173032828125*^9, 3.4522651461875*^9, 3.5145522139545*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[41]:="],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RobustLineFit", "::", "unbalanced"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: the partitions are of size \[NoBreak]\\!\\({2, 1, \
7}\\)\[NoBreak], which is very unbalanced.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.4520041023125*^9, 3.45200414709375*^9, 
  3.452173032828125*^9, 3.4522651461875*^9, 3.5145522139545*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[41]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Final group sizes are: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "7"}], "}"}]}],
  SequenceForm["Final group sizes are: ", {2, 1, 7}],
  Editable->False]], "Print",
 CellChangeTimes->{3.4520041023125*^9, 3.45200414709375*^9, 
  3.452173032828125*^9, 3.4522651461875*^9, 3.5145522139545*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[41]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"First slope estimate: \"\>", "\[InvisibleSpace]", 
   "1.1478066606355704`"}],
  SequenceForm["First slope estimate: ", 1.1478066606355704`],
  Editable->False]], "Print",
 CellChangeTimes->{3.4520041023125*^9, 3.45200414709375*^9, 
  3.452173032828125*^9, 3.4522651461875*^9, 3.5145522139545*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[41]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Second slope estimate: \"\>", "\[InvisibleSpace]", 
   "1.0701176019695215`"}],
  SequenceForm["Second slope estimate: ", 1.0701176019695215`],
  Editable->False]], "Print",
 CellChangeTimes->{3.4520041023125*^9, 3.45200414709375*^9, 
  3.452173032828125*^9, 3.4522651461875*^9, 3.5145522139545*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[41]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"-", "0.22046107458847786`"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "1.0701176019695215`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "0.38476651456845373`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4520041023125*^9, 3.45200414709375*^9, 
  3.452173032828125*^9, 3.4522651461875*^9, 3.5145522139545*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"Out[41]="]
}, Open  ]],

Cell["\<\
Just specifying ratios of the group sizes has the same effect.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RobustLineFit", "[", 
  RowBox[{"mydata", ",", "a", ",", 
   RowBox[{"ShowFit", "\[Rule]", "False"}], ",", 
   RowBox[{"EDAShowProgress", "\[Rule]", "True"}], ",", 
   RowBox[{"Groups", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "3"}], "}"}]}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"In[42]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Initial groups sizes: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "6"}], "}"}]}],
  SequenceForm["Initial groups sizes: ", {2, 2, 6}],
  Editable->False]], "Print",
 CellChangeTimes->{3.45200410803125*^9, 3.452004147140625*^9, 
  3.452173032890625*^9, 3.45226514625*^9, 3.51455221398575*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[42]:="],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"RobustLineFit", "::", "unbalanced"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Warning: the partitions are of size \[NoBreak]\\!\\({2, 1, \
7}\\)\[NoBreak], which is very unbalanced.\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.45200410803125*^9, 3.452004147140625*^9, 
  3.452173032890625*^9, 3.45226514625*^9, 3.51455221398575*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[42]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Final group sizes are: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "7"}], "}"}]}],
  SequenceForm["Final group sizes are: ", {2, 1, 7}],
  Editable->False]], "Print",
 CellChangeTimes->{3.45200410803125*^9, 3.452004147140625*^9, 
  3.452173032890625*^9, 3.45226514625*^9, 3.51455221398575*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[42]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"First slope estimate: \"\>", "\[InvisibleSpace]", 
   "1.1478066606355704`"}],
  SequenceForm["First slope estimate: ", 1.1478066606355704`],
  Editable->False]], "Print",
 CellChangeTimes->{3.45200410803125*^9, 3.452004147140625*^9, 
  3.452173032890625*^9, 3.45226514625*^9, 3.51455221398575*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[42]:="],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Second slope estimate: \"\>", "\[InvisibleSpace]", 
   "1.0701176019695215`"}],
  SequenceForm["Second slope estimate: ", 1.0701176019695215`],
  Editable->False]], "Print",
 CellChangeTimes->{3.45200410803125*^9, 3.452004147140625*^9, 
  3.452173032890625*^9, 3.45226514625*^9, 3.51455221398575*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"During evaluation of In[42]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
    RowBox[{"-", "0.22046107458847786`"}]}], ",", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], "\[Rule]", "1.0701176019695215`"}], ",", 
   RowBox[{"SumOfSquares", "\[Rule]", "0.38476651456845373`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.452004108046875*^9, 3.452004147140625*^9, 
  3.452173032890625*^9, 3.45226514625*^9, 3.514552214001375*^9},
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"},
 
 CellLabel->"Out[42]="]
}, Open  ]],

Cell["\<\
Note the warning message generated above. As discussed below, there is a \
desire for groups of about the same size.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],

Cell[TextData[{
 "The ",
 StyleBox["Left",
  FontSlant->"Italic"],
 " and ",
 StyleBox["Right",
  FontSlant->"Italic"],
 " groups alone are used to determine the slope of the line. Thus, there is a \
balance needed between having a reasonable sized group and having these two \
groups fairly far away from each other. Once the slope has been determined \
through iteration, the intercept is calculated from the residuals and the \
median of the independent variable of the ",
 StyleBox["Middle",
  FontSlant->"Italic"],
 " group."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[TextData[{
 "There is a history of two-group and three-group median methods going back \
to at least 1940. A review of that history and further details of the \
algorithm used by ",
 StyleBox["RobustLineFit", "MR"],
 " can be found in Emerson and Hoaglin."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"RobustLineFit--algorithm"],

Cell[TextData[{
 "Reference:  John D. Emerson and David C. Hoaglin, in David C. Hoaglin, \
Frederick Mosteller, and John W. Tukey, eds., ",
 StyleBox["Understanding Robust and Exploratory Data Analysis ",
  FontSlant->"Italic"],
 "(Wiley-Interscience, 1983), Chapter 5."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->"RobustLineFit--algorithm"]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.2.3 Comparing RobustCurveFit and RobustLineFit", "Subsection",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],

Cell[TextData[{
 "When doing a robust fit to a line, ",
 StyleBox["RobustLineFit", "MR"],
 " is much faster than ",
 StyleBox["RobustCurveFit", "MR"],
 ". For example, below we generate some made-up data of 1000 points of which \
5 are outliers."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"mydata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"i", ",", "200"}], "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"i", "+", "2000", "+", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["i", "10"]}], ",", 
             FractionBox["i", "10"]}], "}"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"i", "+", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["i", "10"]}], ",", 
             FractionBox["i", "10"]}], "}"}], "]"}]}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"i", ",", "10000"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{3.452004112625*^9},
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"},
 CellLabel->"In[43]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EDAListPlot", "[", 
  RowBox[{"mydata", ",", 
   RowBox[{"PlotJoined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{3.45200411878125*^9},
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"},
 CellLabel->"In[45]:="],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
gM0U3w2KSQsU51wlXOmG7g+fzF90sPhuyI7Zu7wkhniZTXgjq9s1Yzg7/00o
Gts4dYeiO8XfhOi8sXEHwlj8TdizvuhmdSVh3ib8zLFQMrJg578J86+bvxjh
TDxnV34x3NH1Pek1bYLp3mElM2pZ/M3QelOpcushi78ZsqPtW/UMicdmfLxr
sdAswoPib8aLW1/Gr3IizNuMERXTVdUzWP2bEa2x3keoTHzlZmhusdBdcZv4
ps0weD84QV+O8pFxx4b+ZxKGDSB7HXes/ZE7KeUSq98dYjvL2acE5O/qjksn
ev7WZ5jnjsKHcWGZfuSf74705Qn3PlZ7Unx3jH9gsvBQNp1HkzuG83d/fL9s
C8X3wPe3nQN8HAoovgd6Xn3bNPcFq98Dw3t8+3J3Ndm7euCCgqHh/TLS53lg
es2EHptNWf0eaFKsePJthBfF94CNUmaZ02N2/h5491F72mU9ylfGE+Ny8mfr
lRKv44mGsbOve5WQPjyRunxflY8e6bl64smolbEdQwjzPJE/xEnYNdyb4nsi
d1fhojkerH5PvFmePFFzNYvvifQzw9KDv5K/zBZs2SD3sM8cdv5bEKJ8vM2w
F/HYgtV3jXI3b2bxt+DIVomu83lW/xYMzKxt3mNMOH8Ldp3eemqFkg/F34Lm
yru3S98T37QFSx5K4k1vsvq9oFv+lFdWTPo6XtBXv5HeqUX+8ELZfe2U/l/Y
+XvB/PgHr9FyrH4vLOTb9xvexeJ7YU+d4YH8Qyy+F2arD2yx5BFu8kIP3zmT
z1zcSvG9oWV2uvX8IDo/HW+MLvgz/8QgFt8btldznqu5k76rN/7o/Ti0+hn5
87wRsStLftsKwvnemNB/1bgX5ez8vfHpyc2h9d8p/yZvxJy+mx1Uxc7fBx4m
hZOuOZO/jg9e/ep7cXcC5QMf9A8u1rv9mp2/DwxkVLcEG7D4Ptgp1/G6ZB7r
vw/ytjyXmTKZ3T8f1Avq/2buZvX7YJ2Fsld9F6t/K3ZutjmtIMfic3/f/LK6
Xsbq34rrk374ha0jfdetmJqnnNvUi8XfirXZD3TSdH0p/lZYWlyY9jSHnf9W
HAl6O9rDyY/ibwVffsP6Mb3IXsYXU3P8Rlx+Q1jNF0O7ivsVyrN++KI8LEmQ
10C8kS8uRgx4EHCLnY8vZs1PauN/IWzni+5zR6ricyieqy9az1weIx5A/r6+
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
OBMZRv5O8ThxvHiB4Rk2//EocGmpfaLC5j8eS5JcFp4ckvgP+8ZjQsPGobMZ
z91T2cjLc3kRFI8XjzylJ3dVL5J+YjxuyTU87H5PmB+P2H1nb1bsoXjSeGhW
fZNfM4T1Px5nserl0nts/uOxQeOm4Op8ilcSD/0TWoVOEyifMi7fxikBOU6E
K+PxerF2+/E6sq+Jx/y+woDUA6z/8Yg+vM9c0Zni1cdjadhFaSZ7b5viwV8l
J67szfofjx0pfdoVVAl3cP7HRI+LjpFeVzwUt/cYt/QS1SeTAL+uc9MLlpG9
UgLORy/oqeNGWC0BbdMrTiewedVMgCizvtnkFPnrJOAYX/NcqTbVY5AAQ5fJ
Gwp2sP4nwKLkx9Ux6kn/sGkC7N3X6+qpsPc/AePkpvdyySV76wRk1w++NPEn
6dklwPjhqIH7usneKQEFye3P63PY/CegKODOw1hZ8ndPgMnu3B+PzNj7n4A0
w1NjZtqy/idgQ6V0R39FsuclwDe21c12CsVLTMD1SWa7VfaRPT8BT96fiNgx
keylCUidIZzyLIBwfgLMu7bWJrL9xs3l5xFv1dtfUr0lCeDL1Ibu0yX7sgSM
12/lzW9h738CLhxLTPQdR3xNApJPmSU8HJj8D9cl4MTBl9pWIaz/CWj8cSn5
eSKb/wQsdbiQX32TcEsChspERM1KZv3n6u+Y9GX5fjb/Cdh0as+WfiB9mURE
1WZZG6sTVkpEuLvzEx9DwmqJWGYzdZjOD/b+J6LZ5KJ2NOuHTiLm1Qb8XGDD
5j8RRs797v+cy/qfiOXC+5FpgWz+E/EJPeZ/raXzRiIW9n4ebuVD2DoR5vo6
ri3fyN4uEWc3Tmh4M4bNfyJ+Wl26NITdF9dExDiV1syLo/N2T8Qrxf65qyaz
+efsNdfWySWw/ifC7+7Xn7YLCPMSMaJDI/hnIdv/ici4p+SycRbVz09Ep5zR
vHkdxEsTMfh9gcqkTIqXn4hz5+a+KVUh+6JE2M05kNjZRbgkEabtZ/VUDQiX
JaLns7yEC0yvMhFNpvIGt5leTSJa30SYeSZS/nWJ0B++pC1DmfzrE5Fy2ddM
WUp8E3f+i1fqWlURbkmEcHlsUN3IlH+4IxHb4no7+PUk/a5EfOtMOOWwk81/
EhTP3Y2w79r/DyslwTfBberDXDb/SRjkfEx5RRTpayZhjKzHuGsulI9OEvwW
Rl+eas7mPwnfO/34G9pZ/5NgFNMeMP4M8aZJEHgPGN/nDtv/Sdgdqy73IILy
tU7C9fydu3X2sP4nYY3VizdX7Cl/pyQojLVN0i8je9ckbFQd27cilbB7EoZo
/dSsPkPYNwnxX5zCP40g/+AkVB+8vncA43lJuLjgafC7w4QTk6B2v3nhk9WU
Lz8JJhODkmd8J39pEl5MNAibxWfzn4QAkxPjVmmRf1ES9t8bbzBUlnBJEk61
nZz55irrP3de03KbLOYRrkzCeoUne+fLEa5Jwmx+1mO5t+Rfl4Qrfu8DMYzy
qU/CKust3k9b2fxz/gc73CMekn9LErKnvTjatDr1H+5IQlXO2KZkQ8JdSSg+
/NZO7Q3rfzIs+h7fdzCQ4iklY5Bh79FW0VSvWjKuqijO09tI+prJeLk83uf4
CeJ1kiFZtOLSf2NJn7vnRtusM08eonyNkqF5hP84KJt402QoirvyQpcR5t6h
i7vl00OkrP/JOCfd7n6lkbAdp39/iYb9dNZ/Lp+qhDddaeTvmow5Prh1uDfl
556MBxtc/Z5UE++bDMfRxaqNucQHJ2ProIdRI1NJj5eMP0O7h6scIj4xGdpf
dtW2zWX9T8aKCec+DVKnfKTJ2OBoa2Fqx+af07eSlCeopP3DRcmo+HUlbMV/
7P1PxiNJ8IPyk5RPWTKerbM7EfCI7f9kGKqKtxaOIVyTjIDniT6TP5B9XTKK
zz6Udi8lXJ+MxuHu12MCKJ+mZOR9Tj+aGEd8C3deGZOU+x9k/efOa1/rtvFB
VB/3Ls0YvTf4+D2KJ5OC8x1Hf84ppvyVUrDD/777rAzSV0uB5f7VkUYniddM
wUCDKc5mNmz+U1D7+4Xd/jes/yn4fbH50Y14wkYp+K/x968jbuRvmoLwhF/n
178ifXB8dvauRDHrfwq+PLNfrmVE+nYpeMyrtXj9hrBTCqSJ0pBaTdb/FKze
cuT0h4/s/U+BglrFpemNhH1TcF3o/cY5nM1/Cl7mLlizeBSb/xSYXjlT0NZI
+SVy5yGfr+Z9g/U/BXm/HtrPE1A87p6WVAztudeb8slPQZH6qQGzp7L+pyCR
t00v/gLZl6SgU9HvudwQise9W6bDp2vKzCFcydXzk2/5+BN7/1NQZt868fh/
pFeXgmHmB90Sndn7nwK9r/lvlfWJb0oBfimrrppOei0pONHfouHV6PR/uCMF
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
E3ctyN48G29MbP5kqxPm9oDf/ogd+vtJ3zIbdosMV7YWk791NjZ1BF063Em8
bTY2fld6mKDJ5j8bfTIuPpvG+uGYjZTI6LnZr9j3fzYc/Iq1f01m3//Z0Fe7
nL7tIOm7ZuNu9bo8Vz3iN2Yj7s5j+QdaxHNzcsHOumh3O2GvbFx00d7oqM/2
fzZkVYyjf3dTPG6vPs7Se2DqQ3xwNvLMb2vPySX/8Gy8DkhWC9tF9fOy0Wnl
dVfI/GOz8ba8h2xROpv/bEx4M2LflKPkn5oNq2nTx5qx942fjVFlwlGTSkhP
mI1r+fyZhQps/rPx078gWUM29x/Ozcb30O277EYRn58NFf3q/jFtpL8vG0qF
b/NmPST9omxoXLv+5NFrqudINsamBT+4upB9/3OY13ZavZT8S7PRe/pe38Yh
lE9ZNnJnTpL/2ED+FdmYtrpBUzqE7CuzEX98d83IY2RfnY1Q0VN5HSWyr8nG
hn4jMvax7+vabFRPs+0wX0j11GUjcfBOvYJepPcgG+LLakm/kwjXZ8Nm9j75
65NJ71k29vQe8DxzKMVryobW19xRqdaEuToVn+7zVPBl+z8bvvsaPPM6yL+N
u198x3s3h5E99+8ePlox5zqJ/5INa9UGpWlsvrqyIXe8ucZIge3/bBjl/T6X
8IXNfw4yPXZtnW5M9cjnIGKpZb39M9Ln9q7px1GRIbuI752Dd/str2zuQVgt
Bw2BoaZp8qSnnoOCXnfjH2ZSfM0cdK5ebl6exvZ/DpRWLS7ewaP+6+Qg671f
07MYiqeXg53JIzzuidn858ApecWX3/ps/+fAcVpA7NwL5M99J03qXnp6YCnp
G+cg46GZRVMqm/8cGPbwWDtwCuVrnoOXgVqBKqeI584pNjG8/fch9v2fA5Mz
tz5U7GD7PwcJm50/5byg/GxzEF315ZtZCpv/HIyVX2Bq9Y54xxycX/+pNWcr
xXPKQajZh6Uej0nPmTvf1d+zNxuSv2sODhgfDBjVTvVszEFqYb/Goc/Z/Ofg
7tiLgpdv2P7Pwe8notpv9Wz+czC6n4dd9EGKH5CDz189ztZ8I//gHFwKGpmx
P4/4cO68Zwm+3fQgfx7HSz6emuBC9rE5EKcPi56iSHxiDk5suP/7oSr5c+e6
LeDPw4gasudz8X6N2+LMfj8Jc3D5h2JccwnVL83BnPZq3deX2PznQLZzqtbd
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
149+6K+YA/eP5Cy+cozyIQcahMVNm1mISzlQ+vnV9WEraH/Mga5GkzWWzojL
OaCzmMfc+IXOy+Q82aqm5F3B+JWkHsZ1rrsVQ/mTA3td5Up3rqB+NQdWlk27
H0/rcQ2530a3NeO9UP8FsU+a2xrbgvq1HKjbMvRsViLqkz7X4f3TvgoZYsL7
/NLJrszJiN9ywLRz0OWqMvw+pO4NPO4J3+6j/D0HNCduS7h7GPe/iXyvkBW8
UprvJ1IvTyW+XUHnzWZyPjRtA2tpf0jW7WZYIfAbg/atHPBedrhjOb3fbRww
MFeNXFFM+ZsD5hN33l04D/11ciDYOPzEOGvMr5vUd5uuo2ovUL+HA3+OZNhX
zkD8iwOX6hRePU3BeL9Jflsrzj54Td/7OFD2ym9C+2f038eBNt2A4ZHn0X4A
FzJ8tUPiliBW4MKFg0O0Hl1Bf4pc2DRW+/agTYgJD0/Y/cSvxAvzU+ZCnOTF
3DEGKFflAntLm5vFX/RH6mBMwezGknmI1bkwcaPigHBH1Nfkgm7h2nxtP8Ra
XOifIoRTYZT/ubDQUGVwxmSU63DBf1YsV/ca+hvFBXmA9oM7XNTX48Jx1qTK
1gGYnwEXzp4InDT/COV/LjTM0Qp6S+uLIRcu29+N8mFQ/udC45Dfv1asxXjG
XBisaxR7uxXlk7jg19M8ZeAIjEf6IMHIV3kV31FuzoXSFSKd07kot+ACM/Xj
p8Vc9Efq1Ieb9xZ8p/2XJbHrfdNnUHTlP2zFBT2n4fH1jyj/c2Gq27QdkfQ+
kTpf78sxSNFEfzZcSNE0D5ixB7EtF+ZZz37+dCFiOy7wY0umrfuC/uzJfhbm
bR/QhXLCw+Ujz+pd7KX8z4VdG8LvMhNRvohL6oVn4K0jiB25cPVrToAt5U8n
LgTN104tvIF4GRcKHr0LO/kX9Z254G519sKbDpS7cEF5XtstFyWUk77NRfxh
oLc9YncutPMupX6g/OTBBbdr529O7KP8zwXH2m9aqlvRnycXtNZPTx76HvXX
c+Hd5Pu+Q2h99eLCuqdrjxY9RbyJC9G8cBPVYjp/ccF78fFT+XSeIH6VvJV1
M4Mo/3Ohpskz3t4V94fw3K/pdT+W0nnYl5yHXr65/jyMv+v/z4+vze77KCd9
c5+dutHnxygP5MKiwuf7NYYgJnGefDynmqeMOITsp533qAUmaB/KhQWXTrTM
6aP8zwX9tYqa0/aifhgXho/aVvyQ9vcHuVCdlJBhWow4kgvrm85l7qTfK4oL
6s1RV/SbcL3RZL2HfSd4DEP5UfL9w5wcCul7UQw5/2HwK2QHxovlwpVuO2mW
N+V/Ltyb9jCfRfuHeC7EaszPCXqO9iRup2DjYy86/5M6/cFO4Xp1EPpLIufh
b5Ff7xLEyVwwLho5OtaAzpNcuJO0+v5Ael9J3dI3n5SdNIXyPxceTTFauOEB
2l/iwsB7Ux9JtSj/k/rAbTQOG4lyFqlPey/V1t9CzOGCJPCGk2Q/6vNI/TAa
Hb40A7GA7Ie2w/1vKZiPiAt7Z2c9+FyBcgkXvr+7NmUv5QPCOwrfrjUeWoZy
4kdz2YvCjh34930Ir/3t8ltSRut9Fhci/6Q36qzBfLLJ91TNNkuchvo5XEhq
lKU+/If6uVywMynuODoM9Umf+spt8Invn3G/b3Fhxuzm/GFylBPeCat3ZFjT
9ZO5YG3o5ejW6YiLuGA+JSMvZhHGI7y0/9WxnJ/jUU76zpL1FtW/glFeyoWQ
116PDCmflXHBcvKYwu0/Ub+cCy8CPuiMtEVM9imbt/36zNOoX8kFhnMTc8YU
lD/hwuihVfcVJqC8mguTRZ+e1ZegvIbc5+9edvl0HiI86HKo6FPAQsS15Lx1
TFJt7KH8z4URoQp9W+rRvp4LrukbumKZmP9bcl75hq19jajfwIUetbLQ+G+o
/54LyUpdE3yNUb+JC71pjybkrML9/8SFFZ2lR+p+Uf7nQu37Tzp3Kd+TOqt3
khu35X/8T/hNpeWNA52v2sh5Hnx/rP9GxKQuLpMc3Rr0nPI/ub9q+4NG0Hm7
mwtL1MYdZNL+kKyzK3+/81e6nl9ceDnsj51XNsp/c2HOru23HnEwPuHhqxa/
rzXuQ0zqiH7LGHtbet/IXHPrZPdt96OIFXiwu+S9VcwzxIo8aNn9KiSVzpOk
bl+Mkd7awUQ5qVud49t12ul7vCoPPvbbPvy0hr4X8qCVf/Dp+1jMV50HFuuq
Z55/gpjwWEvw6Ypr21BfiweOc6TuGb8wnjYPzJ0EjBv6GE+HB9o/0pPtllP+
58GWM32rPkWhXI8HHxYYao05g3LSl/xZ3H92GuWDsTw48aLnlzQW9Q15sH7+
1lFDD2E+RjzI5LzUK6HYmAcjvq7WKjlM+Z8HxyeYq0+egfamPPBRz9mhrIP6
ZM5g6pnNcbJHfQseqA3f2nqkA/Wn8uDNib1bSvsQW/JguSxCpeAxnf95MLjQ
/MDqevRnzYMpjT3PilajnMwFD3XH3+rURbkND2KO/lir24WY3LtDUKV2MJW+
d/LAaVHBltYiOv+T9duNrVvqjPGBB6M3y+vm6yF24MH8c4MuxLQgXsSDSP3m
dKDvwaRv21n65lslC+VOPPB76Rp8uZfyPw/0thds55pgPiSO9x/Ns1dpP+7C
g5kV1eaDuHT+58H4k2oTKmi9cudB3fjFpgp2aO/BA5uvsUzGfsSkTu4Rnrp4
qhexJw8CzMKip+9GvJ4HxhMCSi/R9yAvHuRFNvHG0/dK0sdGBzz+uJzOF948
UIgoa1S8S+d/HgxV2dw5UYXyP/keJuHZJ6sQEx58vf7ulMWViH3J+Tleywm+
iPnv4oHSghBwe4HYnwe3g968P66J+QXyYNTi/eOu+KKc8OD4b6zSDbS+hvBg
lY1MKeIU4lAepDkfchxpjPr7eTB1+cEsrWEoD+OBJX+gRmUK4oM8SPD/kreT
9n+RZP1heq+VsxCTe6J6R+42j9aLaB5cy3nGSnRAe1IHznpeyHLfgvIYHuhe
S9M4/g0xuTcmNnqVjQ6C/3AcD1QOhPw8R+9jPDn/dmYbuLQ/SiDfKyJhbeIC
jE/6Sq3oe02jt6J9Eg8mL2+64LcMcTIPonaoVkTfxnzIXFO9bU9AaTni8zzI
/ek2tZ6+d6TxoCSqrWbaVTr/k3rT8GvYPtovM3hgVHvC9hR9vyHnNnW2/IOn
FfojdfJWTvuhR7tQziP329e8IYzWPwEPJukMyKwSoL6IBxnNMHxlNWIJD37r
8AMiqxDLeCDUiMmodEScwYNhE+xnDviE/jJ5sHh00VS9u3T+58GpEX7nrDej
fjYPjm6bHyi8ivo5PLjBmlWfQfuzXB58+uTbmK6C8jwebPoSytZnoD3pa/Ke
X/xQROepAh4sUkocWjQQ5YU8ePrPwtyLvs8Uke+/4rjU8vjV/3AxD3ao+n7t
c0d9wsNjlfwFt4fi9ynlwdasIQM+6FP+50Hsnk38Lvq+VE7Ot9Gcy38p/1bw
oG3I1Bkx19FfJQ+ybnZGB61A/IRg5RCjranov5oHBxTGiQ/T95oaHqyusKz3
G4L65F5JS965VA9CXEvO6+tty7JWo34dD8KKbM98LEQ5yaNm6Zcf2rRevuVB
o2OBaYc64gYeBAtu51/XxPhkjrj20+zpkLGIm8h9MnjDXEn7EfIdE0p+q9ZG
IG7mgcs3v9+HLqP+Fx4cZqR8sjmPuJUHAy/uqbLwpfM/qf9bLcOX0PURXlhY
lBfEp+ehk9TnyR9UP+2l/M+D8uTwy5E0nx5i9+JMyiZ3Ov/zYPNDdvplLsp/
80A9Y+1Wc3ofyRz2d8uloV9vopzwTtO33pnrTyEewIeIG1EW/oqYjwIfRt+o
+pXQhFiRD0VJty2yT1H+58PYws7vqv0oV+bDSs/7zr60XqvyIadVN0W5i87/
fLB/nhg1OJDO/3wonpduUTUO7UldXLtT59SiYMRafPi+Up76NRHz0+bDiitr
9dTqUE54dkXCxFaH55T/+dC6dkmE9g7U1+PD0OUt9ydvw3wM+FBzKvqU9DrK
x/JhVcHL8vHpKDfkw2qD2nGB/Sg34kNJWv/zkc2U//lwsGRkjRqdvybx4fRq
3yUKpahvygcrjb6EO/sxP3M+XBt1+Mkkb7S34MNfbZmeXiDqT+VD0Ijw1EEs
9GfJhzzDZ73ZV1Cf1KWaexG5k2+iP2s++KzSd8vbR/mfD7UdH83f0fdgGz6o
PrD7Z1eA/m2JXEVZGrIH/ZHv0q+aEj78Asrt+eBcOqBc/SLKgQ+vT+9uMs1B
THjAc+8Q86R7GJ/MBV7zTFyV6P6RulY57rb5jxWInfgw8s3mIZ5n0X4ZH/Zd
EQzJPoJyZ7Kec0V2/u/QnwvZnyM5Lod2odyVD1+jH/s8HIVyUnfiD7t1h9Dz
4sGHvYc/7kwwRfkaPrhoj+qfT++rJx+yZmgt/aSNeD0fNG9UZX09QfmfDzEe
4Z/7Uun8zwf9CUoz5hzEfMl3GhH8ceC0Reh/Kx/+ZEa+3x+Gch8+7NRpnXvb
DP8+Epnj9u/RXHXzJsp9+RD3taYxbhbG38Un/ZDDIzMVlPvzgW+eqP5lBdoH
8iFh8qopjH+YTxAfuLF+yfUBGD+ED5tnOD3jSlAeygdDk8HRf8+jP9IH2emL
m+ceofzPh/bBW54HXEd7sq5brYnwrIy+//PBLH7WyXZLlEcRfwN6Q1sqMd9o
PnhvtNkXHkr5nw8BfXGHztF6FMMHZQvlV49o/SV9fPmRgFvVK9FfHKkPxcGu
O2+hv3g+zBu4u3CgLsoT+HBdfbhkDT1viXxQr7NPKvyHOIkP2euXvjlN15dM
9s/SVf6Yztekr5meGjROlIn+id5As99Zl2JQP40P335kZg4dgfEu8SG/6wbj
4hbUJ7wY17C3SvExYhYfQk9JA7QcUJ9D9j9yndNbH8Q8PpzkDb3wv/NIeH9g
99PEaR8Ri/gQ5fNznTX1L+HDrFdvr1yi87uM7O/Dl4Zf6HnMIOfTsMTO/Ayd
//lQdiHrj54A9bP4cKlQ69kcXTwf2XyY/HlQ7wEhyv//XpZEZyxZiv5yyX2w
2HFv23GU5/FhU8dQh1nnEN8i34OnkJA/GnEBOU/t09+8YqI94cUnJZzstlWY
TxEfnucPsAodhfGL+dC8VibzjKb8zwdmT/Ts3xNQXsqH4IqxwwRb6N8r5oNr
QF/HF1oPSZ+mlB302MYS5RV8sIjYqD8sAOWVfGjTMhrVvArzI3OglkbCJp+L
lP/5cOdj8Sopnb9r+CDdkqsysxj1X/ChMMynbNw/xLV8WGqftWzKZsyvjg/3
XnECT5tR/udD5qF2fuYX1H9L+Kc4I0epEXEDH5btZbfZfqL8zwedwYdip55F
f018EBh7bzczRfyJD7m7p6WaT0H/hCdcLPhVisfQ3xc+1O8zbSkLofxP9nfI
t/FxlF/byP0c3HWrayLKO8j5YDR/fu6H/jv5YN7r0bRiDMq7+dDZqLI7zgrt
e/igMm5o9h9dlP8i9zWTuafKhvI/H+bO3x3efBX9/eVDz8LPH4a9pvxP+HjE
hK3jtmP+AwQQJthQa07fJxUE8DWuamK5P9orCsCQWWsR74RYSQBZT4eNuP0U
/SkL4Mhu1ef3tqC9qgD4o7WCYtwQqwlA+XnyyT+L6fwvgBS9L4eWDKDzvwCc
Ds7JjH6A/rUEkD9gw+vbtB8m92jV/ale2vNQriOAE9mLf587g3iUAHomKz+N
c0SsJ4DDtuwbL+j5NRDA274Zmh6U30kfdc98eerNBYgNBeD37MpSpUVobySA
/vSvS96OQLmxAJbW6Z/YGoH+Jgkgs8wh9APtV0wFoJEct7t5AdqbC6Cgxp3/
cRzaWwhAYtRvdzEX7aeS+IvrE5Wc0N5SAEoh3OPSx2hvJYCXvd83TV+J2FoA
5k7N4h+fEBOeuam/6LliJmLy3c9Pu/1Lsxv92Qpg3a06ncpyjG8ngPbaEb/m
0fj2AvionVzdeRXlIIBHp1v6xtL6Tea6f2cvZxopiP7Di0i+IwpPLab9taMA
InnF8+8EY3wncn6iPB98moP2ZI476Pn3cNxQlDsLwPFu7MB73ih3EcCc2Kvd
21owH1cBVA0b+U0ejPOHuwC+xOaGGNJ+wkMAbv5n83M3o/0aAWxbY/vjySX0
7ykApm7L1QI3zHc9+R73prMXf0O5lwDGbUlx+bwK5ZvIeV1z7cnm05T/BXDW
dAFz1C/EZC5lXj2/cOVg1PcRwJ5XD0w5FZT/BTB0t3n48LWIfQVwa3PoOxG9
D6Sv6R1zLYG/DuX+AuC4bUtbpkb5XwAzX/yeNoXW0yABaG7MHe+9DTGpG+Os
4nZNHIHxQwXAOJ3PmLMQ/e8XwBOb3pvD6PkLE0D69JxviRqof5Cs74GWm4sp
6kcKwGNUheZxWt+jBHDxs77FnXS0jxYAV+TXGmRA+Z+cp1vrV8RXIo4RQGtE
478RDyn/k/M0VmfDwpV0/hfAJ4O8kRPofsQLYLSJrsPLDYgTyH7U2Rv2TkN9
0tf/9kyQj2tCeRK5X70XvG03IU4m9ebvbjdPM1xPigAyVBS7l9+n878AhgyJ
MgvQR39pAlj4J3nO7Wtof0kA03NdzFsmI2YIIHCp0hPPLMQsAVRE6NvMdUR7
DtnPnhH5l8diPJ4A/i4sqnyRj/sjIPevOuHbV8ofIgGA27z5b/eivkQA2znZ
P/vofC0TQOW3c8kXf1P+F0Dx9inTlxSgPeljhhZoHZN4oTyL1AtGQPObrZT/
BcC7fOoreyDKcwRgf8x66+VraJ8rgOS7xvZ7T6I8TwCWCrdPx/1Ee3KPBSML
GW33UU7mgoM/DmwtH0X5XwCm82vPzPqL+kUCmJ09w1mlnfI/2d9u3UGraL9a
IoAXLQ+VI+h7AOH5bReq+jdvxPWXCSD3R8+3FDrvk7rT8zzx8/lIjFchgBHj
Zl7z8KD8L4Af1t8OVtH9eyKArepBjq3FGK9aAI/5ZQbHClBeIwC27oNCn3N0
/hfAsxT1Pr/bqF9L9ktdseElrY91AlBnFNXEW6J9vQBmjCve40nr81tSf6bK
PRNjETcIoPpV/N7Leaj/XgBl8XKnuk7ETWS/LX8MulyP+ZM+YUnd3PDNG1De
TM6/dPXtsV3o7wu53zOqT818ifvRKoDuX+r3DcQobyPfY+Wj3PO+lP8Jv+1w
9W3UQ3+dJP+2bTqOtB/oJt+Tf/zGtlTEPQLYJP45/UcD6v8i9yMg6VKdH+V/
cr+eHk+wjEX8VwCDbrYyLGm/2kf44dnI7v10vwcIYbBb9frRYvSnIIR1gr8v
FBRxvxWFYFge9NyG8q+SEO7+Ccr2ofGVhaCb6lKz6zP6VxXC+0tdlqLjqE/q
3rhbe148v4v66kII6TM9eDsbsaYQLlkbfL7GQ6wlhIyGSycHBdH5XwipLasn
fn+Ech0htGdFQbcS/r0oUtf2SGb1egrp/C+E/PyC8286Mb6BENKSwqLaaX0f
KwTjR6cGtrWhP0Mh+GQPuXD9OWIjIey7/T2kRhn9GwtBP8JrWIUy+pskBMfi
G+9WbkV/pC8s3cS7dlSM8c3Jel6z9GPf0/lfCL77Nhwfc5TyvxCWjNf5MYH2
J5bE35yNDUk9GN9KCM4L9MLzb6M/a7L/1su7GMoonyUEuJn2nWdF+V8Ij9/w
qxKfodxWCFc0ZyQNpfp2QjhrNezA3nTUtxfCw5/PSnvi6PwvhMWWFZ+9+ZT/
hTDLy73mujvqk77I5lzHjuKpuB+kz/pdtcU4mPZLpC/cpL3d7sg6lC8TQpzz
yiPbMzG+sxBWDhxe+GQpyl2EMLTmyoJzgPauQugu//Hv3RXUJ3Gnhv3zFsVg
Ph7kvFUu0EkPRPs1Qrhw86Tf3wd0/ifnr7YsMKUU/a0Xwjf7L9mdoSj3EoJB
zvfN9x9S/hfCmquKcy82oNxbCNx1eyZsOo2Y1GHBJIXL+/0p/wthgkI/f9Zb
xDuEsDTTzXAPrZe+Qoi9Ovb4OQPEu4SQnFDeGbuM8r8QbrbM7VB7R9//hWBW
Y9tcRN/rg4Qw89rwYT9pvQsRQoCH8z2VaLQPJd8/9Ufz/aco3y+E9cOMJnzb
gvIwsv6VHX23KR8cJOd/2t797qoojxTCM88lbyOOUP4n90EyoH0P5UcSp+fp
2LMy2l8dFcKJTo01Nyg/xQjBOsAgZDR9XyN107+yfzTXGPOJE4Jw4oCXPFoP
44Vw7tH36qwfiBPIefi9LllDh/K/EIKuVWs+p/cjSQgPnoFZz0vK/0Iw0Vqi
ovsCcYoQftg6792gifi8EAYKzVPzwij/C2Ghhc9qVVq/SV+Y+v1VzrIOOv8L
4brm1C6H2ZT/hfB03qKddnaU/4XQWFWc/PshynlC+JunvC47CvMTCMF+15DB
Eyi/iIRwslXalZaN51EihAVpJwLcfTC+TAgbWhXXB89GnCGEP3qF7nM2YDzS
tw/vCFY9lI/2pC8Jcs/dfIr+PpothOrbrQ8a/1L+J+vrPcINyUJ5rhB2fYCi
66Mp/wthxrrSE460nt8Swg6bLTXn6hEXCKGkqUVicgxxoRACvfo+tcdg/CIh
KNQnPvLfgfkSP02x4tCzIjr/C6HQb0VX2SH6/i+EJ+82a/nsRX9lQvg66olK
J31PLheCkVdBEuc7+iN9s3/sqDhNTYxXSfaDe7Ph1kK0fyKEVYlbRv/vvbxa
CEUsndu8fMr/QmguWFZ69wTKybmQjI86mfaM8r8QVizY+PdBJeV/ch9tbJJg
JOqTfWhyfVDvYEj5XwiDbmywjaH71SCEqEMGVsYvrv2H35P6ILq4O3MR5kv6
1MbQnPnf7mA+5Bzo1Jkxsmj/0SyEEb4zBl7eQ9//hTBxZCgzn56/VnL+vodk
eldR/hdCPayry9uH/jqEMF/NcZCM/t5LeIvJ3uQ08hrG7xbC9mc/c2P+0Pd/
IRQEmM6vskP5L+LfNnjBPRXEv8n3HhrcUrYO/ZM+Ly/u5JPh7ei/TwiL/i3S
XdhG+V8ELSYHm+aOkvyHydzXft5L2hiE9ooi6PW83/Jcm/K/CNQcObPuCejf
ixfBXZ+z5f+Oob4qsd8ZoTaA9h9qIjhml875VoVYXQTrJu+Jv3GG8r8I7Bf/
/DTVFfPXEsH6WP3DV39Q/hdBxxfW7BHv6fwvAu9VbdOWT0f7USJY6lDSl1VG
538RxHfvKylZh/YGIjDv0P4r1sT1kT4/PTpbdyatn4YicNUw2etB50UjEfQ4
dljupe8JpM6l/F79jkXrzSTijxO+L0iI8U1FMKar+XS/K+V/Efw+NKh6yi2U
W4jAeblv6duxGH+qCK6lX4nfROcj0qdOPJ8uHkP5x0oEj+8MPdrHwP2wFsGy
mStMamk/OksEjNwg5gIR6tuI4ISJ26Q0Ou/ZisBuI8+1xJfyvwiqll19V5GJ
/uxFpP95H7GY9pdAvs8wp6xCW9R3EIEVSyn08HbK/yIY1pagovYN5Y4iKMmv
mBQRjOtxEgEzpEzr3ks6/5Pvuavf75gTyp1FUBB++LeqO53/RaB+4ss3Pxbm
4yqCxlXPehrUMZ67CKIjNbrGpiH2EMGn/Zdue5fR+Z+cN6lGngP9PcxTBK/a
Ci+O1cN464n8ys+9Xefo/C+CkaEF7+eoUP4Xge9817ZDZ1HfWwRhgcXbqun7
3lYRKA89nrB2O8pJXVf90fDlRC/GI3Vy2bPeduuh6I/sc85Itb8mdP7dJQJt
2zNN+xpwfaSPcI5I2ZX7DnGgCDRrBh99TucPcs/O28wZfDoe5SEikL2Lb1SN
oPwvgr2im7VK9D1mvwh2vjHV38Oi/C8CCXus6AH9XgdF8Hmzl5PWNvQXKYIj
V4MWS2j8KPI9u2xHfstDHE3uS1HxGeU4xEdF4LGqraAlmPI/OV9VjQH1UZT/
RXDhopewPYnyvwjKTLe90kyi7/8isB5dLE4sQZxA9mvniAcbnTG/RCKvWLna
eDjuL/EzxzVdQfE6+ksWQfPrtnd1bpT/RWDrKbT+/Ii+/5PvffrN/dHFqJ9G
7sODEw0R9PepSyIIj1wQMaYb5QwR/Ks6OXjlTYzHEkFISsmiylO4Xo4I8sun
yf6coPO/CExmBI3Zcg39Ccj59n4R2U/rqUgED6N+n15O36slIjjzurxdIRTz
lYlAblzrV6+O8TJEkJjHPZpVjnLSF4/VezblKQv9ZZHvYe632JnWXzIXrUyc
0rdpJeIccj5UZndWbEH9XBGM2N5UsY3Om6TvOf+maJN+EOV/Eaxo3jtc+Af1
SV+ZFZW8sJLWt0IRTNo9fd/tJsy/SAQV082c7n+k/C+CmrLGtR9a6PwvgjTZ
XvUpmzGfUhGUrivwv3cScRk5j/zz6la0XpWTenisZOB8yh8VIpDOZkRx16N+
JbnfOzIP87Tx7209Ifk9Djt96R/Kq0VwT/2y0uQBlP9FcDvJY9asN4hfkP08
N+PiVyniWhHo7/xlo7EW49cRfjI0jVhSgf7qRXDjvMdy0EZM+vhXmbb7lnxG
TObYnUdl14rNEL8XwQ+LEaM86HtBE6mHvdu+XK6g878IIuP0zjyk/U0ziffh
8Y6ZThj/iwjG6/rGcSRo3yqCd5KacRdov0jmzmkCuD88hPK/CNz/pVdavkH/
pM6v8ldRPBGE+ZBzHLMxN2PJILQnc+Iaqeau8qV0/hdBxsm5rdWbKf+TeiA3
E8Xpov1fEfR9G3L3phbq94kg0G3MV59HlP/FsJsdUMV5jPYKYkg9QiaKfMxH
UQyTdh73lOvi9yJz97yNV8bufEHnfzE0dExW18pFf6piuNH9pl6Xfj81MUTv
kxvoUL5QF4PCpgjvJfqU/8Vw5rLegztSlGuJQa3Sf8oX+j6oLQbJ5N+OrqdQ
riMG10uuqtLzdP4Xw8xhwluHj6A/PTGsUnHKixuD2EAMi6b0LhtjivmPFUOW
3YcfZavR3lAMHr9bttm5ITYSg3nPOvsFtRjPWAzxGzVGPjFC+0lisHIe7/uW
nhdTMZgNf3XMrJPyvxhcptzcvs4C9S3EkO/js+T+Y8r/YrgU81RfooPxLMXg
/ilqty99/7MSw83HzzWWM+n7P1l/ZuMhRUf0N0sMzzW/jzb7SvlfDGG9L7KH
xaI/WzE849mOmNyPmPSJ+c1rNq6+R+d/MVy45mFiYof5APle+y1NDmlS/heD
25jT72LvoD3pg5U3hmcXTqTzvxhOMx2nr/pN+V8MvZX3FK5PoPO/GExXL/nN
XkznfzEYPbvmb6iE8V2I//Wnx7YPwfWQvu/AtxazQT/Qn7sYmnMe+UfuQOwh
Bvb6LA+fKjr/k/11D7llT+uhpxiS9Ktjl9+g7//kvKUnPqo6jvpeYtB02f7h
1y/Em8TwaWy3ork56nuLQV3ZxqItF/FWMfxkWByKDMR8fcSQXbqjqzYW890h
hrndVkGutB/2FYPxZZeaZ/S9fhc5j6c5eaX0vc+frLfnV9XgXfT9n5ynBVoa
1T8wnyAxpOxx7NeLyfkPh5D9/PQldtBylIeKYYGR2Ykz/hh/vxg6S11mJpei
PEwMJ852h07zofwvhnKX0Kcz6fmMFMNZyQ11F3qfosQQm/BSfyflp2gx3J8Y
GJWtgf6PiuGbWcLRo464HjInyvf5XJPMxnjknPUXl+/S/N/8L4YQrehz/0zR
H+ljZpTMeL02F3ECOQ+NNcHMk6ifKIaKhaVGRf97/yfntfRali2dn5PFkPHx
Rm3MJcwnRQynqnc/+FlC538xfGX3OXH0MJ80MdTmhFqq0P7ukhhGRLmmPKL+
CC+9+rN00z46H5C+c7KC45bFvSjniOGgLGOR5wj0xxOD96RAHTf6XiQQA/DW
9s+4iXKRGGpcPTMFKzA/iRh8luaPHN+AWCaGDW1ht7IFqJ8hho6xkzz6RyEm
fXhZ9qK4T750/hfDjqPpqYMGUf4Xg/7ptjXWdyj/i6Fg2vcZppPQf64Yimz2
uGmUIiZ93IhTDYI3sZjvLTGci1BWGZmD/gvEkMO7aJtwAXGhGPYWdOncoO+D
RWJIdmt0fe+O8mKyvp2zyo/NwPglYpjqu06hq5vyP8lPpfGLy3jZf7hMDLqR
sy8xhLi/5WLYxtq4b20V6leIIa39lPO4Isy3UgybUsaNH07njSeEX5S8zj+g
vwdUi8HA1vd3/gPMp0YMd4z1WWdpv/ZCDMJN+07PoPenVgyKtzKdUj9T/hfD
Hsa08ZxhGK+e1Pe3dxl9auj/rRiGPH/mFOGKctKn/ymLHHzwJOb/XgyJOsrP
mnmYf5MYtJeNH/LLE/U/iYGh/vMuzxvjNZPzvWaCeybloy9isBlV9CNgDO5P
qxhm7R8W/o6+H7WJIdOj27yM1vcOMSw7nRynAfT9Xwx/J+dfa6Lv4d1iYJ46
sGIfH+P3kP2cOvy+HT3/pK4x1t7ouPMK5b/FMDZh9a1w+n79Vwz7eo0i9g9F
eZ8YPg7eNuiqNeIBEnB7Gz63l76nK0ggvf74uSG/UK4ogd3vTzooXMV8lCTA
m+3rNu4u7o+yBD6ydtywb6XzvwQuWt8uKDNEf2oSYBy92qI+Bf2RuiP9+P2q
Pu0nyVwecXh9YMBalGtJwPmmIXNuFMpJ33ZCq3/m8wf0/V8CdcrKob50/0nf
XObAKDRXQH0yB/YGaVxc8xf9GUgg2f3tm86FdP6XAOuB0c13Zvh9DCWwJXdu
5x7aXxlJ4F/yAPHNiRjPWAILs9S+vBuA9pMkML9dtdVmMOV/CRgfMmoseUN/
/5dAjGPxJtUK9Gchgabvf94+DsF4UyUg+RfRp76P8r8EZCZxk4IqMV8r4n/7
UMVNgzC+tQQcJ01oD39C538JmE3apTKuH/VtJKC0R99jTjPmYyuBQUt+5eSa
oZzwfFTthLANlXT+l8CwvAfBTpGIQQJTxL8XBNH3fQcJ7EuRlX6j/fEiCRj9
ZFeZX0bsKIHY9HL1HFPMh8z5W1rCTi4fgniZBPhDTaZ00/nQmeBBny7cmEzf
/yWw8UnX0a1f0J+rBEa3rrb5akv5XwJTtUYn9XhR/pdAf7S46pwL4jUSiNtx
1pc3B9fnKYEqjSODdFYhJnNGWPv7Xbc9cb+Jn8BImyEHl6P9JmK/72D9xXbK
/xJY+e/a0Rjab2+VgOqgPav6WWjvI4EnU/1ay+n9J33J9PUze3hWuB5fCey/
a+LdSs/LLgl8tbJYyw9G7C8BZUOv5H92iAMlcGPIj9mCd+iPxFVitHrsKcD4
IeQ+TOSPDab3PZR8/0HvDt4fi/nsl0BIyBz9uG8oD5PAihsZd8Yfp7//S8Bh
n9nsw3zUjyT6fr3vEmj/Qu7VT8ULKwzo7ynR5D7lzP8r+kr5XwKri0301On3
jpHAl/vH7szcgziW2N/P17tSj/pxEnBJ4X+2ykAcL4HU127/RPR7JEig8I3l
gjQh4kQJJGl5zO+Lp/O/BLaFVDdPscV8kiXwYvdW95cS+vu/BJ5NbBjg8gfl
5yUQn3llWQbtx9Mk0Kyjkp2QQ/lfAocf3LkVpov6DAnU7GUunXCYzv8SqD8k
1Xeg9Y8jgfCeT5MDaD9J6r5JqNmJ76/RXiAB3SQbRr0B2oskcOpRnOjqZtxf
iQQ846tdv09DLJPAtGs1UWX0fSmDrLfxQOoDDZRnSqD0Vedet36UZ0kg7aBN
oAM9f9kS2DoycGtkMOrnkPVsXbM9OITyP6lfjBBlRw/MN08CpqZBeQ6zMN9b
Elh+1r/dcQPqk3M1vtX3p6YO+i+UgE9aU+img4iLyPrCeS+qNiAulsCMG8ty
R15HfyVk/6rZzzuM0V+pBLrqj1sezKDzvwTa32V2Wi/BfMsloB+x+0J9AOV/
sl9s0/oRmiivJPd/mmm6Nu1vn0jg985rFroy9F8tgbeXfmot9EBcI4HoJ6df
jrSm/E/u77lkq2W0npI5LTTs6fJJi1C/TgKXhjP1umj/VU/47b5H0qtHdP6X
QCs/fs6dCWjfIIF5cxal9mbT+V8CFfKAiwve0Pd/CTy4q2a3zQL/Pt8nCbxR
3rT+6SvK/xLYez2twFsd45O6dtQmqE26E3EryXf3vufz5iFuI/XjbGOZxXeM
3yEBxZCxdYKZKO+UgGbHapNC+n5F+q7zKUuOpKfT+V8CB7+pB2XJKP+T+//Z
3DrxLJ3/Sb67LyWvou/PfyXQ98N023EVzL+P7Pfi7BP3EzD+ACn0ZjZPlobj
/KEgBcWceV80InA/FKXQ/2H1ttRkxEpSGGzWczJOjvkqSyFCkgkffqI/VSlY
9lc9Wm6PcjUpWKSUWd8zp/O/FDrLn4bXyyj/S+FW63KnW9X0938pHOhMaxp/
GPPVlkLx+v39/fT3Vx0p2DGLGx1WYbxRUlAyjOo5GUL5XwpfluztiKW/PxpI
wVhQ7vovC/XHSuGRm/6GV8dR31AKv7j6ZvdcKP9LYc2awlzNOjr/S+Fn4uCe
1HI6/5N/i63/XFdHfVMpOD++eMyS1kdzKcwavXhiykjM30IKnifG3S2vpPO/
FEzMyz6OPIP+LKUw++SZ+Ef0PlhJIcb76KB99yj/SyGvusxqVRbaz5LCw9Sr
5eJ7qG8jBeUktkMBldtKwXd+7pcX8yn/S6HwE893H513yHe5dRC+fDDG/EAK
iS7Gdb+uo72DFMTCJPfbYpSTe7Xwtl4AfyDun6MUrA8OrT9B+0Un4v/ut+XB
Z1C+TAqxASoh/D6M7yyF0azOxsQglLuQ89E4KyDsHPonffhsl3VrlKajP3cp
3Hm2Z1MX7e9JHWDc11yz5hTar5GCSG7762UNygkvOzdy31vQ77menDfNv/de
0f7USwp9wtHzJ1ui/SYplDPLWzXPY3xvKWw7sua8z33EW6Wwf+PlsY/CMH8f
KbzY8mbyRB3K/1K4YdZ1U7Wb8r8U4kcpzDwzEv3vkkLWjs7pB73o+78UQhX4
UYy3mE+gFN52vryksYrO/+T86b17veAr/f1fCmaP51h/ekr5XwplgRbR0mQ6
/0tBbmXceCCC8r8U3scMHfuxj/K/FNr8F08ZTvvvSCno9y28ZkrrfZQUtB07
rpwyxfVGS2F3cPW68Xfp+78UkqMvhG8rRXkMOX+LDixsH0jnfymAi8Prf/NR
HieFK6vO/Ro9GtcfL4UxPt4FOzYgTpDCp+xRl34Owr8vlEjk95QKBpajvyQp
rC99F3/gDq6HrFMrwn6Ypgrap5D1Hp+WOsAN8z8vhUlW5Tkf2yn/k/M4ujGt
TID5XJLCSrvMda4jUZ8hBX7FA83YoeiPJQXzFQmKb+h7E4fcb/dRMH8NynlS
OBU75iv/FsoF5LwtNJoSPwH9i6TgpOqeaHiP8j/x/2dqvIieD8Jj3xePcvmj
h5j0RWKn8sgzQYgzpdB69IPt2Lm4H1lS0KtaHvjHGPcjm3yf97Y7/3YhzpHC
fN/gS0GTMX6uFPLD5etGWmF+eVK49rGga/QWlN8i39/rxTiNY5T/yXld8XH3
hyGYb6EUhnbu9BcqY3wyl4s3VjIL6DxWLIU/J5wa2+n7Zwn5fipdERNXon2p
FOaMXB+sOB3ty0j+CS8NfTdiPFIn59q/nLFBjfI/OR/nTjYN1Kfv/1KYcPTO
9sZ/9P1fCqMK/ly2zcT8q8l5E6Qr3O5AXCOFj36qTT5hiF9IQSfr57B/X9C+
VgoD/0hMJDGYX50UJpvPfFCyEPMjfeqV7/PkQ11R/pbUu+obGxTpe3wD4Y8/
c+d+dUJ/76XQc/OKbGMr/Xu8pF4E6lUM34/+PknBNMt2ePJt9NcshbHRV7Pl
FYhJXmZHxs8++xD9t0pB6FOz88lOXH8bqYfPn5n8FWG8Dim4jbu29tAzyv9S
eD54wLv9lP+6yf5zGMtl7Yh7pDAs8fHk4w4Yj8zpB6RZq+zZiH8T/jqt05O6
m77/S+H2Xd0he2g9IXU5PlwhwlyO8gEyGPGEd9mUvs8ryOCJkfWaDgf698Bk
8Ozw9roAel+USJxBLUzROMr/MkjY4lZ12gflqjKIOhFvNnMc2qvJwHhnQKU3
nbfVZZB+3+B0/QPK/zL4PLQxYG06nf9lAPeuT3J9gvunLYMH/4aYbHhI3/9l
8DTlyKv0dag/SgYbP1/euKwR9fVkcH7XyO69x3G/DGTQ5FubOLwfMZmjlsQO
WH+aQflfBp4d8THedH+NZFAQPsB3kA7mbyyDQaEFfg/cEE+SQd7l2wvP0fnV
VAZbv25Zl0XfN8xl0Fvya/wud1yvhQwm9Men6HrT+V8GtsaHOJ7WiAkv3d6s
aHMmG7GVDHhNw9dEHkFM9CYmL2s+OgnxLBlsKsgKv0f7RRsZLD+U1COn98VW
BrUOvud+u1D+J/vR91HDORDt7WXwyTdQPFAL5SCD8DKDFQ8tKP/LIMBda/FJ
E9RfJIPNR+av4JigvqMMDtzVYiXG0vd/GYxS+Bq8itaDZTI4l7U2RNcL7Z1l
oLH6Vm4zncddZKC4+357pQz1yb2cOjlCb9JqzJ/sW+HPIyZW9P3TQwYuRjrq
HUZ0/pfBwAhOz/M8Ov/LwGe7OFqB1oP1Mhh2pt29X5vO/zJovHg1+X0enf9l
8NdjnNH1eMr/Mqj+yd3+kfLTVhm4HVh6PZj2az4ySOvp+lPyD/3tkEHXAsUx
7X9R7kv2O+BLWm4c+tslg+RHumZJhSj3l0Hbhxfi07RfId9BpLN3o6cy6pO+
KDnQxPQc/b2OzDVbGWWK9akYL1QGZfvSJo2m/fh+GeyLCDTNtqT8L4PMiQ+u
nLqH8oMykGUVTK7JQf+R5Pz2Tkqb0oL+omSwaodS15CjlP/JfTj091JpGcqP
yqCiu5p7+gNiUlcf7itaY/kZ48XK4Lv8wPwOo8v/4TgZ5IozNHPb0F+8DK4+
vvCBP5vO/zLoufvYVHkqyhNl4LXEJDX4CsqTZKAQF322vgbnj2QZsGFUta0t
6qfIoMHb+Ni+Svw+52Wwi2niK09FeZoMVHULTHfQ83VJBt2XzW0gGP0zZOBx
7uLbn0pozyL1Jmy5Q95JxBzib5G1sCEF/fFIvZo4adhhJcr/MtDd8HOmZByu
VyQD+eZjP55cR3uJDNr9R6y/LqXzP4n3bWVqP33vyCD3a+axnz8u0/mf1Bfe
Y//Jhyn/y+DHVk+7FjrfkzqwyylIb2I4ff+Xwfb8spVvKyn////5uTj1sQLm
k0fu/xDd+Kta6P+WDMKOrm3puIq4gOT/Y0vJXvoeXkj8+6kub/9D538ZvAlb
e715GcqLyfd9I7FI8Ef/JTLgj3I7lbIZ8y2VwcpPez90HMJ8yLmJmCMdETcH
5eVkf38ETntOfw8ivDji1Kj5uu70/V8GNYFly8Poe9wTUs8f7p195g2d/4m8
rSF58H6U15DvGRm8poa+l7yQwWRRnn0+rc+1pP7LkzcEaWE+dWTdugv9n+Xg
+uuJv6oZz30CUP+tDOqWr/XXsEP9Bhm8N9+zzPkd4vekfg+Z6qFL+a+J1I+M
fb4NSyj/y2DRzDDXUdR/sww+vPKov1CL9l9kcNR84yJ3P9y/VrK+qDxZPu2/
2sj9iKtaXv8d19Mhg+g3p/dd+47+O2WQ1XNk7/ETlP9loLd5VunUS6jfI4PE
4+1P5q+l/E/+zaw4oZNB+Z/4M+tekUH5468MIrmjTPoXIO4j+9XdXRgzGvMb
IIdc1jq/SDrvKsjBwk24pIrOr4pySGnTDCj2RX0lOYgXjzKo98V8SR2bcrGP
+TILv5+qHFqKzbl/7lL+l0OcyYjm4n7K/3Kw4yhv4OijXFMOx+KCb2xJR//k
O2ptG7T++hbE2nIoXW1x8u4Y9K8jB3vrqhu9oZjfKDlM5uWES46hvp4cBqW5
6W1XRP8Gcth2Ost9xlE6/8vBK1x9TAitj4Zy0PDauXZeK/o3ksOJKE2DGbtQ
TubkE0q96ZMpn0ySwzND1t2M04jJHLVCt8RvqgrGM5fDPc2Ak8tj6PwvB1nO
Z2DQ9wdSB4/uvy99uAbllnL4Pm7O5iN0f6zk0DV/7GDRSczHWg5r9my4vIb+
njZLDr9nlI1UXkr5n+yHr5C1rwbtSd3c/pux8UUY5kPOeTNHV2/uPsT2cugz
FW6NmoT7BXJQW7hud38V2jvIwdxsbFqcG53/5eA4psB98TfUd5TDuw5tK5Ni
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
7Gw86vj+H/ev6tqXsmaST0X/3/3Nb8Ntxv9ysJp1q8tfXn/08286GwYMfEDz
H0T/TO86ej3vxyG0L/Dm88d8ng5jfLtk8G8g9+uOyKG/i51DJtczR+VQZlL7
YUZ7Wp9juH7x+QbfxtB4/I6SJePHVMfReMzT6asOvBjD+3lCDgfHTRvyis9r
uhwuJq5+nsv9tJMYz36tq53VgfgZuP/xt3+teEzfnymHdUfH25/jfkwW1gvf
h23rzP2BU6hfstvuzSKy77QcfN3kw/8wnse8Mfp2jsUYf9KfLYfLp610SjxI
Huuyhl1+J2o7kj25crhV3X79W37vJsD8s2VyjKCY9Amx3nCcKe1hyfgfz5vt
aavYR0RjXe4vmjC2ZgnNJ8H1Dd+51pjraSmej3T7whgx0TI57K0bPNnRieyR
y2GG1LtZewLxFXJ4vODchaebia+Uw9nLPo+q+D42Tw5NL1uLrvD658tB6Zzd
6ym/v0Y/TV/WsnyFLvELsJ6ybL6uPEz6z8kh5KDtd+01pP+8HM5NG39nPfcz
L8jhwZtnw6LWMv6XQ98ppxu1DBj/y+H5se6D3lwn/mU5PN1fLlnD+fYK2iu7
XtS0kfiFcpink/R0Aeebq3KITDpmXuTD+F8Oh/38DX9Fkn7EbfoLl+ZOvUD2
Xcf9fisYuXoD8W/I4Zf+6ZZ0Pm830b9SRr/eH0Y04mx9o/dpnbg/jXXQ76LR
DZu43sE486b17nWL6aT/DvpLhu+ddXwfVyKHSQb3y3euYvwvh+U7xg1pGUn8
MsxvN3NaNPj+C+uy7J+ml5P1Gf/LIa/m5ttCvl+4j/uxIH2stIj4DzA+dKlW
OuvR/A/lUN3cpymN9aFfjekzLXvOL5J/jP4y7pS6djLJl8vhXUODfiS/h8Rx
X6sGhR/k81SB+Who869LEYz/MX4KEl76Ml5/JoeU7YlHJqwlfc+xvt5d8nDl
BJJ/IYfG/eoLIoeRvpfo/0O/TJ5qR/KvsL62m3UuhuPJazlo5mW37OV+7hus
54Id4hZzv7MS673cPmYLN5E81oVT7o04Z8H/3uMd5tvImTb3XxKNuNTP8t7u
ByMZ/6M/3rpuJb9C82Oc+bt2/rAg7n9+wO/t9k51EOP3j3K4N0rl9sn/w/9y
MBG4fhrG56kG6+GFj1q7bSD6M+azXhuO6LL/1WI9H3Ktoh+/D/wiB1ePhENZ
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
jXkhIXDdqy3PSN4X40XBzeoHwdz/V8Cxsb7W8VXc/1eAdH38365cn65QwD1P
uW4x3//xQ/+11Kkee5/xvwIW9pe3zR7M+B/XS6u++aAJl/9Lr0J9NyL3rLtF
8liXDLToPrWUz6/XoL82JNq9TWb8j/F4Tf2sNH6edRhPrYI0vX2JXo/+E5rS
qc9Get8BOL/RPTXjp8TfgPmrd5NV7w8w/lfAqxVXlCVs/0YFOJXpdcl5RfKb
MJ5MG/rn9kWiNyugZAvML2tO9mDdXBK1dvPngcTfogBZVELRKT6/xbh1zdMu
oj3344Mx/525cPs/fYb/p9EPjWvuj7FewPgf/fWTyWZP7g+HYHw+6tL5GvtX
qAKG5L+8O477yWHoX7+vzvs6mebboYAC4WPtJz7v3on+YfHjTgnX/+EKMN+y
cd3XJqQvQgGOTW4Nu5hC64V1se9JWx+/ROJHKSB03v5Tszif7sL5g11b9gjl
/r8Cupu82KseQPIxCqif822FHvcXd+P+sbGYmHGF1icW9+vObkt6c38Kceqi
9zVFv9oRH/NK5vTfB/ovJnviMF5fmnd7bm/ixyvgS7gqrC33hxBXFMYWW5sU
MP7H/TG/e/rQYBq/H/2pY6Zm81ZkD7732JaLFPMXkDw+Z1X2oBEdRzH+V8Dm
9GqzNaNIPkkBS26YyEL7M/5XQH760KLV3C85jPXRnQvPT3wn/hGMT2Zfj+//
H/7HePltwu5enUg+BfNzXo1CHEf2HUX/jFhYtIjv6x7DfG55KL0774dUBeiV
7FsvTyL547heQyZomZuS/hMK+BzUZk0a45U0BQTbDZ3sxfHuJOa/afsH6LqT
/nSsR/INTsdxvDulgOJ1IWPN+HuN0xh/Cn8Nz3rK/X8FtNph+bKOz78y8P31
zHSaxeffZxVwSHNT0NnRNB/WRZesDLokNzL+x/W7Py/N6BHjfwXEaOf/0+L7
pBcw/mkNcjA6S+PR72vexiTP5/PvS6jvVt80txXEz1LABefizt7cf5VhfOuR
0SeGv9eTY355Zt3NlfuTCszvZ5S9V/B5sYD1iK2nbkU69/9R39JH+qF8f1Sp
gE8+ftoqDfp9cEkBuweeTz3wkPv/CtjgaR+bVUH2ZON6H1lZGdmGxl/GeLlm
5P5stj8H40uvGU+9Ge8iDjq9rrIorQ3RuQqIcm3veiWa9F3F+tn0X9OD3H/M
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
yf+VQGfx7JU3V5K9/zA+hq83cLtG8nUSNIwsb6PkfnC9BD4LfTfHa9H4BlyP
7d19PvP9u0bM37PrjcfrEb+JClIWZX7sz+dPTVVweeZf09SBjP9V4HpTtlzL
h9avuQo6+L2238z7s4UKlkzZNfGsD+lrqYKs5a/cxzdh/K+C8ozC7Tn2RLdS
wSGjy70K25M9rVXgNTZpySmOJ21UYLDjAXhx/aaugoTiPlZbuH5tq4LmgVsf
9ub6E+NyTWfNgROWk3x7FQzuk1I+5zHNp6GCR35W7Z/xeXIHFQzSFqttuZ+q
qQIjuxv3rzB+6KiCozbtfE/z+VwnFTyfOzoy6yTxEfer6XbbGMbxSEsFO99P
i2wzn/v/aP+Gu0eGDqXxGCf8Hms7fxnI+F8Fb1UvqwePo/XSUUHES6dPOiOJ
300F28W6BAXfH9dVQVXszNyPESTfXQVf6oe/7cvnJVgXNXMeUGZwneT1VBA7
d1bL7SVE91SBx5pJm+bz94ZYN48wDj6x5gWN18fnMXmrt8I47790bxXIAj//
ecTfPxiowL//5ZWPGY8YquDx4OOHaoO4/6+COYcH/1y3j+zro4LMsx8/Ttdj
/K+CROmA7jM+n+inAsf94VZ7+Pyhvwre/L65JTud6AEqyOjW5q7UmeiBKjg9
/93CLL5/NEgFwxstv/eYQfMNVsGWPn2/HlIn/UNUcEVtkf3YtWSfsQr6BaW4
nuD1M1FBx6BzG3P4vripCgrvd/lwRUbzDVWBj6XVh2SOP8NU4LKp0z43/n0w
rEsujcpvu2wf8RF3BesUxY14QPOPQP/JKMvdyOfvI1Vw7921KA3Of6NUkLuj
JOV8NekzV8E/vQuGsJbo0SoY8OBZ/LerNN5CBW3GBnYbzN9jjlFBa5tzK4zV
SJ+lCtQtXiUc5PiHOOfy6eEv3fh+1VgV9Kz/dzixF+m3VsGUgR/CXTgfgAo6
5Y/J9DpG89moQFyg+fVQf8b/KJ/7tbP9PO7/q+D72oCTDdWM/1XwVJm6tvYo
43/0n6K/s8tuEo116aq3A6YWryJ6ogrMdgrVJ7m/NEkFv5pqR7/k9Z+M+yeu
w9udJWTfFBXojQsce4Xxpb0K3HSnDNP7SfY4qKBe2uzTJ4jkHVVwzWTHm2g+
73BSwUzxX+c+XB9OVcHuNxppMVzvTFPBjlz1jin7iY91/dqj+xP8+fuKGSrw
nT5b48tEomfiek/XWrj0No13VsG3JcnHN9mTfbNUcH6eFJ13jujZKmj/8uOB
8Sqyb44Khkx62X0af281VwXVsHzvJP5+ZJ4Kpl1VXldMovEYpy6vH6NbMIbm
d1XBwrHWP/bk0ng3FQyddd7qEePD+cg/XiozGUv2uasgdfqzxwXsLx4qWL16
b5ekWhq/QAXO/c2WzeXvyxaqQLB6NjKxLeN/FRRr7BvSns+/vFTw+YV5yBFe
/0UYzwKbTF+QzPhfBclKnfG7uF5FXJOwQuPxmnvERxxmc1rcIOfzn6W4XwLD
PTt0od+/wLp8yfxTTkEnSN4X988ltS8rMmi+Zbg/0+syVvH3xRj3db07D7jM
67NCBX1P9+rWiuOrnwrSlcau/rX0fP4YDx9Ldtv4PvRKFVz/42vfQY3mRz9d
e8X55Lo0mn+1CpZ5phvodST+GhUM84tb7cL3pdfi/jK9HnKG98s6zJfWYyzG
ijT/enwf5ye7+Q6g8QEqUJ5/8GHxUJLfoAK7rv3nLuV+eCDG156OF0OPc/9f
Bd17JFV/usH4XwWWNmnuPYcTf7MKTmyfPElvKvGDVNDH8VELLz5/2KKCuq2G
X1awvVtVED9ylJshx69g3E+j9wwxciX5bSq47XJ01Xc+H9+uAvPAQz9Xc/0X
gvkue3DcZ8bzoej/E65KES3p+cJQ35dhn8o0GP+rQNtv/CJzxjs7VWAR4zu7
iL8XCMd8Ma7U19iZxkdgPXBYq15TIn4kjk97eamG709G4ftxDrZ2WED6d+F8
zyu9/RnPRWM8dZi9Tyec6BgVBPSdts7nMunbjft5xu/zV1dx/18FKmfbCxf4
9zb2qOBl1ma7t170/hC3b3xtq+65geg4tD+/o5dtO+7/qwAOqQW+YbyfgP50
y6Mg6THNv08Fefn6geVx3P9XwQHt7zFbnhD/AMa3WoeGkYvp+bHu2W/idPsP
9x8OqmDiX61pQ1cTPwmfJ3a2rjrHu0MYL4M7HmqooPkPYzx8Otg2qzvJH1FB
N1Pr+8XhxE9WwdIjpscmXKfxKSro/ajffefhJI9x3Pf0EdPh7vR8x3B9Ps0x
7GxJ9qZifXLGuSKd70cgTtzbY9jnbO63nFBBeM6r0TtPk/40rNde9m2yoC3x
EUdNfHuk9XFe33TcD8kHFCmZjP9VEBP3qlfOF3r+0ypQdNOqLqsmezBu6+3e
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
JQ848ZzzfVC/aqjMObmd5MjeKrGV3Vk/gByKtW1ihodR/5EXtNfxdGT7y0YO
h+0ejLJ8QuOP/NV07Zg/bUk+Xg4XB/V8cn0dlUf2vF5kX8r2IvpxkZdKV0RW
kxzZdesReTLnJ6KeUdMOXuFP+dUC8uOEsN1VfN5uKwfDpPFbd1+j/iNfeZ0S
MTqR2ke/b8vDDgmOMpIju7Q2Xl7C8Qc7ORhPa3vq5DmSI9/o2rAxmO8n2stB
U5ySNb6S5h9y/uvhE1+voPpxn+wzdtNVZ8r/EpBHTy4fY1xJ5afg+/bvbjx8
Mb0/5Kr7Q/qZc/zYQQ4bU7SH7qfzBwF5ufY3zYscX3JE/fVR07XXXeofcrJR
WGTXvSRHu0/s9nHtugAqj9zHy1KrJ9/fn4b746E7W+Ytp/4jPzINtxLYv3HC
8ZlVJOtD+YsCss7XscVdH/P5pxwmGSzsXLae2kde0tr7tDyOz0PR3jvsnyFv
oPaRVe5o1N06RM8/A9/PJrcRRXdJjlx/yj+2dg2fl6K9MK3hgppIcuTQiMUa
dZzfPksOysmTfaNZ/yO3krjbB72h/uE+2+mj7vtd+ST/j6sOH1E6TfXPwf6m
zenTJY/kyA1Ghzdai1TeBdenT2KvHuQ/CcilDlC0jfXPXNzv1jl7OeTR+0Xe
vSjjZ2Jbev55qP9PdtXUqaD6kWMuKRoq2L+ZL4d+zy5FtfpG9SOrzjBOirjL
57VyqMg2NawJoPLIKibBuUl1fH6L+2G1TCfkHsmRV+1pSt1J61myAPXhoiS/
dHqfAnJJ2M0dnQeSfCHaF80bnj0RqDxy2LuiI2dY7i4Hh6CX8WHmND+RbbPk
bq6cj7AI35ens6FbLD0/8pwnHtb9+fxxMf7eLL1glD+1j3wt7rxOZX/q/xI5
jIgqNT5A92EE5Ox63c4mnD+wFP2JEw5zn9ZR+8jjxvbUmrWa+rcM51+Jc8dr
lM8jIOcWKrfO5Hz15TietQ3dVA1Ijlzb7nB1Nt9v9MD36SMkTlNQ/cjnqv1/
HuV8Bk+0X943GXQk/19AfhwfUh7L8QBcl+beKid8mv+XfyUgG6yqkVdxPttK
3A+d2sbto3ilgHxmnDS5mL+ftgrXE/ifbONI44+c5LXFcUIBn1fj+2kMzU5p
l/E/OXLC7bMaP/h8fbUcAm0ea1RokBy5/6jUDRfVaXzQj7J/skG+cyG1j5xk
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
ahpxrYHOoyThCmjovC8mYhLVj6zWK/XMM8qnkuxQwLd9Pwfq8PkzsmHq/vkr
ZpF8pwL89YYIfWg9CciqWsfXRvP9sF1on4x6tG8X3YcUkANGfpxqt5P6v1sB
bXrtuXBqCNWPfGT0p/aedN4ricD98mJHe2te/8gOq0oMz/L5IdpNFgs2vTJw
Izly3xV+bS04/3WPAj5EPhxXMoD6h9zefahGV2pPslcBs9eOeNfuCPUPueXh
gaYJbUiOej+nY59US96fkB8Z95v0jOKtEtQzDzPytzeEkBy5pkNmoT/1V7IP
99PGR7m/B5Ac2aebba8JnL+6XwFGa973fVxDz4/c7XLUw2vO9P4O4HrbVn18
E/tvyO7/5P01H1P9uG+9/tBil6SU/T858rU9eUu9XpL8kAJObFxusGYgPT+y
64o5k28WU/uHFbDhvvqUwBfUPrK8avLcYWrU/hFcv9WxEwI1qf/IN+37x5Rv
pvGJwf28qmvkPM5vQ1610tFd+TTJj6K/afzg0RyK5wrIC1TtMzrUkjwW7bc+
Pi3RxALy3AuOd8ex/otTwElfYyEiktpHLvs31qWF82fi0d+YnJ93g+tHjrGq
NnjL8Y8EbN81RDO2isojv245afSiN9WPdkLKZbe/+4OofeSao72Dqjj+fhzn
55whwWcp3icgt7YuVf2/84NE9H9Mfqb8UafxRd6ccMpo4GwqfwL9s7CnO6YP
p/LIaga6C2z4/B7tOmMn15kudB4qIGcIjU7X+HzrlALeXJ7cbrw21Y8cP/3q
9+5s/+I4K3o0fujK/iuyfcyvvvr8/agzCmhyeHTOmvUnsvX76rtjqT8StDMW
DLQNzp9J44Mc0nX0ij1m1P+zOB+DGxbVGFP/kUuKjg2fxPrhHNpTB1r59WD9
i/xn2ZiV2Ty/zuPvqrX3/6Z8aQG5VWRTXTHNR8kF3F/iKy48T6TyyEp7nl5f
xe//ogImmRu9NaXzfgHZKtRwmB2vn2Qcv5Ki2JCRVD/yoKr+v47y/c9LaJ9a
VwxP5vwUZBMInLBzBD3fZQX0MNpfeo7jX8gDNLvmRLWj8lewf30cTpyg814B
OVE2aZrRFSp/FffXENNRO/j+DLLjqy91/2yo/ymo7/duOJzG/gHy9LW3VZo2
Uv+vKeCX+4raxk3UP+Tpyyr6i2xf4zxx0qo7sZ3OuwXkk6OKvLLI35LcwP0o
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
LQVqH3jmM6/F7iuo/2OwfwQrNfeneFcRHKjsw/rRfSshFt+7h16GiiblD556
YHrcOxdKDz2pSfXqsGHO1D7wlfeadRu1SI55kaz3y1ub4pVE8F71yD2lKyl/
6JETJ/peftqP5OCgbmb7QhKo/cdgj/WL9XIge1EEBymPE41I3xKOQz9cvOFY
Gb+fA97u1miZnkzpoffsfLz0oCa/HwseePb5Cl1HGl/Y56YM+TQ4+CrlD37d
/ZfLtC9Uv1MSu7bvV4mNGqUHL0wY98DJjfKPgz47qU2dby6lB3eorv5bM5fy
j4f+7rJm+WuKBxfBC3JmfZB5/MVprG/rXF3+a6X8wW7tHscpkr9HSEB+MQkF
u/n7jmDDPZGvDZ6R/Az0nS13ex7aSN8XvObLHZMGLk+UWEly1ytn6T04ETw4
9VW9Etf/z2I9z9C5Z3ma6g+OY6sPm2VQ/ZLQf/0j3ZTpPo6Y9Od8K7Dfeg/q
f+jFd15s8bu5kNoHXqH4VFGP3484L7HU+7KKHtfPwIOuHrmtw99nu4D1LOJF
t5P8/SlwqL6LgnI81T9ZYl+KdZ/azqH2gT+l9R/xopjkKbDPs47a1XL/JXho
dJ+IUj4/LkpMOvjMUz+L2gdebhEaGbKJ0mOd33mhw7hdrpQ/uCW7Yt0J/r5u
msQe/pcQls3LB7cZMrPx6RNKfwnr+RoT0+uXKH+wQcASiyvkzxag5zUtt3Ca
Sva+CM6t3BAWys+XYfedMx/VbST3P4K1E4K+73lP8nSsJx2+u2by+HjwkqSG
U///fvxVtF9gPS7w9Qnc5CbPPtOL5BkYv+NdNQz49wUP0N3s3SGa6ncN+1V2
31+RoSQHz+jsYXiJn89mSuzRX/nm/WpIDj7gODzsEsXTCrBjv/irHhvC7U9w
Uu6t/F/8/PUG9KExW/IT1pAcPDMq99mJJTR+siTW6YVnr6/kDxXBbc12b7xH
8TBCNvRj7Uc7AiooPTjDvpd6GX9/8ybmj3NI1EJ1ir8CO5z/PmqZCuWfA/1P
+2CzXxtKD37BPDdtXkntkyTmrlT4WlIgOXjAv5MTB+0kOdbF+j5rhn3k79uA
XxYPPJbP73/ektjHVt1NClw/BoflN2lNtaXyMc+WTa3JeMTPt8DBF36cuZZC
6fNgL9nUlfvw8QU+rX9hnVsvSg87uuzN98m1i0kOrmy9G+3kR/WDXRPjcCm2
O7+/B15hNKb5GteP/8N+rjVU+14glQ9uG/XmVNty+n53JPY8zlaxKz+fAA9b
2vHhu3Ykhx1eXhCZOojiBUVwyhTV41Z0niwUSOzn6Nd1R+i+hgi+8LCvvdkG
Kr9QYhuTpurFaVL9wSnZy96pkz4sFGH993Va2I7rd+C8VXmvMsheEe5hv8jZ
qZDE44PAbmqlzSnkTxbuS2y8jZ3pwgSSg+1/RTlPJ31QeIB/L22jX07nhSK4
cdiCyTaFVD70XicjUSetifoHfDs/a40Dfz8edmF1WfuDnS+QHFyw1KTH6fXU
PvSbukaj84UQKh+8ftVt3eM8fu0x9CuDofGlXiQHl+1/bBPN7Z8nEuvdGPYj
iVH+4ETfrj8T+ft+TyWmMeJ3UZvZJAfv2P3qRg33H5VgvzOZcagNtz/A+7MC
siby89lnEosofnFLneKxRfBgnb1C/jaqf6nEjplK6kl0HiaCS4o6njSRqH+f
4/sczUyYuIHk4JDs/hEFGiQvw3q5vX5tFP8+4NdPll2ZupDkWAfGmGocVubr
C/j54JNb4kNIXo7661WqvDWn+oE/v11RWM/jq15KzEWnqMsSHj8Adt1u9LMt
6TPCK+hnnkOKrrdQ+eDqkGP7Z/Lzo9cSO2kS7dPA48/AWmLQw+7893PeYP3W
sl3b7g7JwRWCvnUqnXcIbyU27p/hPyyeU/ngmZoz1J5cJnkF/r9lbFjMIBrf
4K7FYau30X4o4Ltknu6hFrCL5ODyFVWhS+m8R6iC/jdTsWoct1/BypO7RPei
+2JCNfarL85DYydQerDLu5Kq+TRfBOwLt1SDggL5+1TgkbE/3gUlU/1qoG8+
L7I05f438PT2hWZn+f0W7DMLXB/E5eVQ+8Gr83xthppT+g8SU7sVqexI5zUi
+Im3ncFdfr/go8RMlYZXRPLzffCFQfsPjaH9UKiVWOtfXs/UaLyK4BPnw/od
ongpoQ765ODO+Y3cvgf3vJmvvY3v35+gn+0IfLiTvw8Dbjm595Yu9//UYz/u
HFUzmOx98Q/bVH2ez99PacD6b9fcRf0a5Q/e8GxoZpkt1e8z9MecLAdzkeRg
e6tLg86eIDn0QIOxPsbn3ah8cO76+/9te0r981ViZx6/DnC1p/LBseP9u9tK
JG/E/u6nNdqU++fAbnHhmuZuJP+G72fvVLiTfr9KBKu3O7VsTRiV/x37mUZq
6EE6jxDBz6wLhl3j8f8/MN//OawTSvaUCPZpv+NnchTJmySm/2X7PR8ePwT2
s3RzqOL2L77DbLsfodLflB48PeLYfUfaTwTYEbfytA+7pJEc/DVI/8aPV1R/
zLsW4/IjGdw/AvY33vnZYgTJW7HeP1tzotmS0oPzbR73UDtK8l+Yz+V+e869
pvTgWTXirxQeP/Ib+sw0hfKn/H0dcE+nEw/OPKb6CTLruGlau3ptah+4pdBQ
14r7R7Cva+wrSvPj+zv+dvmkafYoh8pXRPqXyzTqB1L9wNPLC4fJnpQeekNc
qqfGaTqPFMFR22K+Tebxa0oye6H6e/dKf6of2G2Py64gHt+oDO5TdG+XK5UP
zmEzhw9+QOW3ldlVqy8P7luSHBzVs0gwLKXy0Q+5Y/ZMMePxOeC7+2wMBqwn
eTuZ9fW6G2hG58EiOMfpnFLvOSRvL7PQuXtOTOHxgWDVsN8zGP9+HWT2tW95
l6HcPwDevXm11O4fkneUWciuTjVt+f1vcJVN6sWRPP6gk8x6LIrf3jeR2g+e
aXBlokTrvdBZZunRU/Nt9lF6sJh52MX3AuXfRWYLPns+zgum8sHzwg0LXnL7
uKvMUrzazvknhvofPCJtRu7AcyTHPFj1K/feTb4/gp8NzupVxN+X7Caz9t72
FaYFVD5YUjhzLj6Ivo+qzA7XJrycRvuhCK44aSgN4vptd5lZFXm6lfH3fcF5
byyLZ3D7Gnb9vcM/Trry8yOwPO1NijHFAws9ZaZUMmWEUx7JwdbxWQ4N/H6M
msw2O7kPrG4kOfhFnEm40mpqH/TGdgp9tUJ5/Dx40TD3XGMeH9tLZk7T5OHD
+fs24Ou37v71pprSY58++rH84yy+f4PnbL741SqG0veWmVo4qwzn55/gIak1
Vuo8vhL7xnDztZlR/HwObKg/rGLNGuof2Dl11UWz68mfIP7hjT1/+qjT9+0r
s8hNk9/Wc/0G3Il5uKvz+Q+739dmeEjBJup/cIZ5u6QdM0neX2Ztmt90nl5H
7QOPEbr6tp9K7Rsgs8k2bxwdzlN68MXYkEm5byj9QPAQ8WYc+atEsJ1k6xbU
9n/2gjBIZo4rNZz2jyU5eMLsS+/+3krt15SZd4dzDi30/0Ww2tyo7r5nSK4l
s8/eWhoL2lD8FVjFPOJVAJ//g2V2Kv143LRayh/s6vZyi14r1R/rlq+re9dF
PP4VfCfqevXIoVT/ITJ7tV9Nz53iMUVwec2x5wu5f2ko1qcR77GdkRzsf+XK
2m/kDxeGyeydT1jsF5rPInjVnYijqRLJYbedHjL7Sg4/vwMv2DX0+EU9Kl9H
ZhHT7OYrc/sHnLzAIKwNxWMJujL7Zth6NI/bD+CG8tGb73Sk9CMw/r/1O5PP
7Tdwytdn2sP5/fGRMjvbXKs8h5//gwuc9o44wc+H9GT2qClpb/ANqj94Vmbo
d0b3vYRRMuuma1UeTvFGIthvXYFqHNcf9GWmPCZ1ffS/lB6sK+2IPkb7tWAg
s8WWiQGrefw3OPrHsoJlpK8Jo2W20lWr0yd6L1AE999QnntyPuWPem8v/nDz
OPffgd+utHrsz/1nY7Eea6YEr7Om9OBxT80clvL43nEyY34NXp3JnyuCH0d/
U3EsI/l4yCMSZ7fh8Vlgg097vIoXUv0MZfZk45f4wmCSg10CBoea8/FthPqm
Vlp+4Po3WL80fptVCeU/QWY97dXKHS+SHFys0DxmN51nCv/gew/WOajC9Qdw
Qnbv+53IXy1g3CZpt721N5zkYL9Kp27X+Pn9RJl1/lC7qCSV5OD9BbtTa7Wo
fiYy66Xdq2cAP58Ez7CvrO9M8fDCJOwHVxsu5HYiObjAdGCM+zhqP9aVkENG
ty/SeZYIrjyhV7KG4g0EU8hvBN12o3gtEfxymYKFCb9/MRmslvVyNo+vATfq
2Xvv4+9rmsnsd81k9yVkr4vgfbOOi89JnxOmyCym71ejZrKHRPAktwFDaile
WTCXWbBBY9NqHj8Onle35O9TeSTHOmbrn6rtN5naB9aLMLsh9KT2TZNZq9v0
fA1+/w18dvs5QxNNKt9CZhbskL1hHZUP/pijMMSD7BUBekXiwrTe/y6i9OAP
ST1CWrl8uswsR85bMDmJyge31NbpaNJ8EbDuH08wDjhoxP3/aH/BeUV9/v7+
TJkNtJicL1E8iQh+9nHSHR1+P3yWzA4uubanju5DiODR7R3kIXz/xL690L5J
YxZ/Pxx877qX1prLVD/oMVP1S8VEiicV5/xZT6ymavWm+llh/Yo/Y2rD9w+w
db7uXxsGk9wa62NzSWkrn7/g1yWfjtVsJrmNzM6bLam0kLn/X2Ye5vO/BHtR
+XNl9qC5rbcdtz/BRrOLszI7khx2xDe71pl/JXL/P/SjWUqn8sIo/3ky09z+
YvH4QJKD67scCmrl7wtiXnWI1Y8N4P45cO10vY3d/Ln/H+uTdeehVVsoPfhS
1nb9FeWU/wKMz/nTHHT4+Ac7Trc9P5ufD2GdMy6fEJ5O5/Ui+O8yjR0b+f0D
B3xfJ88RJ8neEMEH3O3Tg/n7qLDjb+UrHPiYz/3/0E/rN5Rs4OuPI9YzDe1r
73h8IXjrkQGOv29S+YtkphC+4/LheZQevFWn+wpHPn8wLjyNj98qraL04LNu
M/0n8vPTxdDP1h8ZsCWP0oP9N00pPMXPh5fILC0zOWopjy8Aj+iuu/rlBupf
Z5mtrtEfe56vH+Cf1T4OSu0p/VKZ2StMfH+jiOTgC9kDRkzg54/LoD+WDTQs
4b9vAB45Z8aXi3TeJCyHfWH3OzaKn3+DbRZHexxLp/5xkdmGHgEa4d2pf8H9
qmZXRimTHHZBQ7p9YxrF+4lgn2M6Rb78/Qg3mT3f/D43/QflD1ba3dJd2kj1
X4G/R3rGZ7wiOXh165Kupgco/5UyG/Qytugb/30fcFGa1mgL7t9cBf3w1J20
Mdw/DS5K6FSXzeMnoYdaKHXR7PKd+gf8l90BZX+KVxTcoZ9V6nl5uFJ69z/2
xc9xwRNofV8js7WGDmFnTpMcPMWrfmIh9x9hH+xofC+0mMcfgs0ipykY/U3p
18nsEMvo0n0wycFRnVKFZ1pUfw+Z3b/0O1rXjvQzcFpggOdGOu8WYMdNuvK4
MceG5OCxtTdzNnP9GvP83+irXw6+oPaBH84y9XrL4x9gZ8V9nvGi4CeVDy5P
KbY14vs39kntfZkq1nx8gxs7V/9exs9/oHcvV/QfFcXvd4IrErSSPmlQ+/Ad
7139XqFO9oAIfqX66FoN1182Yf8IX+3VkMb9/zJzyApZqkT+NsEH+nZex8/p
3L8NntvSPPf6DOrfzbD/nv8ue87PL8Hrpjul762i/LfILHNQ2Q3xNcnBYeH/
lt0dR/lvxX4/e9EvA+5fBu+cqH1ctRvJfaEvmc3TbzKh9oNnvHU+sp3b/9ug
f+c8PfXEjeoH3jJF+m/5Q0q/Hfr7AYOLV2i+imBJxetHBu13AtaxmpTrH/wp
3ksEq41sHBDK4ztEmWmNPz937Q2Sg+07fD5fxO0Df5kF7g4OXNpC9QM7vXjV
yZr7jwNkFmva/M2Rv48FLl5549Ki5SQPxHywtes27wHVDxx1euXa9nEkD8J+
npDe24e/LwduKD5nccGA2r8D9V+u45Yzn+oHXrXLyvMi+RsF2L1TSx22DIih
8sF9z7eJkPn9rBCZuX/1qytQ5v5/zNdI7/EV3L7bifq7/fCrnJjH/g9hH4vv

     "]]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.45200411925*^9, 3.45200414734375*^9}, 
   3.452173033015625*^9, 3.452265146375*^9, 3.514552214251375*^9},
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"},
 CellLabel->"Out[45]=",
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXWlsVNcVfnhmAGOMiTHGmMWDDWa1MU6qtqnwwhhjIGyigaQtSoAuoDRA
qCOlWSr6g6iNQpVGbRMvmKUuaoXSUqESWkVJBGpLVSUoEVVTpDYpSUMXQkKg
7LY79953tzffeW8GmPHQICUvz3fe+853lnvuuctMFq1uXfeVB1e3rl+7Ojpv
8+pN69av/Ua0eePmeFNogOMMWOc4zptRh933xW/dS1/8n7717MJaUrtfyf4T
YTAhdhdid2FwV6nucnyfm+j7aerPlQF+A33fCBmKOfxNfif/VSrc4M+4geI0
zM8Um9SaQ1ZzNMOKlGdYXhTo7Pd8OG38nHsAlVC6TDzQ0R6XD+XcipabJ1ru
TZHKzWLi/3d5WRRCX/B55PpHjgn40bT5MKyJ3Fj0CnYXShd6FsXDF6/B50mF
QrmnLa1x4JGdDnt9gnNGpgvbiRkKnQpg4rQVX5/M0JkiqPSZj1SxaxITMT6/
yWF3/hPFSerO/7lkJ4BRJTei2pKaACJl+bUuM59PFp/3NtS1s2f66me3i8/r
xec8Drl/7mSXfOut+NNt7ltt4i9+bVeSBgHpQ2+19VvbbZb7Ti5fslu5LwLc
F8ki6rfalPuMPn1pbmMHd9kg4b6LTXO2q8dnAojP3uA2i1LE/Oj04gU7TGqn
71qwS71WlWlq9kdipAlJ63GCA0EH4NcaGkeMgqHeRoHhj1NN47gdbdeTW1+W
WNBs/DrDwOEwbpZt+cORE963E1lMo1nkAhaDKRaTaZw80XZ+XqxTWZfEmUTj
5AMvuThXG+s7bJwKGqdAtJ1d0LxdeWkw6C/8OoHGGS7aHt+96zVln1xKrzIa
p1Dj9DTWBeCMo3GKRBtP49I+QwTOc9uePmzjlHqjpli8ffTLq/eqt3OpqBlN
sygRbS9t3rRfWZdkUUzjjAZWyaNwimicMbo3XJ1Tb+EkWreQxhkH7DNU4Pzp
vlV7bZwCGqdM26e3IQgnn8aZYHm7zcRJtE+e19vl2rrnWpq7+Hv5lFVyaRYT
tXUvNfF+qXASWQyicSpBXxpG4YRpnCkaR1mFxPGZYEzVOFdiDYJPAZUjHGcI
+08SG1KogpquRakALQCUewxRGZwJhgHlKu318808qyvKVia+IlDcAcCCT8ck
GVGdSVO1HHlJoAwFVNNmVV4fzQQRi2x5Qbyb7wN6/StuOcCCtdqCb6y5fy+b
Gjq3gfg8J4CHXQOJa+bmtj3yk+6jjBHnY3j85DKRHCVfK8F+nD39yVXj7ZV3
72FEL8yNdTqztBp/u2fFHjYGOsNB4J4x+lgSKxMoA+VoUa9s3LD//hcPvOXc
odtUWCKvfyDEoxw6mHYOqym9sJZWpwJhLWPV6E6khiEX9sqchg4l/j+BsJYR
QkCDGVoDd6Rqd0YAw5w0RHFJwwBv1xxWsVQIYvUfNO9hgHeNhlU1RhHgeIKG
jQFHFepyUJnDB6IIWC9x5GiXzKy64+1AWMr/agwdAez410BYy461GlYZAbE9
TsOW0kawohW55y/eECqlQ8iapY1Q4wf/m3N9K5CjpfosEJkjAcdjNOwSrSar
MZm/nVHAem/QEFE6hVjMigGzo4GwKISYEeLsdnDAUQD2tUBYFELMPT2uOyDs
H2nYSmCEauD1EhDwRwJhKSOwsZNBS7YW7O+9kVkJVL9dtDFgX0f9luY4wz+F
sIGRVP1wICzVjxTb0YDtq4GwKBWzTnAh3gFYdoKwrwhYXt4lcWINDeO1tLEC
tXpJiM9o8VYLvFCtTXh2vlifcUqBc38jhPHiLT1nkgJKYa+DZTiy8RYyPmgw
znS5GWb3s0F4GN1W9XdE/oDAy8Pmy1SZ/BmgQQgEkTt5t0aIUhD0+4U075yv
H1Sy6IdAlE3T/VgNI2OBSvuyRiWqkFKLeYj+zwUyz4JJbNuiLLhRi1LOHwNC
+gUhCuXxTRpClc9jAcReGuIhu2Pxl8cDhX9KQzTR0U71YVW4IFF7DFFcUhMd
e1absaamylUkoDtQFzS5QmFuje3jgeV306K+CXoKYruThngM+B+x6KIhHteK
yAmoUwYgOmmIJ2z7vPDEY792oqB8bqchtgBFosAWz9EQ3wYeEYqE+SEBt4sx
pX7kDbClIFprtHuuNroLq+XAMM/SlJaCGDUSjFqvRbDPBMJa8ZgLNEDdoRwY
9Xu0qBV017a0MrqDqoYmCFFH1n/tF+rdbYGiAgeYgMwSD2LaqE8FikdGtSiJ
7cOwDLPLscaO3vhnrrL/Wrr4x4rVd2lpa/xTyqWY664K4K6t3uh9Rr8opzBS
+x438jnAVprP97VWjM+2H/7gd2xOPgn04i00yjrgmqmanBpfJgGtvhUIa7nB
2ItQ20Kusfi6b/Kwlg/cWYhYj6ozAynMjHDw4dYDMomIxHldy5mCZuj0wvk7
VAWAbPOIEJUNC8DtttF4rp8CKD+cPZTFWq3cDxVWrgTJobUfKfMNlq+D7mOs
Iah5D7L3Qwb5tB0UR9bdADqnsZSgLD4ZkN5oWjz9p5p96KMVRbcYsQKGq+eh
35+bhq0gZMTiTliW2b31de1shEJR84AA55OwJA6VohzWCvxv7BR6DdhnntBw
xaPk3Ar8gmqciVpZ1j/YnI0VkJVg4FpPS9sClJhs9zxDibAc5SWLrwYiB+ox
zjRZnbUR0levq1e4P7jWEM+lPwoEFAAVx2tyarI7BVRta2j9HgWwBUDnMu0n
tjf77yWLdrFKbSpQ575AaYHWNIoOZbkpICRW0aKeBIqJCi1srhOzYJsGlLg3
EBnUfhGzjRez8RmCMx103JU0/IsaXlX904DuK2iIgxqCrxSyl2cICGvvc7k3
8J4Hviizwcwolts+/K8SoOYymuOzQBSambinj6x15WogalGgqMCZSTnQtEpp
2pGCKBAbYbkwf6lpTieLOhQWd9HIh3SCUXaoAhAtNEQ3MPlYYN4KnepVWy4Q
NTdQFDK5JX6UFs8m6eda5m6X3rWmAcGi0BzTEu/uPVprte4sS+7k8r8GgwQa
83aULqBLLiAizgSG5Vm+nob69suxhg53f/PMghY9cXDb5FISz0aNtNpdZH4L
/XPpYn1SrxokN5+vaHSRAazO5XBA95hvryuGLBE/R4vaR9vQahumI18lxKgS
rx2XDzS9U4i/nknePmBotLBgHNJlM1p+jKYGxJJYtc6KmdU+4GwUxYW6TTrc
qQXWviN7VHvTTrqshzPqtWAgre1H1ny/7Fd0Xraq16kgLw8Efa7GG/SZms0c
AN3CrVFlzzVjxyJdnT2xcwB0AaGGWja82BTr/Hh+cxfSpCp7NDkEIss9fi+3
LXhxKPJU+EpMO4k9O90bSKlnz0MgJNyD+9YwNQvMz8UswK8aslxUol0kpyhM
udtBl6+kkd8B5EaAwa4MeL48EFYS/vvK5d3ieEQOcwLaoYwaYBzrXQFh7bGM
AoV4KTBllGb2nmbGzMbHLWGzyAeLFu5kd9aq+Hga6n0biofWp4FqpTTE6yBi
RZGYUEB/CiD7fF3kdRCJpdqkynwzhe5macH+ZSZ2yzk/eFD92WenXNPKcDRX
pB2fL6mc1kyZDfjhj+okxwOf75p8pFmrkd2NKbksz/8aB2CHewP0DOBYKKva
Ou9cImx2p76G2W1FIG6H09TP2sH20cKWHfLYco/ZHWSpGJ9OcKewt3y+oXde
+8ybnEjtPRAXtB3U3sY4ycLwVVimlbqEth5jx9PJSc0w79BJX57T5a4Zo3KH
HpnzbJr8OVf8y5s27E9G/BEgfiQ9CshlEi5khk5nKYiyYEeCfjjaECX3yMtV
53ne23niodJGR/kRIMD7zYV6vfp34u7l3ep4AG/z6Y7Hge2ML1BdkN8rGQ4i
Z6QepJKx3XHadpb4oVo1zzIqt10KoiyLoYhAkz/PNwb4okAOyHsRpb1uk3PU
hsRJYm8j4WIP9WOA0higDpoQugXZhwvn71Ti5bZuY11CgBvnCh3+l2Mu5/v/
pgOqvI4BSpMBdUFTlU1/XvWln/13XtP2CTIRJXZF+hBj5n6yA1W7x4B2xpdb
1N666uZGOVesY+pmUZdfhyR67/CDD/xyvJFosoY/3yR9D/SoCjtUuSvG6IHw
ZnHI+6DHVWj/yIMZrB2lsOJs9Bld4asuVgA8WpQYlmxQL7kJVLwIvOguU1tT
L9NdXEZKv8KDMvZFYFyjSlKHvtW+YnLDL78Waxw1jBdeA45nks2qG1ZxFFwD
lDuOWqXuUIlT19b51Hde5U+YxTqHOQUCzjhPpL79kMOu7i8CXI416jziU/6f
At7n62lDQBUcjIMO8FtTCzcRfLhwwU52FkeZMYXpBr/mAZuIjhmx2uIt51rm
dkkZcq/63c8v65Ztyc4zTLlg/3iQ1RZvkbbgKV3IirDJhxkAxnJzoEyUhMAu
0GAWE8y+55tj/GAjO/IXn3HwaUC8gm4bESBukg55Cc1yGfec+S5/lb9hHNxk
gnkkB0m53p/VqgABUJLcO2BaFvgOKCFt2T59g1+nAdlB70SAHDRpKAYcE7KI
iRi4uePz4zUmTuBOShDODfpxNTSXyBE8rTEq2ZGJX0cBS4vjO1k7lpu8LX/6
8EZtkX7ga8WND98w2Zau/SreNptmFCGtmiEL1tHcBqYYqZnkljU9xuV4Y6pa
E5HfB/wvF5wB/wOQpnT4\
\>"]]
}, Open  ]],

Cell["We fit to a straight line and generate timing information.", "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"RobustLineFit", "[", 
   RowBox[{"mydata", ",", "a", ",", 
    RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"},
 CellLabel->"In[46]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.031000000000000097`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
      RowBox[{"-", "2.6346740608532855`"}]}], ",", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "\[Rule]", "1.0039693939170273`"}], ",", 
     RowBox[{"SumOfSquares", "\[Rule]", "1.2831970876417117`*^9"}]}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.45200412246875*^9, 3.45200414740625*^9}, 
   3.4521730330625*^9, 3.452265146421875*^9, 3.514552214392*^9},
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"},
 CellLabel->"Out[46]="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"RobustCurveFit", "[", 
   RowBox[{"mydata", ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", "a", ",", 
    RowBox[{"ShowFit", "\[Rule]", "False"}]}], "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"},
 CellLabel->"In[47]:="],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.43699999999999994`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "\[Rule]", 
      RowBox[{"-", "8.303783900727282`"}]}], ",", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "\[Rule]", "1.0035292777120322`"}], ",", 
     RowBox[{"PseudoChiSquared", "\[Rule]", "3.792247169463277`*^8"}], ",", 
     RowBox[{"DegreesOfFreedom", "\[Rule]", "9948"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.452004126046875*^9, 3.452004147953125*^9}, 
   3.452173033484375*^9, 3.45226514684375*^9, 3.514552214892*^9},
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"},
 CellLabel->"Out[47]="]
}, Open  ]],

Cell[TextData[{
 "Although you probably will not get exactly the same timing numbers on your \
computer, you will find that ",
 StyleBox["RobustLineFit", "MR"],
 " is much faster than ",
 StyleBox["RobustCurveFit", "MR"],
 " for most large datasets. Considering the details described above of how \
the two routines work, this result is hardly surprising."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],

Cell[TextData[{
 "Of course, the comparative slowness of ",
 StyleBox["RobustCurveFit", "MR"],
 " is balanced by the fact that it can fit to arbitrary polynomials."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],

Cell[TextData[{
 "In addition, ",
 StyleBox["RobustLineFit", "MR"],
 " devotes most of its effort to the determination of the slope, which is \
usually the parameter of most interest. ",
 StyleBox["RobustCurveFit", "MR"],
 ", on the other hand, emphasizes the slope and intercept essentially equally \
when fitting to a line."
}], "Text",
 Evaluatable->False,
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7.3 Summary of the RobustFit Package", "Section",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<EDA`\>\"", "]"}]], "Input",
 CellLabel->"In[48]:="],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<RobustCurveFit\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"RobustCurveFit",
 CellLabel->"In[49]:="],

Cell[BoxData[
 StyleBox["\<\"RobustCurveFit[data, powers, parameter] does a bi-squared \
residual\\n\tweighted fit of data to a polynomial specified by powers. By\\n\t\
default, it returns the result as a list of rules for parameter.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514552215313875*^9},
 CellTags->{"Info3514537814-3738395", "RobustCurveFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Options", "[", "RobustCurveFit", "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"RobustCurveFit",
 CellLabel->"In[50]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"MaximumIterations", "\[Rule]", "5"}]},
     {
      RowBox[{"ReturnErrors", "\[Rule]", "False"}]},
     {
      RowBox[{"ReturnFunction", "\[Rule]", "False"}]},
     {
      RowBox[{"ShowFit", "\[Rule]", "True"}]},
     {
      RowBox[{"EDAShowProgress", "\[Rule]", "False"}]},
     {
      RowBox[{"UseSignificantFigures", "\[Rule]", "False"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.452004148296875*^9, 3.4521730338125*^9, 
  3.452265147203125*^9, 3.514552215438875*^9},
 CellTags->"RobustCurveFit",
 CellLabel->"Out[50]//TableForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<MaximumIterations\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "MaximumIterations--option to RobustCurveFit", "RobustCurveFit"},
 CellLabel->"In[51]:="],

Cell[BoxData[
 StyleBox["\<\"MaximumIterations is an option for various routines that use\t\
iterative techniques. It specifies the maximum number\\n\tof iterations to \
perform before quitting.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514552215563875*^9},
 CellTags->{
  "Info3514537815-3738395", "MaximumIterations--option to RobustCurveFit", 
   "RobustCurveFit", "RobustCurveFit--MaximumIterations option"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<ReturnErrors\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit", "RobustCurveFit"},
 CellLabel->"In[52]:="],

Cell[BoxData[
 StyleBox["\<\"ReturnErrors is an option for various fitting routines. If set \
to\tTrue, then the routine returns errors in the fitted parameters.\t\
Otherwise, it does not.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455221573575*^9},
 CellTags->{
  "Info3514537815-3738395", "ReturnErrors--option to RobustCurveFit", 
   "RobustCurveFit", "RobustCurveFit--ReturnErrors option"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<ReturnFunction\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit", "RobustCurveFit"},
 CellLabel->"In[53]:="],

Cell[BoxData[
 StyleBox["\<\"ReturnFunction is an option for various fitting routines. \
If\\n\tset to False, then the fit will be returned as a set of rules\t\
involving the \\\"parameter\\\" given in the call to the routine.\\n\tIf set \
to True, then the fit will be returned as a function\\n\tand the independent \
variable is taken to be \\\"parameter\\\".\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.514552215876375*^9},
 CellTags->{
  "Info3514537815-3738395", "ReturnFunction--option to RobustCurveFit", 
   "RobustCurveFit", "RobustCurveFit--ReturnFunction option"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<ShowFit\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit", 
   "RobustCurveFit"},
 CellLabel->"In[54]:="],

Cell[BoxData[
 StyleBox["\<\"ShowFit is an option for various fitting routines. If set to \
True,\\n\tthen a graphical display of the results of the fit is \
displayed.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514552216017*^9},
 CellTags->{
  "Info3514537815-3738395", "RobustCurveFit", 
   "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<EDAShowProgress\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit", "RobustCurveFit"},
 CellLabel->"In[55]:="],

Cell[BoxData[
 StyleBox["\<\"EDAShowProgress is an option for various routines. When set to \
True, the\\n\troutine will print messages showing its progress in \
performing\\n\tits tasks. If set to False, no such information is \
printed.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514552216188875*^9},
 CellTags->{
  "Info3514537816-3738395", "RobustCurveFit", 
   "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<UseSignificantFigures\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit", "RobustCurveFit"},
 CellLabel->"In[56]:="],

Cell[BoxData[
 StyleBox["\<\"UseSignificantFigures is an option for various routines. When \
set to\\n\tTrue, the routine will use AdjustSignificantFigures on numbers \
with\\n\tassociated errors, so that the error determines the number of\\n\t\
significant figures in the number itself. If set to False, no\\n\tsuch \
adjustment is performed.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514552216313875*^9},
 CellTags->{
  "Info3514537816-3738395", "RobustCurveFit", 
   "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<RobustLineFit\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"RobustLineFit",
 CellLabel->"In[57]:="],

Cell[BoxData[
 StyleBox["\<\"RobustLineFit[data, parameter] fits data to a straight-line \
using a\\n\tstable three-group median resistant method, and by default, \
returns\\n\tthe result as a list of rules for parameter.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5145522164545*^9},
 CellTags->{"Info3514537816-3738395", "RobustLineFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Options", "[", "RobustLineFit", "]"}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->"RobustLineFit",
 CellLabel->"In[58]:="],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"Groups", "\[Rule]", "Automatic"}]},
     {
      RowBox[{"MaximumIterations", "\[Rule]", "5"}]},
     {
      RowBox[{"ReturnFunction", "\[Rule]", "False"}]},
     {
      RowBox[{"ShowFit", "\[Rule]", "True"}]},
     {
      RowBox[{"EDAShowProgress", "\[Rule]", "False"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.452004149390625*^9, 3.452173034890625*^9, 
  3.452265148390625*^9, 3.514552216532625*^9},
 CellTags->"RobustLineFit",
 CellLabel->"Out[58]//TableForm="]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<Groups\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option", 
   "RobustLineFit"},
 CellLabel->"In[59]:="],

Cell[BoxData[
 StyleBox["\<\"Groups is an option for RobustLineFit. By default, the three \
group\\n\tsizes are set as close as possible to a ratio of 1:1:1. However, \
the\\n\trequirement that repeated values of the independent variable are \
all\\n\tin the same partition or in a small data set may alter that ratio \
somewhat.\\n\tIf Groups is set to {num1, num2, num3}, n is the number of data\
\\n\tpoints, and Mod[n, num1 + num2 + num3] = 0, those ratios are used \
instead.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.514552216626375*^9},
 CellTags->{
  "Groups option to RobustLineFit", "Info3514537816-3738395", "RobustLineFit",
    "RobustLineFit--Groups option"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<MaximumIterations\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--MaximumIterations option", 
   "MaximumIterations--option to RobustLineFit", "RobustLineFit"},
 CellLabel->"In[60]:="],

Cell[BoxData[
 StyleBox["\<\"MaximumIterations is an option for various routines that use\t\
iterative techniques. It specifies the maximum number\\n\tof iterations to \
perform before quitting.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.51455221673575*^9},
 CellTags->{
  "Info3514537816-3738395", "MaximumIterations--option to RobustLineFit", 
   "RobustLineFit", "RobustLineFit--MaximumIterations option"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<ReturnFunction\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--ReturnFunction option", 
   "ReturnFunction--option to RobustLineFit", "RobustLineFit"},
 CellLabel->"In[61]:="],

Cell[BoxData[
 StyleBox["\<\"ReturnFunction is an option for various fitting routines. \
If\\n\tset to False, then the fit will be returned as a set of rules\t\
involving the \\\"parameter\\\" given in the call to the routine.\\n\tIf set \
to True, then the fit will be returned as a function\\n\tand the independent \
variable is taken to be \\\"parameter\\\".\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.514552216845125*^9},
 CellTags->{
  "Info3514537816-3738395", "ReturnFunction--option to RobustLineFit", 
   "RobustLineFit", "RobustLineFit--ReturnFunction option"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<ShowFit\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit", 
   "RobustLineFit"},
 CellLabel->"In[62]:="],

Cell[BoxData[
 StyleBox["\<\"ShowFit is an option for various fitting routines. If set to \
True,\\n\tthen a graphical display of the results of the fit is \
displayed.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5145522169545*^9},
 CellTags->{
  "Info3514537816-3738395", "RobustLineFit", "RobustLineFit--ShowFit option", 
   "ShowFit--option to RobustLineFit"}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\"\<EDAShowProgress\>\"", ",", 
   RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}]], "Input",
 AspectRatioFixed->True,
 CellTags->{
  "RobustLineFit--ShowProgress option", 
   "ShowProgress--option to RobustLineFit", "RobustLineFit"},
 CellLabel->"In[63]:="],

Cell[BoxData[
 StyleBox["\<\"EDAShowProgress is an option for various routines. When set to \
True, the\\n\troutine will print messages showing its progress in \
performing\\n\tits tasks. If set to False, no such information is \
printed.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.5145522170795*^9},
 CellTags->{
  "Info3514537817-3738395", "RobustLineFit", 
   "RobustLineFit--ShowProgress option", 
   "ShowProgress--option to RobustLineFit"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
ScreenStyleEnvironment->"Working",
WindowSize->{758, 792},
WindowMargins->{{Automatic, 257}, {Automatic, 25}},
ShowSelection->True,
FrontEndVersion->"8.0 for Microsoft Windows (32-bit) (February 23, 2011)",
StyleDefinitions->"Manual.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Fitting--to lines using robust median techniques"->{
  Cell[2314, 72, 175, 4, 54, "Subsection",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[2492, 78, 397, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[2892, 89, 719, 14, 83, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[3614, 105, 205, 4, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[3939, 117, 202, 5, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[4144, 124, 690, 14, 23, "Message",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[4871, 143, 189, 5, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[5063, 150, 815, 13, 177, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", 
     "Info3514537811-1614255", "RobustLineFit"}],
  Cell[5915, 168, 609, 15, 49, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[6527, 185, 5699, 120, 242, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[12241, 308, 201, 4, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[12445, 314, 431, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[12901, 331, 289, 8, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[13193, 341, 15698, 352, 230, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[28894, 695, 741, 19, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[29650, 717, 329, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[29982, 727, 253, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[30260, 739, 234, 6, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[30497, 747, 13423, 314, 230, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[43923, 1063, 595, 15, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[44533, 1081, 392, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[44928, 1094, 593, 13, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit", 
     "Chi-squared--interpretation"}],
  Cell[45524, 1109, 167, 4, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[45716, 1117, 172, 4, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[45891, 1123, 2679, 84, 123, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[48585, 1210, 344, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[48932, 1220, 381, 12, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[49316, 1234, 302, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[49643, 1247, 284, 8, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[49930, 1257, 15421, 326, 228, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[65354, 1585, 720, 19, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[66089, 1607, 432, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[66524, 1620, 297, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[66846, 1632, 202, 5, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[67051, 1639, 668, 14, 23, "Message",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[67756, 1658, 251, 6, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[68010, 1666, 823, 21, 242, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[68848, 1690, 396, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[69269, 1703, 234, 6, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[69506, 1711, 3657, 66, 239, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[73166, 1779, 563, 14, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[73744, 1796, 310, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}]},
 "RobustLineFit"->{
  Cell[2314, 72, 175, 4, 54, "Subsection",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[2492, 78, 397, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[2892, 89, 719, 14, 83, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[3614, 105, 205, 4, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[3939, 117, 202, 5, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[4144, 124, 690, 14, 23, "Message",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[4871, 143, 189, 5, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[5063, 150, 815, 13, 177, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", 
     "Info3514537811-1614255", "RobustLineFit"}],
  Cell[5915, 168, 609, 15, 49, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[6527, 185, 5699, 120, 242, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[12241, 308, 201, 4, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[12445, 314, 431, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[12901, 331, 289, 8, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[13193, 341, 15698, 352, 230, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[28894, 695, 741, 19, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[29650, 717, 329, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[29982, 727, 253, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[30260, 739, 234, 6, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[30497, 747, 13423, 314, 230, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[43923, 1063, 595, 15, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[44533, 1081, 392, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[44928, 1094, 593, 13, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit", 
     "Chi-squared--interpretation"}],
  Cell[45524, 1109, 167, 4, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[45716, 1117, 172, 4, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[45891, 1123, 2679, 84, 123, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[48585, 1210, 344, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[48932, 1220, 381, 12, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[49316, 1234, 302, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[49643, 1247, 284, 8, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[49930, 1257, 15421, 326, 228, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[65354, 1585, 720, 19, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[66089, 1607, 432, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[66524, 1620, 297, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[66846, 1632, 202, 5, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[67051, 1639, 668, 14, 23, "Message",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[67756, 1658, 251, 6, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[68010, 1666, 823, 21, 242, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[68848, 1690, 396, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[69269, 1703, 234, 6, 28, "Input",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[69506, 1711, 3657, 66, 239, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[73166, 1779, 563, 14, 27, "Output",
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[73744, 1796, 310, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit"}],
  Cell[342059, 7641, 225, 6, 28, "Input",
   CellTags->"RobustLineFit"],
  Cell[342287, 7649, 358, 6, 75, "Print",
   CellTags->{"Info3514537816-3738395", "RobustLineFit"}],
  Cell[342682, 7660, 185, 5, 28, "Input",
   CellTags->"RobustLineFit"],
  Cell[342870, 7667, 1006, 30, 98, "Output",
   CellTags->"RobustLineFit"],
  Cell[343913, 7702, 293, 8, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option", 
     "RobustLineFit"}],
  Cell[344209, 7712, 689, 11, 126, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "Info3514537816-3738395", 
     "RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[344935, 7728, 327, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--MaximumIterations option", 
     "MaximumIterations--option to RobustLineFit", "RobustLineFit"}],
  Cell[345265, 7738, 425, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "MaximumIterations--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--MaximumIterations option"}],
  Cell[345727, 7750, 318, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ReturnFunction option", 
     "ReturnFunction--option to RobustLineFit", "RobustLineFit"}],
  Cell[346048, 7760, 589, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "ReturnFunction--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--ReturnFunction option"}],
  Cell[346674, 7775, 297, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit", 
     "RobustLineFit"}],
  Cell[346974, 7785, 378, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustLineFit", 
     "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}],
  Cell[347389, 7797, 315, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit", "RobustLineFit"}],
  Cell[347707, 7807, 462, 9, 75, "Print",
   CellTags->{
    "Info3514537817-3738395", "RobustLineFit", 
     "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit"}]},
 "Info3514537811-1614255"->{
  Cell[5063, 150, 815, 13, 177, "Print",
   CellTags->{
    "Fitting--to lines using robust median techniques", 
     "Info3514537811-1614255", "RobustLineFit"}]},
 "Chi-squared--interpretation"->{
  Cell[44928, 1094, 593, 13, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to lines using robust median techniques", "RobustLineFit", 
     "Chi-squared--interpretation"}],
  Cell[103418, 2518, 556, 12, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "Chi-squared--interpretation", "RobustCurveFit--PseudoChiSquared", 
     "PseudoChiSquared returned by RobustCurveFit", "RobustCurveFit"}]},
 "Fitting--to polynomials using robust weighting techniques"->{
  Cell[74091, 1808, 199, 5, 54, "Subsection",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[74293, 1815, 400, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[74696, 1826, 440, 14, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75139, 1842, 215, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75357, 1849, 496, 17, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75856, 1868, 215, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[76074, 1875, 676, 25, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[76753, 1902, 471, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[77249, 1916, 878, 26, 110, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[78130, 1944, 8788, 152, 249, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[86933, 2099, 533, 12, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[87469, 2113, 270, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[87742, 2122, 266, 8, 63, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[88011, 2132, 234, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[88248, 2139, 284, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit", "RobustCurveFit--algorithm"}],
  Cell[88557, 2152, 309, 9, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[88869, 2163, 13393, 314, 230, "Print",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[102265, 2479, 654, 16, 30, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[102934, 2498, 481, 18, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[103418, 2518, 556, 12, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "Chi-squared--interpretation", "RobustCurveFit--PseudoChiSquared", 
     "PseudoChiSquared returned by RobustCurveFit", "RobustCurveFit"}],
  Cell[103977, 2532, 444, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--DegreesOfFreedom", "RobustCurveFit"}],
  Cell[104424, 2545, 412, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[104861, 2560, 353, 10, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[105217, 2572, 782, 20, 47, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[106036, 2597, 358, 10, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[106397, 2609, 637, 15, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[107049, 2627, 313, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[107365, 2638, 389, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[107757, 2651, 686, 21, 69, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[108446, 2674, 414, 15, 30, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[108885, 2693, 210, 6, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[109098, 2701, 321, 7, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[109456, 2713, 212, 6, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[109671, 2721, 322, 7, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[110008, 2731, 470, 15, 48, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[110503, 2750, 327, 9, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[110833, 2761, 8212, 198, 234, "Print",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[119048, 2961, 607, 14, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[119670, 2978, 458, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[120153, 2995, 277, 8, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[120433, 3005, 2681, 53, 234, "Print",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[123117, 3060, 539, 12, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[123671, 3075, 264, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[123960, 3087, 290, 9, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[124253, 3098, 322, 7, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[124590, 3108, 286, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}]},
 "RobustCurveFit"->{
  Cell[74091, 1808, 199, 5, 54, "Subsection",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[74293, 1815, 400, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[74696, 1826, 440, 14, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75139, 1842, 215, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75357, 1849, 496, 17, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75856, 1868, 215, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[76074, 1875, 676, 25, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[76753, 1902, 471, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[77249, 1916, 878, 26, 110, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[78130, 1944, 8788, 152, 249, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[86933, 2099, 533, 12, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[87469, 2113, 270, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[87742, 2122, 266, 8, 63, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[88011, 2132, 234, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[88248, 2139, 284, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit", "RobustCurveFit--algorithm"}],
  Cell[88557, 2152, 309, 9, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[88869, 2163, 13393, 314, 230, "Print",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[102265, 2479, 654, 16, 30, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[102934, 2498, 481, 18, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[103418, 2518, 556, 12, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "Chi-squared--interpretation", "RobustCurveFit--PseudoChiSquared", 
     "PseudoChiSquared returned by RobustCurveFit", "RobustCurveFit"}],
  Cell[103977, 2532, 444, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--DegreesOfFreedom", "RobustCurveFit"}],
  Cell[104424, 2545, 412, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[104861, 2560, 353, 10, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[105217, 2572, 782, 20, 47, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[106036, 2597, 358, 10, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[106397, 2609, 637, 15, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[107049, 2627, 313, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[107365, 2638, 389, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[107757, 2651, 686, 21, 69, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[108446, 2674, 414, 15, 30, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[108885, 2693, 210, 6, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[109098, 2701, 321, 7, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[109456, 2713, 212, 6, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[109671, 2721, 322, 7, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[110008, 2731, 470, 15, 48, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[110503, 2750, 327, 9, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[110833, 2761, 8212, 198, 234, "Print",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[119048, 2961, 607, 14, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[119670, 2978, 458, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[120153, 2995, 277, 8, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[120433, 3005, 2681, 53, 234, "Print",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[123117, 3060, 539, 12, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[123671, 3075, 264, 8, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[123960, 3087, 290, 9, 28, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[124253, 3098, 322, 7, 27, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[124590, 3108, 286, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit"}],
  Cell[335080, 7438, 227, 6, 28, "Input",
   CellTags->"RobustCurveFit"],
  Cell[335310, 7446, 373, 6, 75, "Print",
   CellTags->{"Info3514537814-3738395", "RobustCurveFit"}],
  Cell[335720, 7457, 187, 5, 28, "Input",
   CellTags->"RobustCurveFit"],
  Cell[335910, 7464, 1076, 32, 113, "Output",
   CellTags->"RobustCurveFit"],
  Cell[337023, 7501, 330, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "MaximumIterations--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[337356, 7511, 429, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "MaximumIterations--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--MaximumIterations option"}],
  Cell[337822, 7523, 315, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[338140, 7533, 412, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnErrors--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnErrors option"}],
  Cell[338589, 7545, 321, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[338913, 7555, 592, 10, 109, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnFunction--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnFunction option"}],
  Cell[339542, 7570, 300, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit", 
     "RobustCurveFit"}],
  Cell[339845, 7580, 380, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit"}],
  Cell[340262, 7592, 318, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[340583, 7602, 467, 9, 75, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[341087, 7616, 342, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[341432, 7626, 590, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}]},
 "RobustCurveFit--algorithm"->{
  Cell[74293, 1815, 400, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[74696, 1826, 440, 14, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75139, 1842, 215, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75357, 1849, 496, 17, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[75856, 1868, 215, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[76074, 1875, 676, 25, 28, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[76753, 1902, 471, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[77249, 1916, 878, 26, 110, "Input",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[78130, 1944, 8788, 152, 249, "Output",
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[86933, 2099, 533, 12, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[87469, 2113, 270, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[87742, 2122, 266, 8, 63, "Input",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[88011, 2132, 234, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--algorithm", "RobustCurveFit"}],
  Cell[88248, 2139, 284, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit", "RobustCurveFit--algorithm"}],
  Cell[162302, 4139, 250, 7, 29, "Text",
   Evaluatable->False,
   CellTags->"RobustCurveFit--algorithm"],
  Cell[162555, 4148, 292, 11, 29, "Text",
   Evaluatable->False,
   CellTags->"RobustCurveFit--algorithm"]},
 "RobustCurveFit--PseudoChiSquared"->{
  Cell[103418, 2518, 556, 12, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "Chi-squared--interpretation", "RobustCurveFit--PseudoChiSquared", 
     "PseudoChiSquared returned by RobustCurveFit", "RobustCurveFit"}]},
 "PseudoChiSquared returned by RobustCurveFit"->{
  Cell[103418, 2518, 556, 12, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "Chi-squared--interpretation", "RobustCurveFit--PseudoChiSquared", 
     "PseudoChiSquared returned by RobustCurveFit", "RobustCurveFit"}]},
 "RobustCurveFit--DegreesOfFreedom"->{
  Cell[103977, 2532, 444, 11, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "Fitting--to polynomials using robust weighting techniques", 
     "RobustCurveFit--DegreesOfFreedom", "RobustCurveFit"}]},
 "RobustCurveFit--MaximumIterations option"->{
  Cell[125448, 3147, 435, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[125886, 3159, 1342, 37, 113, "Output",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[127243, 3199, 300, 10, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option"}],
  Cell[127546, 3211, 471, 15, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "MaximumIterations--option to RobustCurveFit"}],
  Cell[337023, 7501, 330, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "MaximumIterations--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[337356, 7511, 429, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "MaximumIterations--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--MaximumIterations option"}]},
 "RobustCurveFit--ReturnErrors option"->{
  Cell[125448, 3147, 435, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[125886, 3159, 1342, 37, 113, "Output",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[127243, 3199, 300, 10, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option"}],
  Cell[128020, 3228, 358, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[128403, 3244, 415, 11, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[128821, 3257, 790, 21, 52, "Output",
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[129626, 3281, 393, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[337822, 7523, 315, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[338140, 7533, 412, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnErrors--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnErrors option"}]},
 "RobustCurveFit--ReturnFunction option"->{
  Cell[125448, 3147, 435, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[125886, 3159, 1342, 37, 113, "Output",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[131677, 3342, 427, 14, 48, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit"}],
  Cell[132129, 3360, 423, 11, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit"}],
  Cell[132555, 3373, 408, 10, 27, "Output",
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit"}],
  Cell[338589, 7545, 321, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[338913, 7555, 592, 10, 109, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnFunction--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnFunction option"}]},
 "RobustCurveFit--ShowFit option"->{
  Cell[125448, 3147, 435, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[125886, 3159, 1342, 37, 113, "Output",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[148116, 3792, 635, 20, 48, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit"}],
  Cell[339542, 7570, 300, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit", 
     "RobustCurveFit"}],
  Cell[339845, 7580, 380, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowFit option", 
     "ShowFit--option to RobustCurveFit"}]},
 "RobustCurveFit--ShowProgress option"->{
  Cell[125448, 3147, 435, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[125886, 3159, 1342, 37, 113, "Output",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[132978, 3386, 282, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[133285, 3399, 451, 12, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[133739, 3413, 554, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[134296, 3427, 346, 6, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[134645, 3435, 318, 6, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[134966, 3443, 554, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[135523, 3457, 542, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[136068, 3470, 487, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[136558, 3483, 604, 15, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[137165, 3500, 575, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[137743, 3514, 522, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[138268, 3528, 821, 22, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[139092, 3552, 556, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[139651, 3566, 544, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[140198, 3579, 486, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[140687, 3592, 603, 15, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[141293, 3609, 574, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[141870, 3623, 583, 14, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[142456, 3639, 818, 22, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[143277, 3663, 556, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[143836, 3677, 544, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[144383, 3690, 486, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[144872, 3703, 606, 15, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[145481, 3720, 573, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[146057, 3734, 582, 14, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[146642, 3750, 820, 22, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[147465, 3774, 636, 15, 30, "Output",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[340262, 7592, 318, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[340583, 7602, 467, 9, 75, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}]},
 "RobustCurveFit--UseSignificantFigures option"->{
  Cell[125448, 3147, 435, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[125886, 3159, 1342, 37, 113, "Output",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "RobustCurveFit--ReturnErrors option", 
     "RobustCurveFit--ReturnFunction option", 
     "RobustCurveFit--ShowFit option", "RobustCurveFit--ShowProgress option", 
     "RobustCurveFit--UseSignificantFigures option"}],
  Cell[130022, 3292, 371, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}],
  Cell[130418, 3306, 496, 12, 49, "Input",
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}],
  Cell[130917, 3320, 745, 19, 52, "Output",
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}],
  Cell[341087, 7616, 342, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[341432, 7626, 590, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}]},
 "MaximumIterations--option to RobustCurveFit"->{
  Cell[127546, 3211, 471, 15, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "MaximumIterations--option to RobustCurveFit"}],
  Cell[337023, 7501, 330, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--MaximumIterations option", 
     "MaximumIterations--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[337356, 7511, 429, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "MaximumIterations--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--MaximumIterations option"}]},
 "ReturnErrors--option to RobustCurveFit"->{
  Cell[128020, 3228, 358, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[128403, 3244, 415, 11, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[128821, 3257, 790, 21, 52, "Output",
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[129626, 3281, 393, 9, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit"}],
  Cell[337822, 7523, 315, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnErrors option", 
     "ReturnErrors--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[338140, 7533, 412, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnErrors--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnErrors option"}]},
 "UseSignificantFigures--option to RobustCurveFit"->{
  Cell[130022, 3292, 371, 10, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}],
  Cell[130418, 3306, 496, 12, 49, "Input",
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}],
  Cell[130917, 3320, 745, 19, 52, "Output",
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}],
  Cell[341087, 7616, 342, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[341432, 7626, 590, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}]},
 "ReturnFunction--option to RobustCurveFit"->{
  Cell[131677, 3342, 427, 14, 48, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit"}],
  Cell[132129, 3360, 423, 11, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit"}],
  Cell[132555, 3373, 408, 10, 27, "Output",
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit"}],
  Cell[338589, 7545, 321, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ReturnFunction option", 
     "ReturnFunction--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[338913, 7555, 592, 10, 109, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnFunction--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnFunction option"}]},
 "ShowProgress--option to RobustCurveFit"->{
  Cell[132978, 3386, 282, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[133285, 3399, 451, 12, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[133739, 3413, 554, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[134296, 3427, 346, 6, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[134645, 3435, 318, 6, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[134966, 3443, 554, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[135523, 3457, 542, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[136068, 3470, 487, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[136558, 3483, 604, 15, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[137165, 3500, 575, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[137743, 3514, 522, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[138268, 3528, 821, 22, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[139092, 3552, 556, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[139651, 3566, 544, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[140198, 3579, 486, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[140687, 3592, 603, 15, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[141293, 3609, 574, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[141870, 3623, 583, 14, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[142456, 3639, 818, 22, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[143277, 3663, 556, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[143836, 3677, 544, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[144383, 3690, 486, 11, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[144872, 3703, 606, 15, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[145481, 3720, 573, 12, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[146057, 3734, 582, 14, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[146642, 3750, 820, 22, 23, "Print",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[147465, 3774, 636, 15, 30, "Output",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[340262, 7592, 318, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit", "RobustCurveFit"}],
  Cell[340583, 7602, 467, 9, 75, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}]},
 "ShowFit--option to RobustCurveFit"->{
  Cell[148116, 3792, 635, 20, 48, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit"}],
  Cell[339542, 7570, 300, 8, 28, "Input",
   CellTags->{
    "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit", 
     "RobustCurveFit"}],
  Cell[339845, 7580, 380, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowFit option", 
     "ShowFit--option to RobustCurveFit"}]},
 "RobustLineFit--algorithm"->{
  Cell[162974, 4168, 649, 19, 65, "Text",
   Evaluatable->False,
   CellTags->"RobustLineFit--algorithm"],
  Cell[163626, 4189, 389, 9, 47, "Text",
   Evaluatable->False,
   CellTags->"RobustLineFit--algorithm"],
  Cell[164018, 4200, 113, 3, 29, "Text",
   Evaluatable->False,
   CellTags->"RobustLineFit--algorithm"],
  Cell[187045, 4886, 358, 9, 47, "Text",
   Evaluatable->False,
   CellTags->"RobustLineFit--algorithm"],
  Cell[187406, 4897, 367, 9, 47, "Text",
   Evaluatable->False,
   CellTags->"RobustLineFit--algorithm"]},
 "RobustLineFit--MaximumIterations option"->{
  Cell[166130, 4280, 379, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--MaximumIterations option", 
     "MaximumIterations--option to RobustLineFit"}],
  Cell[344935, 7728, 327, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--MaximumIterations option", 
     "MaximumIterations--option to RobustLineFit", "RobustLineFit"}],
  Cell[345265, 7738, 425, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "MaximumIterations--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--MaximumIterations option"}]},
 "MaximumIterations--option to RobustLineFit"->{
  Cell[166130, 4280, 379, 12, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--MaximumIterations option", 
     "MaximumIterations--option to RobustLineFit"}],
  Cell[344935, 7728, 327, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--MaximumIterations option", 
     "MaximumIterations--option to RobustLineFit", "RobustLineFit"}],
  Cell[345265, 7738, 425, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "MaximumIterations--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--MaximumIterations option"}]},
 "RobustLineFit--ReturnFunction option"->{
  Cell[166512, 4294, 423, 14, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--ReturnFunction option", 
     "ReturnFunction--option to RobustLineFit"}],
  Cell[345727, 7750, 318, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ReturnFunction option", 
     "ReturnFunction--option to RobustLineFit", "RobustLineFit"}],
  Cell[346048, 7760, 589, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "ReturnFunction--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--ReturnFunction option"}]},
 "ReturnFunction--option to RobustLineFit"->{
  Cell[166512, 4294, 423, 14, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--ReturnFunction option", 
     "ReturnFunction--option to RobustLineFit"}],
  Cell[345727, 7750, 318, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ReturnFunction option", 
     "ReturnFunction--option to RobustLineFit", "RobustLineFit"}],
  Cell[346048, 7760, 589, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "ReturnFunction--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--ReturnFunction option"}]},
 "RobustLineFit--ShowFit option"->{
  Cell[166938, 4310, 463, 17, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}],
  Cell[346674, 7775, 297, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit", 
     "RobustLineFit"}],
  Cell[346974, 7785, 378, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustLineFit", 
     "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}]},
 "ShowFit--option to RobustLineFit"->{
  Cell[166938, 4310, 463, 17, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}],
  Cell[346674, 7775, 297, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit", 
     "RobustLineFit"}],
  Cell[346974, 7785, 378, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustLineFit", 
     "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}]},
 "RobustLineFit--ShowProgress option"->{
  Cell[167404, 4329, 321, 10, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit"}],
  Cell[347389, 7797, 315, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit", "RobustLineFit"}],
  Cell[347707, 7807, 462, 9, 75, "Print",
   CellTags->{
    "Info3514537817-3738395", "RobustLineFit", 
     "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit"}]},
 "ShowProgress--option to RobustLineFit"->{
  Cell[167404, 4329, 321, 10, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit"}],
  Cell[347389, 7797, 315, 8, 28, "Input",
   CellTags->{
    "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit", "RobustLineFit"}],
  Cell[347707, 7807, 462, 9, 75, "Print",
   CellTags->{
    "Info3514537817-3738395", "RobustLineFit", 
     "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit"}]},
 "Groups option to RobustLineFit"->{
  Cell[167728, 4341, 576, 13, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[168329, 4358, 838, 26, 64, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[169170, 4386, 1053, 27, 47, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[170260, 4418, 331, 8, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[170594, 4428, 504, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[171101, 4441, 506, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[171610, 4454, 476, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[172089, 4466, 478, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[172570, 4478, 539, 13, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[173124, 4494, 267, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[173416, 4505, 838, 26, 64, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[174257, 4533, 1054, 27, 47, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[175348, 4565, 331, 8, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[175682, 4575, 497, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[176182, 4588, 521, 11, 21, "Message",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[176706, 4601, 498, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[177207, 4614, 469, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[177679, 4626, 471, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[178153, 4638, 557, 14, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[178725, 4655, 222, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[178972, 4664, 437, 11, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[179412, 4677, 499, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[179914, 4690, 515, 11, 21, "Message",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[180432, 4703, 501, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[180936, 4716, 472, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[181411, 4728, 474, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[181888, 4740, 554, 14, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[182457, 4757, 211, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[182693, 4766, 437, 11, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[183133, 4779, 500, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[183636, 4792, 516, 11, 21, "Message",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[184155, 4805, 502, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[184660, 4818, 473, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[185136, 4830, 475, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[185614, 4842, 557, 14, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[186186, 4859, 265, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[343913, 7702, 293, 8, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option", 
     "RobustLineFit"}],
  Cell[344209, 7712, 689, 11, 126, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "Info3514537816-3738395", 
     "RobustLineFit", "RobustLineFit--Groups option"}]},
 "RobustLineFit--Groups option"->{
  Cell[167728, 4341, 576, 13, 65, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[168329, 4358, 838, 26, 64, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[169170, 4386, 1053, 27, 47, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[170260, 4418, 331, 8, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[170594, 4428, 504, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[171101, 4441, 506, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[171610, 4454, 476, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[172089, 4466, 478, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[172570, 4478, 539, 13, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[173124, 4494, 267, 7, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[173416, 4505, 838, 26, 64, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[174257, 4533, 1054, 27, 47, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[175348, 4565, 331, 8, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[175682, 4575, 497, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[176182, 4588, 521, 11, 21, "Message",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[176706, 4601, 498, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[177207, 4614, 469, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[177679, 4626, 471, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[178153, 4638, 557, 14, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[178725, 4655, 222, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[178972, 4664, 437, 11, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[179412, 4677, 499, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[179914, 4690, 515, 11, 21, "Message",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[180432, 4703, 501, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[180936, 4716, 472, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[181411, 4728, 474, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[181888, 4740, 554, 14, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[182457, 4757, 211, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[182693, 4766, 437, 11, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[183133, 4779, 500, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[183636, 4792, 516, 11, 21, "Message",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[184155, 4805, 502, 11, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[184660, 4818, 473, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[185136, 4830, 475, 10, 23, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[185614, 4842, 557, 14, 27, "Output",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[186186, 4859, 265, 6, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[343913, 7702, 293, 8, 28, "Input",
   CellTags->{
    "Groups option to RobustLineFit", "RobustLineFit--Groups option", 
     "RobustLineFit"}],
  Cell[344209, 7712, 689, 11, 126, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "Info3514537816-3738395", 
     "RobustLineFit", "RobustLineFit--Groups option"}]},
 "RobustCurveFit--compared to RobustLineFit"->{
  Cell[187810, 4911, 226, 5, 54, "Subsection",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[188039, 4918, 414, 12, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[188456, 4932, 1232, 38, 91, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[189713, 4974, 384, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[190100, 4986, 140887, 2318, 222, 135849, 2232, "CachedBoxData", 
  "BoxData", "Output",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[331002, 7307, 230, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[331257, 7316, 338, 9, 28, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[331598, 7327, 668, 17, 30, "Output",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[332303, 7349, 400, 11, 28, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[332706, 7362, 732, 18, 52, "Output",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[333453, 7383, 524, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[333980, 7398, 332, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[334315, 7409, 494, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}]},
 "RobustLineFit--compared to RobustCurveFit"->{
  Cell[187810, 4911, 226, 5, 54, "Subsection",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[188039, 4918, 414, 12, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[188456, 4932, 1232, 38, 91, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[189713, 4974, 384, 10, 28, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[190100, 4986, 140887, 2318, 222, 135849, 2232, "CachedBoxData", 
  "BoxData", "Output",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[331002, 7307, 230, 5, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[331257, 7316, 338, 9, 28, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[331598, 7327, 668, 17, 30, "Output",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[332303, 7349, 400, 11, 28, "Input",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[332706, 7362, 732, 18, 52, "Output",
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[333453, 7383, 524, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[333980, 7398, 332, 9, 29, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}],
  Cell[334315, 7409, 494, 13, 47, "Text",
   Evaluatable->False,
   CellTags->{
    "RobustCurveFit--compared to RobustLineFit", 
     "RobustLineFit--compared to RobustCurveFit"}]},
 "Info3514537814-3738395"->{
  Cell[335310, 7446, 373, 6, 75, "Print",
   CellTags->{"Info3514537814-3738395", "RobustCurveFit"}]},
 "Info3514537815-3738395"->{
  Cell[337356, 7511, 429, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "MaximumIterations--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--MaximumIterations option"}],
  Cell[338140, 7533, 412, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnErrors--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnErrors option"}],
  Cell[338913, 7555, 592, 10, 109, "Print",
   CellTags->{
    "Info3514537815-3738395", "ReturnFunction--option to RobustCurveFit", 
     "RobustCurveFit", "RobustCurveFit--ReturnFunction option"}],
  Cell[339845, 7580, 380, 7, 58, "Print",
   CellTags->{
    "Info3514537815-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowFit option", 
     "ShowFit--option to RobustCurveFit"}]},
 "Info3514537816-3738395"->{
  Cell[340583, 7602, 467, 9, 75, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--ShowProgress option", 
     "ShowProgress--option to RobustCurveFit"}],
  Cell[341432, 7626, 590, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustCurveFit", 
     "RobustCurveFit--UseSignificantFigures option", 
     "UseSignificantFigures--option to RobustCurveFit"}],
  Cell[342287, 7649, 358, 6, 75, "Print",
   CellTags->{"Info3514537816-3738395", "RobustLineFit"}],
  Cell[344209, 7712, 689, 11, 126, "Print",
   CellTags->{
    "Groups option to RobustLineFit", "Info3514537816-3738395", 
     "RobustLineFit", "RobustLineFit--Groups option"}],
  Cell[345265, 7738, 425, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "MaximumIterations--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--MaximumIterations option"}],
  Cell[346048, 7760, 589, 10, 109, "Print",
   CellTags->{
    "Info3514537816-3738395", "ReturnFunction--option to RobustLineFit", 
     "RobustLineFit", "RobustLineFit--ReturnFunction option"}],
  Cell[346974, 7785, 378, 7, 58, "Print",
   CellTags->{
    "Info3514537816-3738395", "RobustLineFit", 
     "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}]},
 "Info3514537817-3738395"->{
  Cell[347707, 7807, 462, 9, 75, "Print",
   CellTags->{
    "Info3514537817-3738395", "RobustLineFit", 
     "RobustLineFit--ShowProgress option", 
     "ShowProgress--option to RobustLineFit"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Fitting--to lines using robust median techniques", 348633, 7834},
 {"RobustLineFit", 354626, 7980},
 {"Info3514537811-1614255", 362723, 8175},
 {"Chi-squared--interpretation", 362921, 8180},
 {"Fitting--to polynomials using robust weighting techniques", 363468, 8192},
 {"RobustCurveFit", 371429, 8402},
 {"RobustCurveFit--algorithm", 381961, 8670},
 {"RobustCurveFit--PseudoChiSquared", 384960, 8745},
 {"PseudoChiSquared returned by RobustCurveFit", 385302, 8752},
 {"RobustCurveFit--DegreesOfFreedom", 385633, 8759},
 {"RobustCurveFit--MaximumIterations option", 385888, 8765},
 {"RobustCurveFit--ReturnErrors option", 387340, 8798},
 {"RobustCurveFit--ReturnFunction option", 389239, 8844},
 {"RobustCurveFit--ShowFit option", 390806, 8880},
 {"RobustCurveFit--ShowProgress option", 392023, 8908},
 {"RobustCurveFit--UseSignificantFigures option", 397209, 9041},
 {"MaximumIterations--option to RobustCurveFit", 398865, 9078},
 {"ReturnErrors--option to RobustCurveFit", 399476, 9092},
 {"UseSignificantFigures--option to RobustCurveFit", 400541, 9119},
 {"ReturnFunction--option to RobustCurveFit", 401525, 9142},
 {"ShowProgress--option to RobustCurveFit", 402431, 9164},
 {"ShowFit--option to RobustCurveFit", 406937, 9283},
 {"RobustLineFit--algorithm", 407474, 9297},
 {"RobustLineFit--MaximumIterations option", 408052, 9313},
 {"MaximumIterations--option to RobustLineFit", 408659, 9327},
 {"RobustLineFit--ReturnFunction option", 409260, 9341},
 {"ReturnFunction--option to RobustLineFit", 409848, 9355},
 {"RobustLineFit--ShowFit option", 410426, 9369},
 {"ShowFit--option to RobustLineFit", 410957, 9382},
 {"RobustLineFit--ShowProgress option", 411490, 9395},
 {"ShowProgress--option to RobustLineFit", 412068, 9410},
 {"Groups option to RobustLineFit", 412639, 9425},
 {"RobustLineFit--Groups option", 417805, 9547},
 {"RobustCurveFit--compared to RobustLineFit", 422984, 9669},
 {"RobustLineFit--compared to RobustCurveFit", 425302, 9729},
 {"Info3514537814-3738395", 427601, 9789},
 {"Info3514537815-3738395", 427733, 9792},
 {"Info3514537816-3738395", 428551, 9810},
 {"Info3514537817-3738395", 429861, 9839}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 95, 5, 157, "Title",
 Evaluatable->False],
Cell[665, 29, 692, 12, 83, "Text",
 Evaluatable->False],
Cell[1360, 43, 497, 9, 65, "Text",
 Evaluatable->False],
Cell[1860, 54, 323, 8, 47, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[2208, 66, 81, 2, 70, "Section",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[2314, 72, 175, 4, 54, "Subsection",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[2492, 78, 397, 9, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[2892, 89, 719, 14, 83, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[3614, 105, 205, 4, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[3822, 111, 92, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[3939, 117, 202, 5, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[4144, 124, 690, 14, 23, "Message",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[4871, 143, 189, 5, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[5063, 150, 815, 13, 177, "Print",
 CellTags->{
  "Fitting--to lines using robust median techniques", 
   "Info3514537811-1614255", "RobustLineFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[5915, 168, 609, 15, 49, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[6527, 185, 5699, 120, 242, "Output",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[12241, 308, 201, 4, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[12445, 314, 431, 13, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[CellGroupData[{
Cell[12901, 331, 289, 8, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[13193, 341, 15698, 352, 230, "Print",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[28894, 695, 741, 19, 27, "Output",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[29650, 717, 329, 8, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[29982, 727, 253, 8, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[CellGroupData[{
Cell[30260, 739, 234, 6, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[30497, 747, 13423, 314, 230, "Print",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[43923, 1063, 595, 15, 27, "Output",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[44533, 1081, 392, 11, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[44928, 1094, 593, 13, 65, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit", 
   "Chi-squared--interpretation"}],
Cell[45524, 1109, 167, 4, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[CellGroupData[{
Cell[45716, 1117, 172, 4, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[45891, 1123, 2679, 84, 123, "Output",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[48585, 1210, 344, 8, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[48932, 1220, 381, 12, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[49316, 1234, 302, 9, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[CellGroupData[{
Cell[49643, 1247, 284, 8, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[49930, 1257, 15421, 326, 228, "Print",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[65354, 1585, 720, 19, 27, "Output",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[66089, 1607, 432, 11, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[66524, 1620, 297, 8, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[CellGroupData[{
Cell[66846, 1632, 202, 5, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[67051, 1639, 668, 14, 23, "Message",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[67756, 1658, 251, 6, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[68010, 1666, 823, 21, 242, "Output",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[68848, 1690, 396, 9, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[CellGroupData[{
Cell[69269, 1703, 234, 6, 28, "Input",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[69506, 1711, 3657, 66, 239, "Print",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}],
Cell[73166, 1779, 563, 14, 27, "Output",
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[73744, 1796, 310, 7, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to lines using robust median techniques", "RobustLineFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[74091, 1808, 199, 5, 54, "Subsection",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[74293, 1815, 400, 9, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[74696, 1826, 440, 14, 28, "Input",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[75139, 1842, 215, 5, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[75357, 1849, 496, 17, 28, "Input",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[75856, 1868, 215, 5, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[76074, 1875, 676, 25, 28, "Input",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[76753, 1902, 471, 10, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[CellGroupData[{
Cell[77249, 1916, 878, 26, 110, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[78130, 1944, 8788, 152, 249, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}]
}, Open  ]],
Cell[86933, 2099, 533, 12, 65, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[87469, 2113, 270, 7, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[87742, 2122, 266, 8, 63, "Input",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[88011, 2132, 234, 5, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--algorithm", "RobustCurveFit"}],
Cell[88248, 2139, 284, 9, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit", "RobustCurveFit--algorithm"}],
Cell[CellGroupData[{
Cell[88557, 2152, 309, 9, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[88869, 2163, 13393, 314, 230, "Print",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[102265, 2479, 654, 16, 30, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[102934, 2498, 481, 18, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[103418, 2518, 556, 12, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "Chi-squared--interpretation", "RobustCurveFit--PseudoChiSquared", 
   "PseudoChiSquared returned by RobustCurveFit", "RobustCurveFit"}],
Cell[103977, 2532, 444, 11, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit--DegreesOfFreedom", "RobustCurveFit"}],
Cell[104424, 2545, 412, 11, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[CellGroupData[{
Cell[104861, 2560, 353, 10, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[105217, 2572, 782, 20, 47, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[106036, 2597, 358, 10, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[106397, 2609, 637, 15, 27, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[107049, 2627, 313, 9, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[107365, 2638, 389, 11, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[107757, 2651, 686, 21, 69, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[108446, 2674, 414, 15, 30, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[CellGroupData[{
Cell[108885, 2693, 210, 6, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[109098, 2701, 321, 7, 27, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[109456, 2713, 212, 6, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[109671, 2721, 322, 7, 27, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[110008, 2731, 470, 15, 48, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[CellGroupData[{
Cell[110503, 2750, 327, 9, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[110833, 2761, 8212, 198, 234, "Print",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[119048, 2961, 607, 14, 27, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[119670, 2978, 458, 13, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[CellGroupData[{
Cell[120153, 2995, 277, 8, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[120433, 3005, 2681, 53, 234, "Print",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[123117, 3060, 539, 12, 27, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[123671, 3075, 264, 8, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[CellGroupData[{
Cell[123960, 3087, 290, 9, 28, "Input",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}],
Cell[124253, 3098, 322, 7, 27, "Output",
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]],
Cell[124590, 3108, 286, 9, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "Fitting--to polynomials using robust weighting techniques", 
   "RobustCurveFit"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[124925, 3123, 76, 2, 70, "Section",
 Evaluatable->False],
Cell[125004, 3127, 93, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[125122, 3133, 88, 2, 54, "Subsection",
 Evaluatable->False],
Cell[125213, 3137, 210, 6, 29, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[125448, 3147, 435, 10, 28, "Input",
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "RobustCurveFit--ReturnErrors option", 
   "RobustCurveFit--ReturnFunction option", "RobustCurveFit--ShowFit option", 
   "RobustCurveFit--ShowProgress option", 
   "RobustCurveFit--UseSignificantFigures option"}],
Cell[125886, 3159, 1342, 37, 113, "Output",
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "RobustCurveFit--ReturnErrors option", 
   "RobustCurveFit--ReturnFunction option", "RobustCurveFit--ShowFit option", 
   "RobustCurveFit--ShowProgress option", 
   "RobustCurveFit--UseSignificantFigures option"}]
}, Open  ]],
Cell[127243, 3199, 300, 10, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "RobustCurveFit--ReturnErrors option"}],
Cell[127546, 3211, 471, 15, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "MaximumIterations--option to RobustCurveFit"}],
Cell[128020, 3228, 358, 12, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"}],
Cell[CellGroupData[{
Cell[128403, 3244, 415, 11, 28, "Input",
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"}],
Cell[128821, 3257, 790, 21, 52, "Output",
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"}]
}, Open  ]],
Cell[129626, 3281, 393, 9, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit"}],
Cell[130022, 3292, 371, 10, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"}],
Cell[CellGroupData[{
Cell[130418, 3306, 496, 12, 49, "Input",
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"}],
Cell[130917, 3320, 745, 19, 52, "Output",
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"}]
}, Open  ]],
Cell[131677, 3342, 427, 14, 48, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit"}],
Cell[CellGroupData[{
Cell[132129, 3360, 423, 11, 28, "Input",
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit"}],
Cell[132555, 3373, 408, 10, 27, "Output",
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit"}]
}, Open  ]],
Cell[132978, 3386, 282, 9, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[CellGroupData[{
Cell[133285, 3399, 451, 12, 28, "Input",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[133739, 3413, 554, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[134296, 3427, 346, 6, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[134645, 3435, 318, 6, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[134966, 3443, 554, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[135523, 3457, 542, 11, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[136068, 3470, 487, 11, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[136558, 3483, 604, 15, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[137165, 3500, 575, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[137743, 3514, 522, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[138268, 3528, 821, 22, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[139092, 3552, 556, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[139651, 3566, 544, 11, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[140198, 3579, 486, 11, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[140687, 3592, 603, 15, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[141293, 3609, 574, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[141870, 3623, 583, 14, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[142456, 3639, 818, 22, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[143277, 3663, 556, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[143836, 3677, 544, 11, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[144383, 3690, 486, 11, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[144872, 3703, 606, 15, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[145481, 3720, 573, 12, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[146057, 3734, 582, 14, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[146642, 3750, 820, 22, 23, "Print",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}],
Cell[147465, 3774, 636, 15, 30, "Output",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}]
}, Open  ]],
Cell[148116, 3792, 635, 20, 48, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit"}],
Cell[CellGroupData[{
Cell[148776, 3816, 265, 8, 28, "Input"],
Cell[149044, 3826, 13243, 310, 234, "Output"]
}, Open  ]],
Cell[162302, 4139, 250, 7, 29, "Text",
 Evaluatable->False,
 CellTags->"RobustCurveFit--algorithm"],
Cell[162555, 4148, 292, 11, 29, "Text",
 Evaluatable->False,
 CellTags->"RobustCurveFit--algorithm"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162884, 4164, 87, 2, 54, "Subsection",
 Evaluatable->False],
Cell[162974, 4168, 649, 19, 65, "Text",
 Evaluatable->False,
 CellTags->"RobustLineFit--algorithm"],
Cell[163626, 4189, 389, 9, 47, "Text",
 Evaluatable->False,
 CellTags->"RobustLineFit--algorithm"],
Cell[164018, 4200, 113, 3, 29, "Text",
 Evaluatable->False,
 CellTags->"RobustLineFit--algorithm"],
Cell[164134, 4205, 135, 5, 29, "Text"],
Cell[164272, 4212, 191, 5, 29, "Text"],
Cell[164466, 4219, 138, 5, 29, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[164629, 4228, 157, 4, 28, "Input"],
Cell[164789, 4234, 994, 29, 98, "Output"]
}, Open  ]],
Cell[165798, 4266, 329, 12, 47, "Text",
 Evaluatable->False],
Cell[166130, 4280, 379, 12, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustLineFit--MaximumIterations option", 
   "MaximumIterations--option to RobustLineFit"}],
Cell[166512, 4294, 423, 14, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustLineFit--ReturnFunction option", 
   "ReturnFunction--option to RobustLineFit"}],
Cell[166938, 4310, 463, 17, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit"}],
Cell[167404, 4329, 321, 10, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustLineFit--ShowProgress option", 
   "ShowProgress--option to RobustLineFit"}],
Cell[167728, 4341, 576, 13, 65, "Text",
 Evaluatable->False,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[CellGroupData[{
Cell[168329, 4358, 838, 26, 64, "Input",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[169170, 4386, 1053, 27, 47, "Output",
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[170260, 4418, 331, 8, 28, "Input",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[170594, 4428, 504, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[171101, 4441, 506, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[171610, 4454, 476, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[172089, 4466, 478, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[172570, 4478, 539, 13, 27, "Output",
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option"}]
}, Open  ]],
Cell[173124, 4494, 267, 7, 29, "Text",
 Evaluatable->False,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[CellGroupData[{
Cell[173416, 4505, 838, 26, 64, "Input",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[174257, 4533, 1054, 27, 47, "Output",
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[175348, 4565, 331, 8, 28, "Input",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[175682, 4575, 497, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[176182, 4588, 521, 11, 21, "Message",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[176706, 4601, 498, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[177207, 4614, 469, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[177679, 4626, 471, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[178153, 4638, 557, 14, 27, "Output",
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option"}]
}, Open  ]],
Cell[178725, 4655, 222, 5, 29, "Text",
 Evaluatable->False,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[CellGroupData[{
Cell[178972, 4664, 437, 11, 28, "Input",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[179412, 4677, 499, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[179914, 4690, 515, 11, 21, "Message",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[180432, 4703, 501, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[180936, 4716, 472, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[181411, 4728, 474, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[181888, 4740, 554, 14, 27, "Output",
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option"}]
}, Open  ]],
Cell[182457, 4757, 211, 5, 29, "Text",
 Evaluatable->False,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[CellGroupData[{
Cell[182693, 4766, 437, 11, 28, "Input",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[183133, 4779, 500, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[183636, 4792, 516, 11, 21, "Message",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[184155, 4805, 502, 11, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[184660, 4818, 473, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[185136, 4830, 475, 10, 23, "Print",
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[185614, 4842, 557, 14, 27, "Output",
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option"}]
}, Open  ]],
Cell[186186, 4859, 265, 6, 29, "Text",
 Evaluatable->False,
 CellTags->{"Groups option to RobustLineFit", "RobustLineFit--Groups option"}],
Cell[186454, 4867, 588, 17, 65, "Text",
 Evaluatable->False],
Cell[187045, 4886, 358, 9, 47, "Text",
 Evaluatable->False,
 CellTags->"RobustLineFit--algorithm"],
Cell[187406, 4897, 367, 9, 47, "Text",
 Evaluatable->False,
 CellTags->"RobustLineFit--algorithm"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187810, 4911, 226, 5, 54, "Subsection",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[188039, 4918, 414, 12, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[188456, 4932, 1232, 38, 91, "Input",
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[CellGroupData[{
Cell[189713, 4974, 384, 10, 28, "Input",
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[190100, 4986, 140887, 2318, 222, 135849, 2232, "CachedBoxData", \
"BoxData", "Output",
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}]
}, Open  ]],
Cell[331002, 7307, 230, 5, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[CellGroupData[{
Cell[331257, 7316, 338, 9, 28, "Input",
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[331598, 7327, 668, 17, 30, "Output",
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[332303, 7349, 400, 11, 28, "Input",
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[332706, 7362, 732, 18, 52, "Output",
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}]
}, Open  ]],
Cell[333453, 7383, 524, 13, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[333980, 7398, 332, 9, 29, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}],
Cell[334315, 7409, 494, 13, 47, "Text",
 Evaluatable->False,
 CellTags->{
  "RobustCurveFit--compared to RobustLineFit", 
   "RobustLineFit--compared to RobustCurveFit"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[334858, 7428, 101, 2, 70, "Section",
 Evaluatable->False],
Cell[334962, 7432, 93, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[335080, 7438, 227, 6, 28, "Input",
 CellTags->"RobustCurveFit"],
Cell[335310, 7446, 373, 6, 75, "Print",
 CellTags->{"Info3514537814-3738395", "RobustCurveFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[335720, 7457, 187, 5, 28, "Input",
 CellTags->"RobustCurveFit"],
Cell[335910, 7464, 1076, 32, 113, "Output",
 CellTags->"RobustCurveFit"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337023, 7501, 330, 8, 28, "Input",
 CellTags->{
  "RobustCurveFit--MaximumIterations option", 
   "MaximumIterations--option to RobustCurveFit", "RobustCurveFit"}],
Cell[337356, 7511, 429, 7, 58, "Print",
 CellTags->{
  "Info3514537815-3738395", "MaximumIterations--option to RobustCurveFit", 
   "RobustCurveFit", "RobustCurveFit--MaximumIterations option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[337822, 7523, 315, 8, 28, "Input",
 CellTags->{
  "RobustCurveFit--ReturnErrors option", 
   "ReturnErrors--option to RobustCurveFit", "RobustCurveFit"}],
Cell[338140, 7533, 412, 7, 58, "Print",
 CellTags->{
  "Info3514537815-3738395", "ReturnErrors--option to RobustCurveFit", 
   "RobustCurveFit", "RobustCurveFit--ReturnErrors option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[338589, 7545, 321, 8, 28, "Input",
 CellTags->{
  "RobustCurveFit--ReturnFunction option", 
   "ReturnFunction--option to RobustCurveFit", "RobustCurveFit"}],
Cell[338913, 7555, 592, 10, 109, "Print",
 CellTags->{
  "Info3514537815-3738395", "ReturnFunction--option to RobustCurveFit", 
   "RobustCurveFit", "RobustCurveFit--ReturnFunction option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[339542, 7570, 300, 8, 28, "Input",
 CellTags->{
  "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit", 
   "RobustCurveFit"}],
Cell[339845, 7580, 380, 7, 58, "Print",
 CellTags->{
  "Info3514537815-3738395", "RobustCurveFit", 
   "RobustCurveFit--ShowFit option", "ShowFit--option to RobustCurveFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[340262, 7592, 318, 8, 28, "Input",
 CellTags->{
  "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit", "RobustCurveFit"}],
Cell[340583, 7602, 467, 9, 75, "Print",
 CellTags->{
  "Info3514537816-3738395", "RobustCurveFit", 
   "RobustCurveFit--ShowProgress option", 
   "ShowProgress--option to RobustCurveFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[341087, 7616, 342, 8, 28, "Input",
 CellTags->{
  "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit", "RobustCurveFit"}],
Cell[341432, 7626, 590, 10, 109, "Print",
 CellTags->{
  "Info3514537816-3738395", "RobustCurveFit", 
   "RobustCurveFit--UseSignificantFigures option", 
   "UseSignificantFigures--option to RobustCurveFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[342059, 7641, 225, 6, 28, "Input",
 CellTags->"RobustLineFit"],
Cell[342287, 7649, 358, 6, 75, "Print",
 CellTags->{"Info3514537816-3738395", "RobustLineFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[342682, 7660, 185, 5, 28, "Input",
 CellTags->"RobustLineFit"],
Cell[342870, 7667, 1006, 30, 98, "Output",
 CellTags->"RobustLineFit"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343913, 7702, 293, 8, 28, "Input",
 CellTags->{
  "Groups option to RobustLineFit", "RobustLineFit--Groups option", 
   "RobustLineFit"}],
Cell[344209, 7712, 689, 11, 126, "Print",
 CellTags->{
  "Groups option to RobustLineFit", "Info3514537816-3738395", "RobustLineFit",
    "RobustLineFit--Groups option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[344935, 7728, 327, 8, 28, "Input",
 CellTags->{
  "RobustLineFit--MaximumIterations option", 
   "MaximumIterations--option to RobustLineFit", "RobustLineFit"}],
Cell[345265, 7738, 425, 7, 58, "Print",
 CellTags->{
  "Info3514537816-3738395", "MaximumIterations--option to RobustLineFit", 
   "RobustLineFit", "RobustLineFit--MaximumIterations option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[345727, 7750, 318, 8, 28, "Input",
 CellTags->{
  "RobustLineFit--ReturnFunction option", 
   "ReturnFunction--option to RobustLineFit", "RobustLineFit"}],
Cell[346048, 7760, 589, 10, 109, "Print",
 CellTags->{
  "Info3514537816-3738395", "ReturnFunction--option to RobustLineFit", 
   "RobustLineFit", "RobustLineFit--ReturnFunction option"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[346674, 7775, 297, 8, 28, "Input",
 CellTags->{
  "RobustLineFit--ShowFit option", "ShowFit--option to RobustLineFit", 
   "RobustLineFit"}],
Cell[346974, 7785, 378, 7, 58, "Print",
 CellTags->{
  "Info3514537816-3738395", "RobustLineFit", "RobustLineFit--ShowFit option", 
   "ShowFit--option to RobustLineFit"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[347389, 7797, 315, 8, 28, "Input",
 CellTags->{
  "RobustLineFit--ShowProgress option", 
   "ShowProgress--option to RobustLineFit", "RobustLineFit"}],
Cell[347707, 7807, 462, 9, 75, "Print",
 CellTags->{
  "Info3514537817-3738395", "RobustLineFit", 
   "RobustLineFit--ShowProgress option", 
   "ShowProgress--option to RobustLineFit"}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
