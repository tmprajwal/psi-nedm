(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
BeginPackage["HDF5`",{"NETLink`"}]


(* ::Input::Initialization:: *)
$HDF5packageVersion="V2.0"


(* ::Input::Initialization:: *)
$pathToPInvoke=FileNameJoin[{ParentDirectory@NotebookDirectory[],"HDF5.PInvoke","HDF.PInvoke.dll"}]


(* ::Input::Initialization:: *)
H5AgetNumAttrs::deprecated=
"Function is deprecated (V2.00) according to documentation of HDF5 group (https://www.hdfgroup.org/HDF5/doc/RM/H5A/H5Aget_num_attrs.htm). It is not exposed in P/Invoke. Use instead H5OgetInfo[ ]. For a direct function, also load the HDFExtend package and then use H5AExtendGetNumberAttributes[\"LocationID\"]."


(* ::Input::Initialization:: *)
H5GgetNumObjs::deprecated=
"Function is deprecated (V2.00) according to documentation of HDF5 group (https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetNumObjs). It is not exposed in P/Invoke. Use instead H5GgetInfo[ ]. For a direct function, also load the HDFExtend package and then use H5GExtendGetNumObjs[\"GroupID\"]"


(* ::Input::Initialization:: *)
H5GgetObjNameByIndex::deprecated=
"Function is deprecated (V2.00) according to documentation of HDF5 group (https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetObjNameByIdx). It is not exposed in P/Invoke. Use instead H5LgetNameByIdx[ ]. For a direct function, also load the HDFExtend package and then use H5GExtendGetObjNameByIndex[\"GroupID\"]"


(* ::Input::Initialization:: *)
H5GgetObjTypeByIndex::deprecated=
"Function is deprecated (V2.00) according to documentation of HDF5 group (https://www.hdfgroup.org/HDF5/doc/RM/RM_H5G.html#Group-GetObjTypeByIdx). It is not exposed in P/Invoke. Use instead H5OgetInfo[ ]. Note that under this revised approach the index functionality is no longer available, i.e., an \"ObjectID\" must be provided. For a direct function, load the HDFExtend package and then use H5OExtendGetInfoByIndex[ ]."


(* ::Input::Initialization:: *)
LoadNETAssembly[$pathToPInvoke]


(* ::Input::Initialization:: *)
LoadNETType["System.Runtime.InteropServices.Marshal"]


(* ::Input::Initialization:: *)
LoadNETType["System.BitConverter"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5+index_t"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5+iter_order_t"]


(* ::Input::Initialization:: *)
H5uINDEXuNAME=HDF`PInvoke`H5`indexUt`NAME


(* ::Input::Initialization:: *)
H5uINDEXuCRTuORDER=HDF`PInvoke`H5`indexUt`CRTUORDER


(* ::Input::Initialization:: *)
H5uITERuINC=HDF`PInvoke`H5`iterUorderUt`INC


(* ::Input::Initialization:: *)
H5uITERuDEC=HDF`PInvoke`H5`iterUorderUt`DEC


(* ::Input::Initialization:: *)
H5close[]:=HDF`PInvoke`H5`close[]


(* ::Input::Initialization:: *)
H5freeMemory[intPtr:_Symbol]:=HDF`PInvoke`H5`freeUmemory[intPtr]


(* ::Input::Initialization:: *)
SetAttributes[H5getUlibversion,HoldAll]


(* ::Input::Initialization:: *)
H5getUlibversion[major:_Symbol,minor:_Symbol,revision:_Symbol]:=
HDF`PInvoke`H5`getUlibversion[major,minor,revision]


(* ::Input::Initialization:: *)
H5open[]:=HDF`PInvoke`H5`open[]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5A"]


(* ::Input::Initialization:: *)
H5Aclose[attributeID:_Integer]:=HDF`PInvoke`H5A`close[attributeID]


(* ::Input::Initialization:: *)
H5Acreate[locationID:_Integer,nameOfAttribute:_String,dataTypeID:_Integer,dataSpaceID:_Integer,acpl:_Integer,aapl:_Integer]:=
HDF`PInvoke`H5A`create[locationID,nameOfAttribute,dataTypeID,dataSpaceID,acpl,aapl]


(* ::Input::Initialization:: *)
H5AgetName[attributeID:_Integer,intPtrOfSize:_Symbol,NETstringBuilder:_Symbol]:=
HDF`PInvoke`H5A`getUname[attributeID,intPtrOfSize,NETstringBuilder]


(* ::Input::Initialization:: *)
H5AgetNumAttrs[___]:=
CompoundExpression[
Message[H5AgetNumAttrs::deprecated],
Abort[]
]


(* ::Input::Initialization:: *)
H5AgetSpace[attributeID:_Integer]:=HDF`PInvoke`H5A`getUspace[attributeID]


(* ::Input::Initialization:: *)
H5AgetStorageSize[attributeID:_Integer]:=HDF`PInvoke`H5A`getUstorageUsize[attributeID]


(* ::Input::Initialization:: *)
H5AgetType[attributeID:_Integer]:=HDF`PInvoke`H5A`getUtype[attributeID]


(* ::Input::Initialization:: *)
H5Aopen[locationID:_Integer,nameOfAttribute:_String,aapl:_Integer]:=HDF`PInvoke`H5A`open[locationID,nameOfAttribute,aapl]


(* ::Input::Initialization:: *)
H5AopenByIdx[locationID:_Integer,nameOfObject:_String,typeOfIndex:_Symbol,traverseOrder:_Symbol,attributePosition:_Integer,aapl:_Integer,lapl:_Integer]:=
HDF`PInvoke`H5A`openUbyUidx[locationID,nameOfObject,typeOfIndex,traverseOrder,attributePosition,aapl,lapl]


(* ::Input::Initialization:: *)
H5AopenByName[locationID:_Integer,nameOfObject:_String,nameOfAttribute:_String,aapl:_Integer,lapl:_Integer]:=
HDF`PInvoke`H5A`openUbyUname[locationID,nameOfObject,nameOfAttribute,aapl,lapl]


(* ::Input::Initialization:: *)
H5Aread[attributeID:_Integer,memoryTypeID:_Integer,intPtrToBuffer:_Symbol]:=
HDF`PInvoke`H5A`read[attributeID,memoryTypeID,intPtrToBuffer]


(* ::Input::Initialization:: *)
H5Awrite[attributeID:_Integer,memoryTypeID:_Integer,intPtrToBuffer:_Symbol]:=
HDF`PInvoke`H5A`write[attributeID,memoryTypeID,intPtrToBuffer]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5D"]


(* ::Input::Initialization:: *)
H5Dclose[dataSetID:_Integer]:=HDF`PInvoke`H5D`close[dataSetID]


(* ::Input::Initialization:: *)
H5Dcreate[fileOrGroupID:_Integer,nameOfDataSet:_String,dataTypeID:_Integer,dataSpaceID:_Integer,lcpl:_Integer,dcpl:_Integer,dapl:_Integer]:=
HDF`PInvoke`H5D`create[fileOrGroupID,nameOfDataSet,dataTypeID,dataSpaceID,lcpl,dcpl,dapl]


(* ::Input::Initialization:: *)
H5DgetCreatePList[dataSetID:_Integer]:=HDF`PInvoke`H5D`getUcreateUplist[dataSetID]


(* ::Input::Initialization:: *)
H5DgetOffset[dataSetID:_Integer]:=HDF`PInvoke`H5D`getUoffset[dataSetID]


(* ::Input::Initialization:: *)
H5DgetSpace[dataSetID:_Integer]:=HDF`PInvoke`H5D`getUspace[dataSetID]


(* ::Input::Initialization:: *)
H5DgetStorageSize[dataSetID:_Integer]:=HDF`PInvoke`H5D`getUstorageUsize[dataSetID]


(* ::Input::Initialization:: *)
H5DgetType[dataSetID:_Integer]:=HDF`PInvoke`H5D`getUtype[dataSetID]


(* ::Input::Initialization:: *)
H5Dopen[fileOrGroupID:_Integer,nameOfDataSet:_String,dapl:_Integer]:=HDF`PInvoke`H5D`open[fileOrGroupID,nameOfDataSet,dapl]


(* ::Input::Initialization:: *)
H5Dread[dataSetID:_Integer,memoryTypeID:_Integer,memorySpaceID:_Integer,fileSpaceID:_Integer, xfer:_Integer,intPtrToBuffer:_Symbol]:=
HDF`PInvoke`H5D`read[dataSetID,memoryTypeID,memorySpaceID,fileSpaceID, xfer,intPtrToBuffer]


(* ::Input::Initialization:: *)
H5DsetExtent[dataSetID:_Integer,sizeEachDimension:_List]:=HDF`PInvoke`H5D`setUextent[dataSetID,sizeEachDimension]


(* ::Input::Initialization:: *)
H5Dwrite[dataSetID:_Integer,memoryTypeID:_Integer,memorySpaceID:_Integer,fileSpaceID:_Integer, xfer:_Integer,intPtrToBuffer:_Symbol]:=
HDF`PInvoke`H5D`write[dataSetID,memoryTypeID,memorySpaceID,fileSpaceID, xfer,intPtrToBuffer]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5E"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5F"]


(* ::Input::Initialization:: *)
H5FuACCuTRUNC=HDF`PInvoke`H5F`ACCUTRUNC


(* ::Input::Initialization:: *)
H5FuACCuEXCL=HDF`PInvoke`H5F`ACCUEXCL


(* ::Input::Initialization:: *)
H5FuACCuRDWR=HDF`PInvoke`H5F`ACCURDWR


(* ::Input::Initialization:: *)
H5FuACCuRDONLY=HDF`PInvoke`H5F`ACCURDONLY


(* ::Input::Initialization:: *)
H5Fclose[fileID:_Integer]:=HDF`PInvoke`H5F`close[fileID]


(* ::Input::Initialization:: *)
H5Fcreate[fileName:_String,flags:_Integer,fcpl:_Integer,fapl:_Integer]:=HDF`PInvoke`H5F`create[fileName,flags,fcpl,fapl]


(* ::Input::Initialization:: *)
H5Fopen[fileName:_String,flags:_Integer,fapl:_Integer]:=HDF`PInvoke`H5F`open[fileName,flags,fapl]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5G"]


(* ::Input::Initialization:: *)
H5Gclose[fileID:_Integer]:=HDF`PInvoke`H5G`close[fileID]


(* ::Input::Initialization:: *)
H5Gcreate[fileOrGroupID:_Integer,nameOfGroup:_String,lcpl:_Integer,gcpl:_Integer,gapl:_Integer]:=
HDF`PInvoke`H5G`create[fileOrGroupID,nameOfGroup,lcpl,gcpl,gapl]


(* ::Input::Initialization:: *)
SetAttributes[H5GgetInfo,HoldRest]


(* ::Input::Initialization:: *)
H5GgetInfo[groupID:_Integer,SymbolForReadDataAsNETObject:_Symbol]:=
HDF`PInvoke`H5G`getUinfo[groupID,SymbolForReadDataAsNETObject]



(* ::Input::Initialization:: *)
H5GgetNumObjs[___]:=
CompoundExpression[
Message[H5GgetNumObjs::deprecated],
Abort[]
]


(* ::Input::Initialization:: *)
H5GgetObjNameByIndex[___]:=
CompoundExpression[
Message[H5GgetObjNameByIndex::deprecated],
Abort[]
]


(* ::Input::Initialization:: *)
H5GgetObjTypeByIndex[___]:=
CompoundExpression[
Message[H5GgetObjTypeByIndex::deprecated],
Abort[]
]


(* ::Input::Initialization:: *)
H5Gopen[fileOrGroupID:_Integer,nameOfGroup:_String,gapl:_Integer]:=HDF`PInvoke`H5G`open[fileOrGroupID,nameOfGroup,gapl]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5I"]


(* ::Input::Initialization:: *)
H5IgetType[objectID:_Integer]:=HDF`PInvoke`H5I`getUtype[objectID]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5L"]


(* ::Input::Initialization:: *)
H5LgetNameByIdx[locationID:_Integer,groupName:_String,typeOfIndex:_Symbol,traverseOrder:_Symbol,namePosition:_Integer,NETstringBuilder:_Symbol,intPtrToBufferSize:_Symbol,lapl:_Integer]:=

HDF`PInvoke`H5L`getUnameUbyUidx[locationID,groupName,typeOfIndex,traverseOrder,namePosition,NETstringBuilder,intPtrToBufferSize,lapl]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5O"]


(* ::Input::Initialization:: *)
H5Oclose[objectID:_Integer]:=HDF`PInvoke`H5O`close[objectID]


(* ::Input::Initialization:: *)
SetAttributes[H5OgetInfo,HoldRest]


(* ::Input::Initialization:: *)
H5OgetInfo[objectID:_Integer,SymbolForReadDataAsNETObject:_Symbol]:=
HDF`PInvoke`H5O`getUinfo[objectID,SymbolForReadDataAsNETObject]


(* ::Input::Initialization:: *)
SetAttributes[H5OgetInfoByIdx,HoldRest]


(* ::Input::Initialization:: *)
H5OgetInfoByIdx[locationID:_Integer,groupName:_String,typeOfIndex:_Symbol,traverseOrder:_Symbol,objectPosition:_Integer,SymbolForReadDataAsNETObject:_Symbol,lapl:_Integer]:=
HDF`PInvoke`H5O`getUinfoUbyUidx[locationID,groupName,typeOfIndex,traverseOrder,objectPosition,SymbolForReadDataAsNETObject,lapl]


(* ::Input::Initialization:: *)
H5Oopen[locationID:_Integer,nameOfObject:_String,lapl:_Integer]:=
HDF`PInvoke`H5O`open[locationID,nameOfObject,lapl]


(* ::Input::Initialization:: *)
H5OopenByIdx[locationID:_Integer,nameOfObject:_String,typeOfIndex:_Symbol,traverseOrder:_Symbol,objectPosition:_Integer,lapl:_Integer]:=
HDF`PInvoke`H5O`openUbyUidx[locationID,nameOfObject,typeOfIndex,traverseOrder,objectPosition,lapl]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5P"]


(* ::Input::Initialization:: *)
H5PuDEFAULT=HDF`PInvoke`H5P`DEFAULT


(* ::Input::Initialization:: *)
H5PuDATASETuCREATE=HDF`PInvoke`H5P`DATASETUCREATE


(* ::Input::Initialization:: *)
H5Pclose[propertyID:_Integer]:=HDF`PInvoke`H5P`close[propertyID]


(* ::Input::Initialization:: *)
H5Pcreate[class:_Integer]:=HDF`PInvoke`H5P`create[class]


(* ::Input::Initialization:: *)
H5PsetChunk[propertyID:_Integer,numberDimensions:_Integer,sizeEachDimension:_List]:=
HDF`PInvoke`H5P`setUchunk[propertyID,numberDimensions,sizeEachDimension]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5PL"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5R"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5S"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5S+seloper_t"]


(* ::Input::Initialization:: *)
H5SuALL=HDF`PInvoke`H5S`ALL


(* ::Input::Initialization:: *)
H5SuUNLIMITED=HDF`PInvoke`H5S`UNLIMITED


(* ::Input::Initialization:: *)
H5SuSELECTuSET=HDF`PInvoke`H5S`seloperUt`SET


(* ::Input::Initialization:: *)
H5SuSELECTuOR=HDF`PInvoke`H5S`seloperUt`OR


(* ::Input::Initialization:: *)
H5SuSELECTuAND=HDF`PInvoke`H5S`seloperUt`AND


(* ::Input::Initialization:: *)
H5SuSELECTuOR=HDF`PInvoke`H5S`seloperUt`XOR


(* ::Input::Initialization:: *)
H5SuSELECTuNOTA=HDF`PInvoke`H5S`seloperUt`NOTA


(* ::Input::Initialization:: *)
H5SuSELECTuNOTB=HDF`PInvoke`H5S`seloperUt`NOTB


(* ::Input::Initialization:: *)
H5Sclose[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`close[dataSpaceID]


(* ::Input::Initialization:: *)
H5Scopy[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`copy[dataSpaceID]


(* ::Input::Initialization:: *)
H5Screate[dataSpaceByTypeID:_Integer]:=HDF`PInvoke`H5S`create[dataSpaceByTypeID]


(* ::Input::Initialization:: *)
H5ScreateUsimple[numberDimensions:_Integer,sizeEachDimension:_List,limitSizeEachDimension:_List|Null]:=
HDF`PInvoke`H5S`createUsimple[numberDimensions,sizeEachDimension,limitSizeEachDimension]


(* ::Input::Initialization:: *)
H5SextentCopy[destinationDataSpaceID:_Integer,sourceDataSpaceID:_Integer]:=HDF`PInvoke`H5S`extentUcopy[destinationDataSpaceID,sourceDataSpaceID]


(* ::Input::Initialization:: *)
H5SgetSelectBounds[dataSpaceID:_Integer,startOffsets:_Symbol,stopOffsets:_Symbol]:=HDF`PInvoke`H5S`getUselectUbounds[dataSpaceID,startOffsets,stopOffsets]


(* ::Input::Initialization:: *)
H5SgetSelectElemNPoints[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`getUselectUelemUnpoints[dataSpaceID]


(* ::Input::Initialization:: *)
H5SgetSelectHyperNBlocks[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`getUselectUhyperUnblocks[dataSpaceID]


(* ::Input::Initialization:: *)
H5SgetSelectNPoints[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`getUselectUnpoints[dataSpaceID]


(* ::Input::Initialization:: *)
H5SgetSelectType[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`getUselectUtype[dataSpaceID]


(* ::Input::Initialization:: *)
H5SgetSimpleExtentDims[dataSpaceID:_Integer,sizeEachDimension:_Symbol|Null,maxSizeEachDimension:_Symbol|Null]:=HDF`PInvoke`H5S`getUsimpleUextentUdims[dataSpaceID,sizeEachDimension,maxSizeEachDimension]


(* ::Input::Initialization:: *)
H5SgetSimpleExtentNDims[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`getUsimpleUextentUndims[dataSpaceID]


(* ::Input::Initialization:: *)
H5SgetSimpleExtentNPoints[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`getUsimpleUextentUnpoints[dataSpaceID]


(* ::Input::Initialization:: *)
H5SisSimple[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`isUsimple[dataSpaceID]


(* ::Input::Initialization:: *)
H5SselectAll[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`selectUall[dataSpaceID]


(* ::Input::Initialization:: *)
H5SselectElements[dataSpaceID:_Integer,selectionOperator:_Symbol,intPtrSize:_Symbol,points:_List]:=
HDF`PInvoke`H5S`selectUelements[dataSpaceID,selectionOperator,intPtrSize,points]


(* ::Input::Initialization:: *)
H5SselectHyperSlab[dataSpaceID:_Integer,selectionOperator:_Symbol,start:_List,stride:_List|Null,count:_List,block:_List|Null]:=
HDF`PInvoke`H5S`selectUhyperslab[dataSpaceID,selectionOperator,start,stride,count,block]


(* ::Input::Initialization:: *)
H5SselectNone[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`selectUnone[dataSpaceID]


(* ::Input::Initialization:: *)
H5SselectValid[dataSpaceID:_Integer]:=HDF`PInvoke`H5S`selectUvalid[dataSpaceID]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5T"]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5T+direction_t"]


(* ::Input::Initialization:: *)
H5TuNATIVEuINT=HDF`PInvoke`H5T`NATIVEUINT


(* ::Input::Initialization:: *)
(* used by H5TgetNativeType for search direction *)
H5TuDEFAULT=HDF`PInvoke`H5T`directionUt`DEFAULT


(* ::Input::Initialization:: *)
H5Tclose[dataTypeID:_Integer]:=HDF`PInvoke`H5T`close[dataTypeID]


(* ::Input::Initialization:: *)
H5Tcopy[dataTypeID:_Integer]:=HDF`PInvoke`H5T`copy[dataTypeID]


(* ::Input::Initialization:: *)
H5TgetArrayDims[dataTypeID:_Integer,sizeEachDimension:_Symbol]:=HDF`PInvoke`H5T`getUarrayUdims[dataTypeID,sizeEachDimension]


(* ::Input::Initialization:: *)
H5TgetArrayNDims[dataTypeID:_Integer]:=HDF`PInvoke`H5T`getUarrayUndims[dataTypeID]


(* ::Input::Initialization:: *)
H5TgetClass[dataTypeID:_Integer]:=HDF`PInvoke`H5T`getUclass[dataTypeID]


(* ::Input::Initialization:: *)
H5TgetCSet[dataTypeID:_Integer]:=HDF`PInvoke`H5T`getUcset[dataTypeID]


(* ::Input::Initialization:: *)
H5TgetMemberIndex[compoundDataTypeID:_Integer,nameOfMember:_String]:=HDF`PInvoke`H5T`getUmemberUindex[compoundDataTypeID,nameOfMember]


(* ::Input::Initialization:: *)
H5TgetMemberClass[compoundDataTypeID:_Integer,memberIndex:_Integer]:=
HDF`PInvoke`H5T`getUmemberUclass[compoundDataTypeID,memberIndex]


(* ::Input::Initialization:: *)
H5TgetMemberName[compoundDataTypeID:_Integer,memberIndex:_Integer]:=
HDF`PInvoke`H5T`getUmemberUname[compoundDataTypeID,memberIndex]


(* ::Input::Initialization:: *)
H5TgetMemberOffset[compoundDataTypeID:_Integer,memberIndex:_Integer]:=
HDF`PInvoke`H5T`getUmemberUoffset[compoundDataTypeID,memberIndex]


(* ::Input::Initialization:: *)
H5TgetMemberType[compoundDataTypeID:_Integer,memberIndex:_Integer]:=HDF`PInvoke`H5T`getUmemberUtype[compoundDataTypeID,memberIndex]


(* ::Input::Initialization:: *)
H5TgetNativeType[dataTypeID:_Integer,searchDirection:_Symbol]:=HDF`PInvoke`H5T`getUnativeUtype[dataTypeID,searchDirection]


(* ::Input::Initialization:: *)
H5TgetNMembers[compoundDataTypeID:_Integer]:=HDF`PInvoke`H5T`getUnmembers[compoundDataTypeID]


(* ::Input::Initialization:: *)
H5TgetSign[dataTypeID:_Integer]:=HDF`PInvoke`H5T`getUsign[dataTypeID]


(* ::Input::Initialization:: *)
H5TgetSize[dataTypeID:_Integer]:=HDF`PInvoke`H5T`getUsize[dataTypeID]


(* ::Input::Initialization:: *)
H5TgetStrPad[dataTypeID:_Integer]:=HDF`PInvoke`H5T`getUstrpad[dataTypeID]


(* ::Input::Initialization:: *)
H5TgetSuper[dataTypeID:_Integer]:=HDF`PInvoke`H5T`getUsuper[dataTypeID]


(* ::Input::Initialization:: *)
H5TisVariableStr[dataTypeID:_Integer]:=HDF`PInvoke`H5T`isUvariableUstr[dataTypeID]


(* ::Input::Initialization:: *)
H5TsetSize[dataTypeID:_Integer,intPtrToSize:_Symbol]:=HDF`PInvoke`H5T`setUsize[dataTypeID,intPtrToSize]


(* ::Input::Initialization:: *)
LoadNETType["HDF.PInvoke.H5Z"]


(* ::Input::Initialization:: *)
EndPackage[]
